filter(beneficiary_group %out% c("all", "cwd") & !is.na(beneficiary_group)) %>%
ggplot(aes(x = value, y = unicef_indicator_number)) +
geom_col(aes(fill = beneficiary_group))
combined %>%
filter(!str_detect(unicef_indicator, "6")) %>%
group_by(unicef_indicator_number, beneficiary_group) %>%
summarise(value = sum(value, na.rm = TRUE)) %>%
filter(beneficiary_group %out% c("all", "cwd") & !is.na(beneficiary_group)) %>%
mutate(unicef_indicator_number = as.character.factor(unicef_indicator_number)) %>%
ggplot(aes(x = value, y = unicef_indicator_number)) +
geom_col(aes(fill = beneficiary_group),
position = )
combined %>%
filter(!str_detect(unicef_indicator, "6")) %>%
group_by(unicef_indicator_number, beneficiary_group) %>%
summarise(value = sum(value, na.rm = TRUE)) %>%
filter(beneficiary_group %out% c("all", "cwd") & !is.na(beneficiary_group)) %>%
mutate(unicef_indicator_number = as.factor(unicef_indicator_number)) %>%
ggplot(aes(x = value, y = unicef_indicator_number)) +
geom_col(aes(fill = beneficiary_group),
position = position_stack())
combined %>%
filter(!str_detect(unicef_indicator, "6")) %>%
group_by(unicef_indicator_number, beneficiary_group) %>%
summarise(value = sum(value, na.rm = TRUE)) %>%
filter(beneficiary_group %out% c("all", "cwd") & !is.na(beneficiary_group)) %>%
mutate(unicef_indicator_number = as.factor(unicef_indicator_number),
unicef_indicator_number = fct_rev(unicef_indicator_number)) %>%
ggplot(aes(x = value, y = unicef_indicator_number)) +
geom_col(aes(fill = beneficiary_group),
position = position_stack()) +
scale_fill_viridis_d()
combined %>%
filter(!str_detect(unicef_indicator, "6")) %>%
group_by(unicef_indicator_number, beneficiary_group) %>%
summarise(value = sum(value, na.rm = TRUE)) %>%
filter(beneficiary_group %out% c("all", "cwd") & !is.na(beneficiary_group)) %>%
mutate(unicef_indicator_number = as.factor(unicef_indicator_number),
unicef_indicator_number = fct_rev(unicef_indicator_number)) %>%
ggplot(aes(x = value, y = unicef_indicator_number)) +
geom_col(aes(fill = beneficiary_group),
position = position_stack()) +
scale_fill_viridis_d(begin = .2)
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(viridis)
library(patchwork)
library(DT)
library(here)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(anytime)
library(tidytext)
library(ggsflabel)
theme_set(theme_light())
# Installation of mdepriv package
# install package devtools if not yet installed
#   install.packages("devtools")
# install fast from GitHub without vignettes
#   devtools::install_github("a-benini/mdepriv", build_vignettes = FALSE
# Alternatively, follow the instructions here: https://a-benini.github.io/mdepriv/
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
# mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# Fixing dates
name_to_date <- function(x) {
lubridate::mdy(ifelse(x %in% c(month.name, month.abb), paste0(x, "/01/2023"), x))
}
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM2") %>%
clean_names()
eie <- read_csv("./data/eie_5ws.csv") %>%
filter(!is.na(indicator_short))
report_date <- "25 June 2023"
report_month <- "June"
sitrep_table <- read_xlsx("./data/sitrep_results_table.xlsx") %>%
clean_names()
targets <- read_csv("./data/eie_targets.csv")
pcode1_shape <-
sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp",
quiet = TRUE) %>%
clean_names()
ipc <- read_csv("./data/ipc.csv")
partner_list_counties <- read_csv("./data/partner_list_counties.csv") %>%
filter(partner_type == "implementing_partner")
knitr::opts_chunk$set(echo = TRUE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(magrittr)
library(viridis)
library(here)
library(flextable)
library(writexl)
library(naniar)
library(anytime)
library(widyr)
library(tidytext)
theme_set(theme_light())
# Disabling scientific notation
options(scipen = 100)
# This should just be a standard R function
`%out%` <- Negate(`%in%`)
# Function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# Scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
# Mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
partners_raw  <- read_csv("./data/partner_names_raw.csv") %>%
clean_names() %>%
distinct(partner_type, agency_name, acronym) %>%
mutate_at(vars(agency_name, acronym), ~ str_trim(str_squish(.))) %>%
filter(agency_name %out% c("National Council for Nomadic Education Kenya",
"National Council of Nomadic Education in Kenya",
"MINISTRY OF EDUCATION",
"ChildFund",
"Childfund",
"CISP Kenya",
"Comitato Internazionale per lo Sviluppo dei Popoli (International Committee for the Development of Peoples) - CISP Kenya.",
"Jesuits Refugee Service",
"Save the Children International",
"AVSI FAOUNDATION",
"ChildFund kenya",
"Kenya RedCross Society",
"FINN CHURCH AID",
"Concern worldwide",
"Dignitas Limited",
"AVSI FOUDNATION")) %>%
mutate(agency_name = recode(agency_name,
"Action for sustainable change" = "Action for Sustainable Change",
"AVSI FOUNDATION" = "AVSI Foundation",
"QATAR CHARITY" = "Qatar Charity",
"Life Skills Promoters" = "Lifeskills Promoters",
"Girl Child Network" = "The Girl Child Network",
"WE WORLD" = "We World")) %>%
mutate(acronym = case_when(agency_name == "Christian Blind Mission"~ "CBM",
agency_name == "Concern Worldwide" ~ "CW",
agency_name == "Finn Church Aid" ~ "FCA",
agency_name == "Mondo" ~ "Mondo",
agency_name == "Plan International Kenya" ~ "PLAN",
agency_name == "Rotary International" ~ "RI",
agency_name == "World Vision Kenya" ~ "WVK",
agency_name == "FilmAid Kenya" ~ "FA",
agency_name == "ResQ247" ~ "ResQ",
agency_name == "LEGO Foundation" ~ "LEGO",
agency_name == "St Paul's university" ~ "SPU",
agency_name == "Dignitas" ~ "DIGN",
agency_name == "EducAid" ~ "EducAid",
agency_name == "Humanity & Inclusion" ~ "H&I",
agency_name == "Build Africa Kenya" ~ "BAK",
agency_name == "Edukans Kenya" ~ "Edukans",
agency_name == "Action for Sustainable Change" ~ "AFOSC",
agency_name == "Elimu Yetu Coalition" ~ "EYC",
agency_name == "CRESNET CBO" ~ "CRES",
agency_name == "MOE Wajir" ~ "MOE Wajir",
agency_name == "Qatar Charity" ~ "QATAR",
agency_name == "Education Management & Leadership" ~ "EML",
agency_name == "International Aid Services Kenya" ~ "IASK",
agency_name == "Worldreader" ~ "WR",
agency_name == "ChildFund Kenya" ~ "CF",
agency_name == "The Girl Child Network" ~ "GCN",
TRUE ~ acronym)) %>%
distinct(partner_type, partner = agency_name, acronym) %>%
arrange(partner)
# eie <- read_csv("./data/eie_5ws.csv")
partner_list_counties <- eie %>%
mutate_at(vars(lead_organisation, implementing_partner), ~ str_trim(str_squish(.))) %>%
mutate(lead_organisation = ifelse(lead_organisation == implementing_partner,
NA_character_,
lead_organisation)) %>%
select(county, adm1_pcode, lead_organisation, implementing_partner) %>%
pivot_longer(cols = c(lead_organisation, implementing_partner),
names_to = "partner_type",
values_to = "partner") %>%
filter(!is.na(partner)) %>%
left_join(partners_raw %>%
select(partner, acronym),
by = "partner") %>%
mutate(acronym = case_when(partner == "Food for the Hungry" ~ "FHK",
partner == "Nawiri Children Development Program" ~ "NCDP",
partner == "Frontiers Community Development Program" ~ "FCDP",
partner == "Homa Bay County" ~ "HBC",
partner == "Special Olympics Kenya" ~ "SOK",
partner == "Servants of the Poor" ~ "SP",
partner == "Evangelizing Sisters of Mary" ~ "ESM",
partner == "IWS" ~ "IWS",
partner == "CDE Wajir" ~ "CDE Wajir",
partner == "Missionary Sisters of the Catechism" ~ "MCS",
partner == "ERIKs Development Partner" ~ "ERIKs",
partner == "SMB" ~ "SMB",
partner == "Mondi" ~ "MON",
partner == "Bartabwa" ~ "BART",
partner == "CDE Mandera" ~ "CDE Mandera",
partner == "Windle International Kenya" ~ "WIK",
partner == "The Girl Child Network" ~ "GCN",
partner == "Futebol da Forcaa" ~ "FUTE",
partner == "Ministry of Education" ~ "MOE",
partner == "UNICEF" ~ "UNICEF",
partner == "ChildFund Kenya" ~ "CF",
partner == "County Director of Education Wajir" ~ "CDE Wajir",
partner == "County Director of Education Mandera" ~ "CDE Mandera",
TRUE ~ acronym)) %>%
mutate(partner = str_replace_all(partner, "CDE", "County Director of Education"),
partner = str_replace_all(partner, "Girl Child Network|The Girl Child Network",
"The Girl Child Network"),
acronym = ifelse(partner == "The Girl Child Network", "GCN", acronym))
partner_list_counties %>%
write_csv("./data/partner_list_counties.csv")
partner_list_counties %>%
filter(partner_type == "implementing_partner") %>%
write_csv("./data/partner_list_counties_only_ip.csv")
partner_list_counties <- read_csv("./data/partner_list_counties.csv") %>%
filter(partner_type == "implementing_partner")
eie %>%
filter(!is.na(names_numbers_schools)) %>%
slice(10) %>%
pull(names_numbers_schools)
eie %>%
filter(!is.na(names_numbers_schools)) %>%
slice(12) %>%
pull(names_numbers_schools)
eie %>%
filter(!is.na(names_numbers_schools)) %>%
slice(11) %>%
pull(names_numbers_schools)
eie %>%
filter(!is.na(names_numbers_schools)) %>%
slice(11) %>%
select(names_numbers_schools, schools)
eie %>%
filter(!is.na(names_numbers_schools)) %>%
slice(11) %>%
select(school_text = names_numbers_schools, school_number = schools)
eie %>%
filter(!is.na(names_numbers_schools)) %>%
slice(11) %>%
select(schools_text = names_numbers_schools, schools_number = schools) %>%
flextable() %>%
set_table_properties(layout = "autofit", width = .9)
eie %>%
filter(!is.na(names_numbers_schools)) %>%
slice(11, 12) %>%
select(Schools_text = names_numbers_schools, Schools_number = schools) %>%
flextable() %>%
set_table_properties(layout = "autofit", width = .9)
eie %>%
filter(!is.na(names_numbers_schools)) %>%
slice(11, 12, 13) %>%
select(Schools_text = names_numbers_schools, Schools_number = schools) %>%
flextable() %>%
set_table_properties(layout = "autofit", width = .9)
eie %>%
filter(!is.na(names_numbers_schools)) %>%
slice(11, 12, 13) %>%
select(Schools_text = names_numbers_schools, Schools_number = schools) %>%
flextable() %>%
set_table_properties(layout = "autofit", width = .9) %>%
set_caption("Schools column is a mix of text and numbers")
eie %>%
filter(!is.na(sub_county)) %>%
sample_n(10) %>%
pull(sub_county)
eie %>%
filter(!is.na(sub_county)) %>%
slice(20:25)
eie %>%
filter(!is.na(sub_county)) %>%
slice(20:25) %>%
select(county, sub_county)
eie %>%
write_csv("./data/eie_5ws_20230724")
eie %>%
write_csv("./data/eie_5ws_20230724.csv")
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(!is.na(sub_county)) %>%
slice(20:25) %>%
select(county, sub_county)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(!is.na(sub_county)) %>%
slice(15:20) %>%
select(county, sub_county)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(!is.na(sub_county)) %>%
slice(15:20) %>%
select(county, sub_county, total_reached)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(!is.na(sub_county)) %>%
slice(15:20) %>%
select(county, sub_county, total_reached) %>%
flextable() %>%
theme_zebra() %>%
set_caption("There is more than one sub-county per row")
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(!is.na(sub_county)) %>%
slice(15:20) %>%
select(county, sub_county, total_reached) %>%
flextable() %>%
theme_zebra() %>%
set_caption("There is more than one sub-county per row") %>%
set_table_properties(layout = "autofit", width = .9)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(!is.na(sub_county)) %>%
slice(15:20) %>%
select(county, sub_county, total_reached) %>%
flextable() %>%
theme_zebra() %>%
set_caption("There is more than one sub-county per row") %>%
set_table_properties(layout = "autofit", width = .7)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(!is.na(sub_county)) %>%
slice(15:20) %>%
select(county, sub_county, total_reached) %>%
mutate_at(vars(county, sub_county, total_reached),
~ str_to_title(.)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("There is more than one sub-county per row") %>%
set_table_properties(layout = "autofit", width = .7)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(!is.na(sub_county)) %>%
slice(15:20) %>%
select(county, sub_county, total_reached) %>%
select_all(~ str_to_title(.)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("There is more than one sub-county per row") %>%
set_table_properties(layout = "autofit", width = .7)
read_csv("./data/eie_5ws_20230724.csv") %>%
mutate(multiple_sub_counties = ifelse(str_detect(sub_county, ","),
TRUE, FALSE)) %>%
group_by(multiple_sub_counties) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE))
read_csv("./data/eie_5ws_20230724.csv") %>%
mutate(multiple_sub_counties = ifelse(str_detect(sub_county, ","),
TRUE, FALSE)) %>%
filter(is.na(sub_county))
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(multiple_sub_counties = ifelse(str_detect(sub_county, ","),
TRUE, FALSE)) %>%
filter(is.na(sub_county))
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
filter(!is.na(sub_county)) %>%
slice(15:20) %>%
select(county, sub_county, total_reached) %>%
select_all(~ str_to_title(.)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("There is more than one sub-county per row") %>%
set_table_properties(layout = "autofit", width = .7)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(multiple_sub_counties = ifelse(str_detect(sub_county, ","),
TRUE, FALSE)) %>%
filter(is.na(sub_county)) %>% {sum(.$total_reached)}
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(multiple_sub_counties = ifelse(str_detect(sub_county, ","),
TRUE, FALSE)) %>%
filter(is.na(sub_county)) %>%
group_by(multiple_sub_counties) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE))
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(multiple_sub_counties = ifelse(str_detect(sub_county, ","),
TRUE, FALSE)) %>%
group_by(multiple_sub_counties) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE))
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(multiple_sub_counties = ifelse(str_detect(sub_county, ","),
TRUE, FALSE)) %>%
group_by(multiple_sub_counties) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(`%_total` = round(total_reached / sum(total_reached) * 100, digits = 2))
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(multiple_sub_counties = ifelse(str_detect(sub_county, ","),
TRUE, FALSE)) %>%
group_by(multiple_sub_counties) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(`%_total` = round(total_reached / sum(total_reached) * 100, digits = 2)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("There is more than one sub-county per row") %>%
set_table_properties(layout = "autofit", width = .7)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(multiple_sub_counties = ifelse(str_detect(sub_county, ","),
TRUE, FALSE)) %>%
group_by(multiple_sub_counties) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(`%_total` = round(total_reached / sum(total_reached) * 100, digits = 2),
multiple_sub_counties = ifelse(is.na(multiple_sub_counties), "NA", multiple_sub_counties)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("There is more than one sub-county per row") %>%
set_table_properties(layout = "autofit", width = .7)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(one_sub_county = ifelse(str_detect(sub_county, ","),
FALSE, TRUE)) %>%
group_by(one_sub_county) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(`%_total` = round(total_reached / sum(total_reached) * 100, digits = 2),
one_sub_county = ifelse(is.na(one_sub_county), "NA", one_sub_county)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("86% of beneficiaries reported ") %>%
set_table_properties(layout = "autofit", width = .7)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(one_sub_county = ifelse(str_detect(sub_county, ","),
FALSE, TRUE)) %>%
group_by(one_sub_county) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(`%_total` = round(total_reached / sum(total_reached) * 100, digits = 2),
one_sub_county = ifelse(is.na(one_sub_county), "NA", one_sub_county),
one_sub_county = fct_relevel(one_sub_county, c("TRUE", "FALSE", "NA"))) %>%
flextable() %>%
theme_zebra() %>%
set_caption("86% of beneficiaries reported ") %>%
set_table_properties(layout = "autofit", width = .7)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(one_sub_county = ifelse(str_detect(sub_county, ","),
FALSE, TRUE)) %>%
group_by(one_sub_county) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(`%_total` = round(total_reached / sum(total_reached) * 100, digits = 2),
one_sub_county = ifelse(is.na(one_sub_county), "NA", one_sub_county),
one_sub_county = fct_relevel(one_sub_county, c("TRUE", "FALSE", "NA"))) %>%
arrange(one_sub_county) %>%
flextable() %>%
theme_zebra() %>%
set_caption("86% of beneficiaries reported ") %>%
set_table_properties(layout = "autofit", width = .7)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(!is.na(names_numbers_schools)) %>%
filter(activity_status == "Completed") %>%
slice(11, 12, 13) %>%
select(Schools_text = names_numbers_schools, Schools_number = schools) %>%
flextable() %>%
set_table_properties(layout = "autofit", width = .9) %>%
set_caption("Schools column is a mix of text and numbers")
eie %>% filter(indicator_short == "3. Teaching materials" &
activity_status == "Completed") %>%
group_by(month) %>%
summarise(total_reached = sum(total_reached)) %>%
adorn_totals("row")
eie %>%
filter(activity_status == "Completed") %>%
mutate(latest_reached = ifelse(month %in% report_month, total_reached, NA_integer_)) %>%
group_by(indicator_short) %>%
summarise(partners = n_distinct(implementing_partner),
counties = n_distinct(adm1_pcode),
latest_reached = sum(latest_reached, na.rm = TRUE),
total_reached = sum(total_reached, na.rm = TRUE))
eie %>%
mutate_at(vars(girls, boys, men, women), ~ replace_na(., 0)) %>%
filter(!is.na(education_level)) %>%
mutate(children = boys + girls) %>%
group_by(education_level) %>%
summarise(children = sum(children)) %>%
arrange(desc(children)) %>%
mutate(`%_of_total` = round(children / sum(children) * 100, digits = 2)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("Children reached by education level") %>%
set_table_properties(layout = "autofit", width = .6)
