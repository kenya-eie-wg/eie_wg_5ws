scale_x_continuous(labels = number_format(scale = 1/1000, suffix = "K")) +
scale_fill_viridis(option = "inferno", begin = .4, , direction = -1,
labels = percent) +
facet_grid(~ type, scales = "free_x", space = "free") +
labs(fill = "% IPC3+",
x = "Target/reached",
y = "",
caption = "Colours refer to % of county population in IPC phase 3 or above. Homa Bay was not assessed as part of the IPC Classification",
title = "Comparison between targets and reached") +
theme(# axis.text.x = element_text(size = 5, angle = 60, hjust = 1, vjust = 1),
# axis.text.y = element_text(size = 5),
strip.text = element_text(size = 8, face = "bold"),
strip.background = element_rect(fill = "#212121"),
plot.caption = element_text(hjust = .5))
eie %>%
group_by(adm1_pcode, county) %>%
summarise(sector_reached = sum(sector_reached, na.rm = TRUE),
.groups = "drop")
eie %>%
group_by(adm1_pcode, county) %>%
summarise(sector_reached = sum(sector_reached, na.rm = TRUE),
.groups = "drop") %>%
left_join(targets %>%
distinct(county, target = county_overall_target),
by = "county")
eie %>%
group_by(adm1_pcode, county) %>%
summarise(sector_reached = sum(sector_reached, na.rm = TRUE),
.groups = "drop") %>%
left_join(targets %>%
distinct(county, target = county_overall_target),
by = "county") %>%
mutate(county = fct_reorder(county, sector_reached)) %>%
filter(sector_reached > 0 | target > 0) %>%
left_join(ipc %>%
select(adm1_pcode, percent_phase_p3),
by = "adm1_pcode") %>%
pivot_longer(cols = c(sector_reached, target),
names_to = "type",
values_to = "value") %>%
mutate(type = ifelse(type == "target", "County Target", "Sector Reached")) %>%
replace_na(list(value = 0)) %>%
ggplot(aes(x = value,
y = county,
fill = percent_phase_p3)) +
geom_col() +
geom_text(aes(label = comma(value)), hjust = "inward") +
scale_x_continuous(labels = number_format(scale = 1/1000, suffix = "K")) +
scale_fill_viridis(option = "inferno", begin = .4, , direction = -1,
labels = percent) +
facet_grid(~ type, scales = "free_x", space = "free") +
labs(fill = "% IPC3+",
x = "Target/reached",
y = "",
caption = "Colours refer to % of county population in IPC phase 3 or above. Homa Bay was not assessed as part of the IPC Classification",
title = "Comparison between targets and reached") +
theme(# axis.text.x = element_text(size = 5, angle = 60, hjust = 1, vjust = 1),
# axis.text.y = element_text(size = 5),
strip.text = element_text(size = 8, face = "bold"),
strip.background = element_rect(fill = "#212121"),
plot.caption = element_text(hjust = .5))
eie %>%
group_by(adm1_pcode, county) %>%
summarise(sector_reached = sum(sector_reached, na.rm = TRUE),
.groups = "drop") %>%
left_join(targets %>%
distinct(county, target = county_overall_target),
by = "county") %>%
mutate(county = fct_reorder(county, sector_reached)) %>%
filter(sector_reached > 0 | target > 0) %>%
left_join(ipc %>%
select(adm1_pcode, percent_phase_p3),
by = "adm1_pcode")
eie %>%
group_by(adm1_pcode, county) %>%
summarise(sector_reached = sum(sector_reached, na.rm = TRUE),
.groups = "drop") %>%
left_join(targets %>%
distinct(county, target = county_overall_target),
by = "county") %>%
mutate(county = fct_reorder(county, sector_reached)) %>%
filter(sector_reached > 0 | target > 0) %>%
left_join(ipc %>%
select(adm1_pcode, percent_phase_p3),
by = "adm1_pcode") %>%
pivot_longer(cols = c(sector_reached, target),
names_to = "type",
values_to = "value") %>%
mutate(type = ifelse(type == "target", "County Target", "Sector Reached")) %>%
replace_na(list(value = 0))
eie %>%
group_by(adm1_pcode, county) %>%
summarise(sector_reached = sum(sector_reached, na.rm = TRUE),
.groups = "drop") %>%
left_join(targets %>%
distinct(county, target = county_overall_target),
by = "county") %>%
mutate(county = fct_reorder(county, sector_reached)) %>%
filter(sector_reached > 0 | target > 0) %>%
left_join(ipc %>%
select(adm1_pcode, percent_phase_p3),
by = "adm1_pcode") %>%
pivot_longer(cols = c(sector_reached, target),
names_to = "type",
values_to = "value") %>%
mutate(type = ifelse(type == "target", "County Target", "Sector Reached")) %>%
replace_na(list(value = 0)) %>%
ggplot(aes(x = value,
y = county,
fill = percent_phase_p3)) +
geom_col() +
geom_text(aes(label = comma(value)), hjust = "inward") +
scale_x_continuous(labels = number_format(scale = 1/1000, suffix = "K")) +
scale_fill_viridis(option = "inferno", begin = .4, , direction = -1,
labels = percent) +
facet_grid(~ type, scales = "free_x", space = "free") +
labs(fill = "% IPC3+",
x = "Target/reached",
y = "",
caption = "Colours refer to % of county population in IPC phase 3 or above. Homa Bay was not assessed as part of the IPC Classification",
title = "Comparison between targets and reached") +
theme(# axis.text.x = element_text(size = 5, angle = 60, hjust = 1, vjust = 1),
# axis.text.y = element_text(size = 5),
strip.text = element_text(size = 8, face = "bold"),
strip.background = element_rect(fill = "#212121"),
plot.caption = element_text(hjust = .5))
eie %>%
group_by(adm1_pcode, county) %>%
summarise(sector_reached = sum(sector_reached, na.rm = TRUE),
.groups = "drop") %>%
left_join(targets %>%
distinct(county, target = county_overall_target),
by = "county") %>%
filter(sector_reached > 0 | target > 0) %>%
replace_na(list(target = 0)) %>%
mutate(gap = target - sector_reached,
gap_pc = ifelse(is.infinite(gap / target),
-1,
gap / target)) %>%
mutate_at(vars(sector_reached, target, gap, gap_pc), ~ as.numeric(.)) %>%
right_join(pcode1_shape,
by = "adm1_pcode") %>%
st_as_sf() %>%
mutate(label = paste0(comma(gap), "\n", percent(gap_pc)),
label = ifelse(str_detect(label, "NA"), "", label)) %>%
ggplot() +
geom_sf(size = 0.1, colour = "grey70",
aes(fill = gap_pc)) +
geom_sf_text(aes(label = label),
colour = "grey50", size = 2) +
scale_fill_viridis(labels = percent,
na.value = "grey80",
option = "turbo",
begin = .3,
breaks = c(-1, -.5, 0, .5, .99)) +
theme_void() +
labs(title = "Gaps in Drought Response",
subtitle = "In terms of number of beneficiaries and % of target reached",
fill = "Gap %")
eie %>%
group_by(adm1_pcode, county) %>%
summarise(sector_reached = sum(sector_reached, na.rm = TRUE),
.groups = "drop") %>%
left_join(targets %>%
distinct(county, target = county_overall_target),
by = "county") %>%
filter(sector_reached > 0 | target > 0) %>%
replace_na(list(target = 0)) %>%
mutate(gap = target - sector_reached,
gap_pc = ifelse(is.infinite(gap / target * 100),
-100,
round(gap / target * 100, digits = 2))) %>%
select(County = county,
Target = target,
Reached = sector_reached,
Gap = gap,
`Gap%` = gap_pc) %>%
arrange(desc(`Gap%`)) %>%
flextable() %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .7) %>%
set_caption("Gaps between reached and targets")
eie %>%
group_by(adm1_pcode, county) %>%
summarise(sector_reached = sum(sector_reached, na.rm = TRUE),
.groups = "drop") %>%
left_join(targets %>%
distinct(county, target = county_overall_target),
by = "county") %>%
filter(sector_reached > 0 | target > 0) %>%
replace_na(list(target = 0)) %>%
mutate(gap = target - sector_reached,
gap_pc = ifelse(is.infinite(gap / target * 100),
-100,
round(gap / target * 100, digits = 2))) %>%
select(County = county,
Target = target,
Reached = sector_reached,
Gap = gap,
`Gap%` = gap_pc) %>%
arrange(desc(`Gap%`))
line_values <- eie %>%
filter(activity_status == "Completed") %>%
group_by(indicator_short) %>%
summarise(beneficiaries = sum(total_reached, na.rm = TRUE))
eie %>%
filter(activity_status == "Completed") %>%
mutate(date = name_to_date(month)) %>%
group_by(date, indicator_short) %>%
summarise(beneficiaries = sum(total_reached, na.rm = TRUE)) %>%
group_by(indicator_short) %>%
arrange(date) %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
arrange(indicator_short) %>%
ggplot(aes(x = date, y = cum_ben, colour = indicator_short)) +
stat_smooth(geom = "line", apha = .3, span = .5) +
geom_point() +
geom_text(aes(label = comma(beneficiaries)),
x = -Inf, y = Inf, hjust = -0.15, vjust = 0.9, data = line_values) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_y_continuous(labels = comma) +
facet_wrap(~indicator_short, scales = "free_y") +
theme(legend.position = "none",
axis.text.x = element_text(size = 6, angle = 60, hjust = 1, vjust = 1),
axis.text.y = element_text(size = 6),
strip.text = element_text(size = 6, face = "bold"),
strip.background = element_rect(fill = "#212121"),
plot.title = element_text(size = 12)) +
labs(x = "",
y = "Cumulative interventions",
title = paste0("Monthly progress by activity, ", params$report_date),
subtitle = "Indicator subtotal in the top-left corner of each facet")
line_values <- eie %>%
filter(activity_status == "Completed") %>%
group_by(indicator_short) %>%
summarise(beneficiaries = sum(total_reached, na.rm = TRUE))
line_values
line_values <- eie %>%
filter(activity_status == "Completed") %>%
group_by(indicator_short) %>%
summarise(beneficiaries = sum(total_reached, na.rm = TRUE))
eie %>%
filter(activity_status == "Completed") %>%
mutate(date = name_to_date(month)) %>%
group_by(date, indicator_short) %>%
summarise(beneficiaries = sum(total_reached, na.rm = TRUE)) %>%
group_by(indicator_short) %>%
arrange(date) %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
arrange(indicator_short)
eie %>%
filter(activity_status == "Completed") %>%
mutate(date = name_to_date(month)) %>%
group_by(date, indicator_short) %>%
summarise(beneficiaries = sum(total_reached, na.rm = TRUE)) %>%
group_by(indicator_short) %>%
arrange(date) %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
arrange(indicator_short) %>%
ggplot(aes(x = date, y = cum_ben, colour = indicator_short)) +
stat_smooth(geom = "line", apha = .3, span = .5) +
geom_point() +
geom_text(aes(label = comma(beneficiaries)),
x = -Inf, y = Inf, hjust = -0.15, vjust = 0.9, data = line_values) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_y_continuous(labels = comma) +
facet_wrap(~indicator_short, scales = "free_y") +
theme(legend.position = "none",
axis.text.x = element_text(size = 6, angle = 60, hjust = 1, vjust = 1),
axis.text.y = element_text(size = 6),
strip.text = element_text(size = 6, face = "bold"),
strip.background = element_rect(fill = "#212121"),
plot.title = element_text(size = 12)) +
labs(x = "",
y = "Cumulative interventions",
title = paste0("Monthly progress by activity, ", params$report_date),
subtitle = "Indicator subtotal in the top-left corner of each facet")
eie %>%
group_by(indicator_short) %>%
summarise(reached = sum(total_reached, na.rm = TRUE)) %>%
ggplot(aes(x = reached, y = fct_rev(indicator_short))) +
geom_col(aes(fill = indicator_short)) +
scale_fill_viridis_d(option = "plasma",
direction = -1,
end = .8) +
geom_text(aes(label = comma(reached)),
hjust = "inward") +
scale_x_continuous(labels = comma) +
labs(x = paste0("Total reached as of ", params$report_date),
y = "",
title = "Persons reached by each EiE indicator") +
theme(legend.position = "none")
summary_table %>%
filter(str_detect(Indicator, "1")) %>%
flextable() %>%
set_caption(paste0("EiE Indicator 1, as of ", params$report_date)) %>%
set_table_properties(layout = "autofit", width = .99)
summary_table <- eie %>%
filter(activity_status == "Completed") %>%
mutate(latest_reached = ifelse(month %in% params$report_month, total_reached, NA_integer_)) %>%
group_by(indicator_short) %>%
summarise(partners = n_distinct(implementing_partner),
counties = n_distinct(adm1_pcode),
latest_reached = sum(latest_reached, na.rm = TRUE),
total_reached = sum(total_reached, na.rm = TRUE)) %>%
adorn_totals("row",,,, latest_reached, total_reached) %>%
mutate(partners = ifelse(indicator_short == "Total", sum_stats$partners, partners),
counties = ifelse(indicator_short == "Total", sum_stats$counties, counties),
total_reached = ifelse(indicator_short == "Total",
sum_stats$reached_1256,
total_reached),
latest_reached = ifelse(indicator_short == "Total",
sum_stats$latest_reached,
latest_reached)) %>%
left_join(targets %>%
filter(target_unit == "people") %>%
group_by(indicator_short) %>%
summarise(target = sum(county_target)),
by = "indicator_short") %>%
filter(!is.na(indicator_short)) %>%
mutate(target = ifelse(indicator_short == "Total",
targets %>% distinct(county, county_overall_target) %>% {sum(.$county_overall_target)},
target),
target = ifelse(is.na(target), 0, target)) %>%
mutate(pc = round(total_reached / target * 100, digits = 2),
pc = ifelse(is.infinite(pc), 100, pc)) %>%
select(indicator = indicator_short, partners, counties,
latest_reached, total_reached, target, `%target_reached` = pc) %>%
select_all(~ gsub("latest",
params$report_month, .)) %>%
select_all(~ str_to_title(.))
sum_stats <- eie %>%
summarise(partners = n_distinct(implementing_partner),
counties = n_distinct(county),
reached = sum(sector_reached, na.rm = TRUE),
men = sum(men[str_detect(indicator_short, "2|5") &
activity_status == "Completed"], na.rm = TRUE),
women = sum(women[str_detect(indicator_short, "2|5") &
activity_status == "Completed"], na.rm = TRUE),
boys = sum(boys[str_detect(indicator_short, "1|2|6") &
activity_status == "Completed"], na.rm = TRUE),
girls = sum(girls[str_detect(indicator_short, "1|2|6") &
activity_status == "Completed"], na.rm = TRUE),
reached_1256 = sum(total_reached[str_detect(indicator_short, "1|2|5|6") &
activity_status == "Completed"], na.rm = TRUE),
latest_reached = sum(total_reached[str_detect(indicator_short, "1|2|5|6") &
activity_status == "Completed"&
month %in% params$report_month],
na.rm = TRUE))
summary_table <- eie %>%
filter(activity_status == "Completed") %>%
mutate(latest_reached = ifelse(month %in% params$report_month, total_reached, NA_integer_)) %>%
group_by(indicator_short) %>%
summarise(partners = n_distinct(implementing_partner),
counties = n_distinct(adm1_pcode),
latest_reached = sum(latest_reached, na.rm = TRUE),
total_reached = sum(total_reached, na.rm = TRUE)) %>%
adorn_totals("row",,,, latest_reached, total_reached) %>%
mutate(partners = ifelse(indicator_short == "Total", sum_stats$partners, partners),
counties = ifelse(indicator_short == "Total", sum_stats$counties, counties),
total_reached = ifelse(indicator_short == "Total",
sum_stats$reached_1256,
total_reached),
latest_reached = ifelse(indicator_short == "Total",
sum_stats$latest_reached,
latest_reached)) %>%
left_join(targets %>%
filter(target_unit == "people") %>%
group_by(indicator_short) %>%
summarise(target = sum(county_target)),
by = "indicator_short") %>%
filter(!is.na(indicator_short)) %>%
mutate(target = ifelse(indicator_short == "Total",
targets %>% distinct(county, county_overall_target) %>% {sum(.$county_overall_target)},
target),
target = ifelse(is.na(target), 0, target)) %>%
mutate(pc = round(total_reached / target * 100, digits = 2),
pc = ifelse(is.infinite(pc), 100, pc)) %>%
select(indicator = indicator_short, partners, counties,
latest_reached, total_reached, target, `%target_reached` = pc) %>%
select_all(~ gsub("latest",
params$report_month, .)) %>%
select_all(~ str_to_title(.))
summary_table %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("Summary statistics for EIE 5Ws reporting, ", params$report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1:7, j = 1, size = 9) %>%
fontsize(size = 9, part = "header") %>%
footnote(i = 1, j = 2, part = "header", ref_symbols = "1",
as_paragraph("Only implementing partners")) %>%
footnote(i = 8, j = 5:6, ref_symbols = "2",
as_paragraph("Only the sum of indicators 1, 2, 5 and 6"))
summary_table %>%
filter(str_detect(Indicator, "1")) %>%
flextable() %>%
set_caption(paste0("EiE Indicator 1, as of ", params$report_date)) %>%
set_table_properties(layout = "autofit", width = .99)
indicator_map(eie, "1", county_target) +
labs(title = "Targets",
fill = "Target")  +
indicator_map(eie, "1", beneficiaries) +
scale_fill_viridis(limits = range(targets_range$indicator1),
labels = comma,
na.value = "grey80") +
labs(title = "Total reached",
fill = "Reached") +
plot_annotation(title = "1. Access to ECD spaces/schools, target and reached",
subtitle = paste0("As of ", params$report_date))
targets_range <- targets %>%
filter(target_unit == "people") %>%
group_by(indicator_short, county) %>%
summarise(target = sum(county_target, na.rm = TRUE)) %>%
pivot_wider(names_from = indicator_short, values_from = target) %>%
setNames(c("county", "indicator1", "indicator2", "indicator3", "indicator4",
"indicator5", "indicator6")) %>%
mutate(indicator7 = 0)
indicator_map <- function(tbl, indicator_number, plot_option) {
plot_option <- enquo(plot_option)
indicator_number <- enquo(indicator_number)
tbl %>%
filter(str_detect(indicator_short, !!indicator_number)) %>%
group_by(indicator_short, county) %>%
summarise(beneficiaries = sum(total_reached, na.rm = TRUE)) %>%
full_join(targets %>%
filter(str_detect(indicator_short, !!indicator_number)) %>%
filter(target_unit %in% c("people")) %>%
select(county, indicator_short, county_target),
by = c("county", "indicator_short")) %>%
replace_na(list(county_target = 0,
beneficiaries = 0)) %>%
filter(beneficiaries > 0 | county_target > 0)  %>%
mutate(pc = ifelse(county_target > 0, beneficiaries / county_target, 0),
county = fct_reorder(county, beneficiaries)) %>%
naniar::replace_with_na(list(beneficiaries = 0)) %>%
left_join(locations %>%
distinct(county = adm1_en, adm1_pcode),
by = "county") %>%
right_join(pcode1_shape, by = c("adm1_pcode")) %>%
st_as_sf() %>%
ggplot() +
geom_sf(size = .01, colour = "grey70",
aes(fill = !!plot_option)) +
geom_sf_text(aes(label = comma(!!plot_option)),
colour = "grey45",
size = 2.5) +
scale_fill_viridis_c(labels = comma,
na.value = "grey80") +
theme_void() +
theme(plot.title = element_text(hjust = .5))
}
indicator_map(eie, "1", county_target) +
labs(title = "Targets",
fill = "Target")  +
indicator_map(eie, "1", beneficiaries) +
scale_fill_viridis(limits = range(targets_range$indicator1),
labels = comma,
na.value = "grey80") +
labs(title = "Total reached",
fill = "Reached") +
plot_annotation(title = "1. Access to ECD spaces/schools, target and reached",
subtitle = paste0("As of ", params$report_date))
eie %>% filter(is.na(lead_organisation))
eie %>% filter(is.na(lead_organisation)) %>% distinct(implementing_partner)
eie <- read_csv("./data/eie_5ws.csv") %>%
# filter(!is.na(indicator_short)) %>%
replace_na(list(boys = 0, girls = 0, men = 0, women = 0)) %>%
# Total reached of indicator 1 is only boys and girls
mutate(total_reached = case_when(
str_detect(indicator, "children and youth accessing ECD spaces/schools in drought affected areas") ~
boys + girls,
str_detect(indicator, "5 #|5.1|5.2|5.3") ~ men + women,
str_detect(indicator, "children and youth benefiting from resilience enhancing programmes") ~ boys + girls,
TRUE ~ total_reached)) %>%
mutate(lead_organisation = ifelse(is.na(lead_organisation),
implementing_partner,
lead_organisation))
eie %>%
filter(activity_status == "Completed") %>%
mutate(lead_organisation = str_sub(lead_organisation, end = 50L)) %>%
group_by(lead_organisation) %>%
summarise(reached = sum(total_reached, na.rm = TRUE),
counties = n_distinct(adm1_pcode),
activities = n_distinct(indicator_short)) %>%
filter(reached > 0) %>%
mutate(`%total` = round(reached / sum(reached) * 100, digits = 2)) %>%
arrange(desc(reached)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("Summary by lead organisation") %>%
set_table_properties(layout = "autofit", width = .9) %>%
footnote(i = 1, j = 2, ref_symbols = "1", part = "header",
as_paragraph("All indicators as opposed only indicators 1, 2, 5 and 6")) %>%
footnote(i = 1, j = 5, ref_symbols = "2", part = "header",
as_paragraph("Percentage of reached for all indicators"))
eie %>%
filter(!str_detect(indicator, "5.1|5.2|5.3")) %>%
distinct(indicator) %>%
arrange(indicator) %>%
flextable() %>%
theme_zebra() %>%
set_table_properties(width = .85, layout = "autofit") %>%
fontsize(i = 1:7, j = 1, size = 9)
eie %>%
filter(!str_detect(indicator, "5.1|5.2|5.3")) %>%
distinct(indicator) %>%
arrange(indicator) %>%
flextable() %>%
theme_zebra() %>%
set_table_properties(width = .85, layout = "autofit") %>%
fontsize(i = 1:9, j = 1, size = 9)
