filter(!is.na(names_numbers_schools)) %>%
slice(11, 12, 13) %>%
select(Schools_text = names_numbers_schools, Schools_number = schools) %>%
flextable() %>%
set_table_properties(layout = "autofit", width = .9)
eie %>%
filter(!is.na(names_numbers_schools)) %>%
slice(11, 12, 13) %>%
select(Schools_text = names_numbers_schools, Schools_number = schools) %>%
flextable() %>%
set_table_properties(layout = "autofit", width = .9) %>%
set_caption("Schools column is a mix of text and numbers")
eie %>%
filter(!is.na(sub_county)) %>%
sample_n(10) %>%
pull(sub_county)
eie %>%
filter(!is.na(sub_county)) %>%
slice(20:25)
eie %>%
filter(!is.na(sub_county)) %>%
slice(20:25) %>%
select(county, sub_county)
eie %>%
write_csv("./data/eie_5ws_20230724")
eie %>%
write_csv("./data/eie_5ws_20230724.csv")
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(!is.na(sub_county)) %>%
slice(20:25) %>%
select(county, sub_county)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(!is.na(sub_county)) %>%
slice(15:20) %>%
select(county, sub_county)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(!is.na(sub_county)) %>%
slice(15:20) %>%
select(county, sub_county, total_reached)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(!is.na(sub_county)) %>%
slice(15:20) %>%
select(county, sub_county, total_reached) %>%
flextable() %>%
theme_zebra() %>%
set_caption("There is more than one sub-county per row")
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(!is.na(sub_county)) %>%
slice(15:20) %>%
select(county, sub_county, total_reached) %>%
flextable() %>%
theme_zebra() %>%
set_caption("There is more than one sub-county per row") %>%
set_table_properties(layout = "autofit", width = .9)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(!is.na(sub_county)) %>%
slice(15:20) %>%
select(county, sub_county, total_reached) %>%
flextable() %>%
theme_zebra() %>%
set_caption("There is more than one sub-county per row") %>%
set_table_properties(layout = "autofit", width = .7)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(!is.na(sub_county)) %>%
slice(15:20) %>%
select(county, sub_county, total_reached) %>%
mutate_at(vars(county, sub_county, total_reached),
~ str_to_title(.)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("There is more than one sub-county per row") %>%
set_table_properties(layout = "autofit", width = .7)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(!is.na(sub_county)) %>%
slice(15:20) %>%
select(county, sub_county, total_reached) %>%
select_all(~ str_to_title(.)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("There is more than one sub-county per row") %>%
set_table_properties(layout = "autofit", width = .7)
read_csv("./data/eie_5ws_20230724.csv") %>%
mutate(multiple_sub_counties = ifelse(str_detect(sub_county, ","),
TRUE, FALSE)) %>%
group_by(multiple_sub_counties) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE))
read_csv("./data/eie_5ws_20230724.csv") %>%
mutate(multiple_sub_counties = ifelse(str_detect(sub_county, ","),
TRUE, FALSE)) %>%
filter(is.na(sub_county))
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(multiple_sub_counties = ifelse(str_detect(sub_county, ","),
TRUE, FALSE)) %>%
filter(is.na(sub_county))
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
filter(!is.na(sub_county)) %>%
slice(15:20) %>%
select(county, sub_county, total_reached) %>%
select_all(~ str_to_title(.)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("There is more than one sub-county per row") %>%
set_table_properties(layout = "autofit", width = .7)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(multiple_sub_counties = ifelse(str_detect(sub_county, ","),
TRUE, FALSE)) %>%
filter(is.na(sub_county)) %>% {sum(.$total_reached)}
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(multiple_sub_counties = ifelse(str_detect(sub_county, ","),
TRUE, FALSE)) %>%
filter(is.na(sub_county)) %>%
group_by(multiple_sub_counties) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE))
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(multiple_sub_counties = ifelse(str_detect(sub_county, ","),
TRUE, FALSE)) %>%
group_by(multiple_sub_counties) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE))
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(multiple_sub_counties = ifelse(str_detect(sub_county, ","),
TRUE, FALSE)) %>%
group_by(multiple_sub_counties) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(`%_total` = round(total_reached / sum(total_reached) * 100, digits = 2))
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(multiple_sub_counties = ifelse(str_detect(sub_county, ","),
TRUE, FALSE)) %>%
group_by(multiple_sub_counties) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(`%_total` = round(total_reached / sum(total_reached) * 100, digits = 2)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("There is more than one sub-county per row") %>%
set_table_properties(layout = "autofit", width = .7)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(multiple_sub_counties = ifelse(str_detect(sub_county, ","),
TRUE, FALSE)) %>%
group_by(multiple_sub_counties) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(`%_total` = round(total_reached / sum(total_reached) * 100, digits = 2),
multiple_sub_counties = ifelse(is.na(multiple_sub_counties), "NA", multiple_sub_counties)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("There is more than one sub-county per row") %>%
set_table_properties(layout = "autofit", width = .7)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(one_sub_county = ifelse(str_detect(sub_county, ","),
FALSE, TRUE)) %>%
group_by(one_sub_county) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(`%_total` = round(total_reached / sum(total_reached) * 100, digits = 2),
one_sub_county = ifelse(is.na(one_sub_county), "NA", one_sub_county)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("86% of beneficiaries reported ") %>%
set_table_properties(layout = "autofit", width = .7)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(one_sub_county = ifelse(str_detect(sub_county, ","),
FALSE, TRUE)) %>%
group_by(one_sub_county) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(`%_total` = round(total_reached / sum(total_reached) * 100, digits = 2),
one_sub_county = ifelse(is.na(one_sub_county), "NA", one_sub_county),
one_sub_county = fct_relevel(one_sub_county, c("TRUE", "FALSE", "NA"))) %>%
flextable() %>%
theme_zebra() %>%
set_caption("86% of beneficiaries reported ") %>%
set_table_properties(layout = "autofit", width = .7)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(activity_status == "Completed") %>%
mutate(one_sub_county = ifelse(str_detect(sub_county, ","),
FALSE, TRUE)) %>%
group_by(one_sub_county) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(`%_total` = round(total_reached / sum(total_reached) * 100, digits = 2),
one_sub_county = ifelse(is.na(one_sub_county), "NA", one_sub_county),
one_sub_county = fct_relevel(one_sub_county, c("TRUE", "FALSE", "NA"))) %>%
arrange(one_sub_county) %>%
flextable() %>%
theme_zebra() %>%
set_caption("86% of beneficiaries reported ") %>%
set_table_properties(layout = "autofit", width = .7)
read_csv("./data/eie_5ws_20230724.csv") %>%
filter(!is.na(names_numbers_schools)) %>%
filter(activity_status == "Completed") %>%
slice(11, 12, 13) %>%
select(Schools_text = names_numbers_schools, Schools_number = schools) %>%
flextable() %>%
set_table_properties(layout = "autofit", width = .9) %>%
set_caption("Schools column is a mix of text and numbers")
eie %>% filter(indicator_short == "3. Teaching materials" &
activity_status == "Completed") %>%
group_by(month) %>%
summarise(total_reached = sum(total_reached)) %>%
adorn_totals("row")
eie %>%
filter(activity_status == "Completed") %>%
mutate(latest_reached = ifelse(month %in% report_month, total_reached, NA_integer_)) %>%
group_by(indicator_short) %>%
summarise(partners = n_distinct(implementing_partner),
counties = n_distinct(adm1_pcode),
latest_reached = sum(latest_reached, na.rm = TRUE),
total_reached = sum(total_reached, na.rm = TRUE))
eie %>%
mutate_at(vars(girls, boys, men, women), ~ replace_na(., 0)) %>%
filter(!is.na(education_level)) %>%
mutate(children = boys + girls) %>%
group_by(education_level) %>%
summarise(children = sum(children)) %>%
arrange(desc(children)) %>%
mutate(`%_of_total` = round(children / sum(children) * 100, digits = 2)) %>%
flextable() %>%
theme_zebra() %>%
set_caption("Children reached by education level") %>%
set_table_properties(layout = "autofit", width = .6)
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(viridis)
library(patchwork)
library(DT)
library(here)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(anytime)
library(tidytext)
library(ggsflabel)
theme_set(theme_light())
# Installation of mdepriv package
# install package devtools if not yet installed
#   install.packages("devtools")
# install fast from GitHub without vignettes
#   devtools::install_github("a-benini/mdepriv", build_vignettes = FALSE
# Alternatively, follow the instructions here: https://a-benini.github.io/mdepriv/
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
# mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# Fixing dates
name_to_date <- function(x) {
lubridate::mdy(ifelse(x %in% c(month.name, month.abb), paste0(x, "/01/2023"), x))
}
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM2") %>%
clean_names()
eie <- read_csv("./data/eie_5ws.csv") %>%
filter(!is.na(indicator_short))
report_date <- "25 June 2023"
report_month <- "June"
sitrep_table <- read_xlsx("./data/sitrep_results_table.xlsx") %>%
clean_names()
targets <- read_csv("./data/eie_targets.csv")
pcode1_shape <-
sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp",
quiet = TRUE) %>%
clean_names()
ipc <- read_csv("./data/ipc.csv")
partner_list_counties <- read_csv("./data/partner_list_counties.csv") %>%
filter(partner_type == "implementing_partner")
eie %>% filter(str_detect(indicator, "1"))
eie %>%
mutate(total_reached = ifelse(str_detect(indicator, "1"),
boys + girls,
total_reached)) %>%
filter(str_detect(indicator, "1") & activity_status == "Completed") %>%
group_by(month) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE))
eie %>%
mutate(total_reached = ifelse(str_detect(indicator, "1"),
boys + girls,
total_reached)) %>%
filter(str_detect(indicator, "1") & activity_status == "Completed") %>%
group_by(month) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(month = fct_relevel(month, c("January", "February", "March",
"April", "May", "June",
"July", "August", "September",
"October", "November", "December")))
eie %>%
mutate(total_reached = ifelse(str_detect(indicator, "1"),
boys + girls,
total_reached)) %>%
filter(str_detect(indicator, "1") & activity_status == "Completed") %>%
group_by(month) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(month = fct_relevel(month, c("January", "February", "March",
"April", "May", "June",
"July", "August", "September",
"October", "November", "December"))) %>%
arrange(month)
eie %>%
mutate(total_reached = ifelse(str_detect(indicator, "1"),
boys + girls,
total_reached)) %>%
filter(str_detect(indicator, "1") & activity_status == "Completed") %>%
group_by(month) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(month = fct_relevel(month, c("January", "February", "March",
"April", "May", "June",
"July", "August", "September",
"October", "November", "December"))) %>%
arrange(month) %>%
adorn_totals("row")
eie %>%
mutate(total_reached = ifelse(str_detect(indicator, "1"),
boys + girls,
total_reached)) %>%
filter(str_detect(indicator, "1") & activity_status == "Completed") %>%
group_by(month) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(month = fct_relevel(month, c("January", "February", "March",
"April", "May", "June",
"July", "August", "September",
"October", "November", "December"))) %>%
arrange(month) %>%
adorn_totals("row") %>%
write_csv("indicator1_check.csv")
eie %>%
mutate(total_reached = ifelse(str_detect(indicator, "1"),
boys + girls,
total_reached)) %>%
filter(str_detect(indicator, "1") & activity_status == "Completed") %>%
group_by(month) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(month = fct_relevel(month, c("January", "February", "March",
"April", "May", "June",
"July", "August", "September",
"October", "November", "December"))) %>%
arrange(month) %>%
adorn_totals("row") %>%
write_csv("./data/indicator1_check.csv")
eie %>%
mutate(total_reached = ifelse(str_detect(indicator, "1"),
boys + girls,
total_reached)) %>%
filter(str_detect(indicator, "1") & activity_status == "Completed")
eie %>%
replace_na(list(boys = 0, girls = 0)) %>%
mutate(total_reached = ifelse(str_detect(indicator, "1"),
boys + girls,
total_reached)) %>%
filter(str_detect(indicator, "1") & activity_status == "Completed") %>%
group_by(month) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(month = fct_relevel(month, c("January", "February", "March",
"April", "May", "June",
"July", "August", "September",
"October", "November", "December"))) %>%
arrange(month) %>%
adorn_totals("row") %>%
write_csv("./data/indicator1_check.csv")
eie %>%
replace_na(list(boys = 0, girls = 0)) %>%
mutate(total_reached = ifelse(str_detect(indicator, "1"),
boys + girls,
total_reached)) %>%
filter(str_detect(indicator, "1") & activity_status == "Completed") %>%
group_by(month) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(month = fct_relevel(month, c("January", "February", "March",
"April", "May", "June",
"July", "August", "September",
"October", "November", "December")))
eie %>%
replace_na(list(boys = 0, girls = 0)) %>%
mutate(total_reached = ifelse(str_detect(indicator, "1"),
boys + girls,
total_reached)) %>%
filter(str_detect(indicator, "1") & activity_status == "Completed") %>%
group_by(month) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(month = fct_relevel(month, c("January", "February", "March",
"April", "May", "June",
"July", "August", "September",
"October", "November", "December"))) %>%
arrange(month) %>%
adorn_totals("row")
eie %>%
replace_na(list(boys = 0, girls = 0)) %>%
mutate(total_reached = ifelse(str_detect(indicator, "1"),
boys + girls,
total_reached)) %>%
filter(str_detect(indicator, "1") & activity_status == "Completed") %>%
group_by(month) %>%
summarise(total_reached = sum(total_reached, na.rm = TRUE)) %>%
mutate(month = fct_relevel(month, c("January", "February", "March",
"April", "May", "June",
"July", "August", "September",
"October", "November", "December"))) %>%
arrange(month) %>%
adorn_totals("row") %>%
write_csv("./data/indicator1_check_only_children.csv")
eie <- read_csv("./data/eie_5ws.csv") %>%
filter(!is.na(indicator_short)) %>%
replace_na(list(boys = 0, girls = 0, men = 0, women = 0)) %>%
# Total reached of indicator 1 is only boys and girls
mutate(total_reached = ifelse(str_detect(indicator, "1"),
boys + girls,
total_reached))
eie %>% filter(str_detect, "2") %>%
filter(activity_status == "Completed") %>%
summarise(men = sum(men),
women = sum(women),
boy = sum(boys),
girls = sum(girls))
eie %>% filter(str_detect(indicator, "2")) %>%
filter(activity_status == "Completed") %>%
summarise(men = sum(men),
women = sum(women),
boy = sum(boys),
girls = sum(girls))
eie %>% filter(str_detect(indicator, "2")) %>%
filter(activity_status == "Completed") %>%
group_by(month) %>%
summarise(men = sum(men),
women = sum(women),
boy = sum(boys),
girls = sum(girls))
eie %>% count(indicator)
sum_stats <- eie %>%
summarise(partners = n_distinct(implementing_partner),
counties = n_distinct(county),
reached = sum(sector_reached, na.rm = TRUE),
men = sum(men[str_detect(indicator_short, "1|2|5|6") &
activity_status == "Completed"], na.rm = TRUE),
women = sum(women[str_detect(indicator_short, "1|2|5|6") &
activity_status == "Completed"], na.rm = TRUE),
boys = sum(boys[str_detect(indicator_short, "1|2|5|6") &
activity_status == "Completed"], na.rm = TRUE),
girls = sum(girls[str_detect(indicator_short, "1|2|5|6") &
activity_status == "Completed"], na.rm = TRUE),
reached_1256 = sum(total_reached[str_detect(indicator_short, "1|2|5|6") &
activity_status == "Completed"], na.rm = TRUE),
latest_reached = sum(total_reached[str_detect(indicator_short, "1|2|5|6") &
activity_status == "Completed"&
month %in% report_month],
na.rm = TRUE))
summary_table <- eie %>%
filter(activity_status == "Completed") %>%
mutate(latest_reached = ifelse(month %in% report_month, total_reached, NA_integer_)) %>%
group_by(indicator_short) %>%
summarise(partners = n_distinct(implementing_partner),
counties = n_distinct(adm1_pcode),
latest_reached = sum(latest_reached, na.rm = TRUE),
total_reached = sum(total_reached, na.rm = TRUE)) %>%
adorn_totals("row",,,, latest_reached, total_reached) %>%
mutate(partners = ifelse(indicator_short == "Total", sum_stats$partners, partners),
counties = ifelse(indicator_short == "Total", sum_stats$counties, counties),
total_reached = ifelse(indicator_short == "Total",
sum_stats$reached_1256,
total_reached),
latest_reached = ifelse(indicator_short == "Total",
sum_stats$latest_reached,
latest_reached)) %>%
left_join(targets %>%
filter(target_unit == "people") %>%
group_by(indicator_short) %>%
summarise(target = sum(county_target)),
by = "indicator_short") %>%
mutate(target = ifelse(indicator_short == "Total",
targets %>% distinct(county, county_overall_target) %>% {sum(.$county_overall_target)},
target)) %>%
mutate(pc = round(total_reached / target * 100, digits = 2)) %>%
select(indicator = indicator_short, partners, counties,
latest_reached, total_reached, target, `%target_reached` = pc) %>%
select_all(~ gsub("latest",
report_month, .)) %>%
select_all(~ str_to_title(.))
summary_table %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("Summary statistics for EIE 5Ws reporting, ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1:6, j = 1, size = 9) %>%
fontsize(size = 9, part = "header") %>%
footnote(i = 1, j = 2, part = "header", ref_symbols = "1",
as_paragraph("Only implementing partners")) %>%
footnote(i = 7, j = 5:6, ref_symbols = "2",
as_paragraph("Only the sum of indicators 1, 2, 5 and 6"))
