"CISP Kenya",
"Comitato Internazionale per lo Sviluppo dei Popoli (International Committee for the Development of Peoples) - CISP Kenya.",
"Jesuits Refugee Service",
"Save the Children International",
"AVSI FAOUNDATION",
"ChildFund kenya",
"Kenya RedCross Society",
"FINN CHURCH AID",
"Concern worldwide",
"Dignitas Limited",
"AVSI FOUDNATION")) %>%
mutate(agency_name = recode(agency_name,
"Action for sustainable change" = "Action for Sustainable Change",
"AVSI FOUNDATION" = "AVSI Foundation",
"QATAR CHARITY" = "Qatar Charity",
"Life Skills Promoters" = "Lifeskills Promoters",
"Girl Child Network" = "The Girl Child Network",
"WE WORLD" = "We World")) %>%
mutate(acronym = case_when(agency_name == "Christian Blind Mission"~ "CBM",
agency_name == "Concern Worldwide" ~ "CW",
agency_name == "Finn Church Aid" ~ "FCA",
agency_name == "Mondo" ~ "Mondo",
agency_name == "Plan International Kenya" ~ "PLAN",
agency_name == "Rotary International" ~ "RI",
agency_name == "World Vision Kenya" ~ "WVK",
agency_name == "FilmAid Kenya" ~ "FA",
agency_name == "ResQ247" ~ "ResQ",
agency_name == "LEGO Foundation" ~ "LEGO",
agency_name == "St Paul's university" ~ "SPU",
agency_name == "Dignitas" ~ "DIGN",
agency_name == "EducAid" ~ "EducAid",
agency_name == "Humanity & Inclusion" ~ "H&I",
agency_name == "Build Africa Kenya" ~ "BAK",
agency_name == "Edukans Kenya" ~ "Edukans",
agency_name == "Action for Sustainable Change" ~ "AFOSC",
agency_name == "Elimu Yetu Coalition" ~ "EYC",
agency_name == "CRESNET CBO" ~ "CRES",
agency_name == "MOE Wajir" ~ "MOE Wajir",
agency_name == "Qatar Charity" ~ "QATAR",
agency_name == "Education Management & Leadership" ~ "EML",
agency_name == "International Aid Services Kenya" ~ "IASK",
agency_name == "Worldreader" ~ "WR",
agency_name == "ChildFund Kenya" ~ "CF",
agency_name == "The Girl Child Network" ~ "GCN",
TRUE ~ acronym)) %>%
distinct(partner_type, partner = agency_name, acronym) %>%
arrange(partner)
partner_list_counties <- eie %>%
mutate_at(vars(lead_organisation, implementing_partner), ~ str_trim(str_squish(.))) %>%
mutate(lead_organisation = ifelse(lead_organisation == implementing_partner,
NA_character_,
lead_organisation)) %>%
select(county, adm1_pcode, lead_organisation, implementing_partner) %>%
pivot_longer(cols = c(lead_organisation, implementing_partner),
names_to = "partner_type",
values_to = "partner") %>%
filter(!is.na(partner)) %>%
left_join(partners_raw %>%
select(partner, acronym),
by = "partner") %>%
mutate(acronym = case_when(partner == "Food for the Hungry" ~ "FHK",
partner == "Nawiri Children Development Program" ~ "NCDP",
partner == "Frontiers Community Development Program" ~ "FCDP",
partner == "Homa Bay County" ~ "HBC",
partner == "Special Olympics Kenya" ~ "SOK",
partner == "Servants of the Poor" ~ "SP",
partner == "Evangelizing Sisters of Mary" ~ "ESM",
partner == "IWS" ~ "IWS",
partner == "CDE Wajir" ~ "CDE Wajir",
partner == "Missionary Sisters of the Catechism" ~ "MCS",
partner == "ERIKs Development Partner" ~ "ERIKs",
partner == "SMB" ~ "SMB",
partner == "Mondi" ~ "MON",
partner == "Bartabwa" ~ "BART",
partner == "CDE Mandera" ~ "CDE Mandera",
partner == "Windle International Kenya" ~ "WIK",
partner == "The Girl Child Network" ~ "GCN",
partner == "Futebol da Forcaa" ~ "FUTE",
partner == "Ministry of Education" ~ "MOE",
partner == "UNICEF" ~ "UNICEF",
partner == "ChildFund Kenya" ~ "CF",
TRUE ~ acronym)) %>%
mutate(partner = str_replace_all(partner, "CDE", "County Director of Education"),
partner = str_replace_all(partner, "Girl Child Network|The Girl Child Network",
"The Girl Child Network"),
acronym = ifelse(partner == "The Girl Child Network", "GCN", acronym))
partner_list_counties %>%
write_csv("./data/partner_list_counties.csv")
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM2") %>%
clean_names()
eie <- read_csv("./data/eie_5ws.csv") %>%
filter(!is.na(indicator_short))
report_date <- "25 June 2023"
report_month <- "June"
sitrep_table <- read_xlsx("./data/sitrep_results_table.xlsx") %>%
clean_names()
targets <- read_csv("./data/eie_targets.csv")
pcode1_shape <-
sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp",
quiet = TRUE) %>%
clean_names()
ipc <- read_csv("./data/ipc.csv")
partner_list_counties <- read_csv("./data/partner_list_counties.csv") %>%
filter(partner_type == "implementing_partner")
eie %>%
mutate_at(vars(implementing_partner, lead_organisation), ~
str_sub(., end = 50L)) %>%
group_by(county, adm1_pcode, implementing_partner, lead_organisation) %>%
summarise(reached = sum(sector_reached[activity_status == "Completed"], na.rm = TRUE),
activities = n_distinct(indicator_short)) %>%
left_join(partner_list_counties %>%
distinct(partner, acronym),
by = c("implementing_partner" = "partner")) %>%
select(county, lead_organisation, implementing_partner, acronym, reached, `#activities` = activities, adm1_pcode) %>%
select_all(., ~ str_to_title(.)) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Breakdown by county and partner")) %>%
formatStyle(0, target = "row", lineHeight = "80%", fontSize = "80%") %>%
formatCurrency(c("Reached"),
currency = "", interval = 3, mark = ",") %>%
formatRound(c("Reached"), digits = 0)
partner_list_counties <- eie %>%
mutate_at(vars(lead_organisation, implementing_partner), ~ str_trim(str_squish(.))) %>%
mutate(lead_organisation = ifelse(lead_organisation == implementing_partner,
NA_character_,
lead_organisation)) %>%
select(county, adm1_pcode, lead_organisation, implementing_partner) %>%
pivot_longer(cols = c(lead_organisation, implementing_partner),
names_to = "partner_type",
values_to = "partner") %>%
filter(!is.na(partner)) %>%
left_join(partners_raw %>%
select(partner, acronym),
by = "partner") %>%
mutate(acronym = case_when(partner == "Food for the Hungry" ~ "FHK",
partner == "Nawiri Children Development Program" ~ "NCDP",
partner == "Frontiers Community Development Program" ~ "FCDP",
partner == "Homa Bay County" ~ "HBC",
partner == "Special Olympics Kenya" ~ "SOK",
partner == "Servants of the Poor" ~ "SP",
partner == "Evangelizing Sisters of Mary" ~ "ESM",
partner == "IWS" ~ "IWS",
partner == "CDE Wajir" ~ "CDE Wajir",
partner == "Missionary Sisters of the Catechism" ~ "MCS",
partner == "ERIKs Development Partner" ~ "ERIKs",
partner == "SMB" ~ "SMB",
partner == "Mondi" ~ "MON",
partner == "Bartabwa" ~ "BART",
partner == "CDE Mandera" ~ "CDE Mandera",
partner == "Windle International Kenya" ~ "WIK",
partner == "The Girl Child Network" ~ "GCN",
partner == "Futebol da Forcaa" ~ "FUTE",
partner == "Ministry of Education" ~ "MOE",
partner == "UNICEF" ~ "UNICEF",
partner == "ChildFund Kenya" ~ "CF",
partner == "County Director of Education Wajir" ~ "CDE Wajir",
partner == "County Director of Education Mandera" ~ "CDE Mandera",
TRUE ~ acronym)) %>%
mutate(partner = str_replace_all(partner, "CDE", "County Director of Education"),
partner = str_replace_all(partner, "Girl Child Network|The Girl Child Network",
"The Girl Child Network"),
acronym = ifelse(partner == "The Girl Child Network", "GCN", acronym))
partner_list_counties %>%
write_csv("./data/partner_list_counties.csv")
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM2") %>%
clean_names()
eie <- read_csv("./data/eie_5ws.csv") %>%
filter(!is.na(indicator_short))
report_date <- "25 June 2023"
report_month <- "June"
sitrep_table <- read_xlsx("./data/sitrep_results_table.xlsx") %>%
clean_names()
targets <- read_csv("./data/eie_targets.csv")
pcode1_shape <-
sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp",
quiet = TRUE) %>%
clean_names()
ipc <- read_csv("./data/ipc.csv")
partner_list_counties <- read_csv("./data/partner_list_counties.csv") %>%
filter(partner_type == "implementing_partner")
eie %>%
mutate_at(vars(implementing_partner, lead_organisation), ~
str_sub(., end = 50L)) %>%
group_by(county, adm1_pcode, implementing_partner, lead_organisation) %>%
summarise(reached = sum(sector_reached[activity_status == "Completed"], na.rm = TRUE),
activities = n_distinct(indicator_short)) %>%
left_join(partner_list_counties %>%
distinct(partner, acronym),
by = c("implementing_partner" = "partner")) %>%
select(county, lead_organisation, implementing_partner, acronym, reached, `#activities` = activities, adm1_pcode) %>%
select_all(., ~ str_to_title(.)) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Breakdown by county and partner")) %>%
formatStyle(0, target = "row", lineHeight = "80%", fontSize = "80%") %>%
formatCurrency(c("Reached"),
currency = "", interval = 3, mark = ",") %>%
formatRound(c("Reached"), digits = 0)
partner_list_counties
eie %>%
mutate_at(vars(lead_organisation, implementing_partner), ~ str_trim(str_squish(.))) %>%
mutate(lead_organisation = ifelse(lead_organisation == implementing_partner,
NA_character_,
lead_organisation)) %>%
select(county, adm1_pcode, lead_organisation, implementing_partner) %>%
pivot_longer(cols = c(lead_organisation, implementing_partner),
names_to = "partner_type",
values_to = "partner")
partner_list_counties <- eie %>%
mutate_at(vars(lead_organisation, implementing_partner), ~ str_trim(str_squish(.))) %>%
mutate(lead_organisation = ifelse(lead_organisation == implementing_partner,
NA_character_,
lead_organisation)) %>%
select(county, adm1_pcode, lead_organisation, implementing_partner) %>%
pivot_longer(cols = c(lead_organisation, implementing_partner),
names_to = "partner_type",
values_to = "partner") %>%
filter(!is.na(partner)) %>%
left_join(partners_raw %>%
select(partner, acronym),
by = "partner") %>%
mutate(acronym = case_when(partner == "Food for the Hungry" ~ "FHK",
partner == "Nawiri Children Development Program" ~ "NCDP",
partner == "Frontiers Community Development Program" ~ "FCDP",
partner == "Homa Bay County" ~ "HBC",
partner == "Special Olympics Kenya" ~ "SOK",
partner == "Servants of the Poor" ~ "SP",
partner == "Evangelizing Sisters of Mary" ~ "ESM",
partner == "IWS" ~ "IWS",
partner == "CDE Wajir" ~ "CDE Wajir",
partner == "Missionary Sisters of the Catechism" ~ "MCS",
partner == "ERIKs Development Partner" ~ "ERIKs",
partner == "SMB" ~ "SMB",
partner == "Mondi" ~ "MON",
partner == "Bartabwa" ~ "BART",
partner == "CDE Mandera" ~ "CDE Mandera",
partner == "Windle International Kenya" ~ "WIK",
partner == "The Girl Child Network" ~ "GCN",
partner == "Futebol da Forcaa" ~ "FUTE",
partner == "Ministry of Education" ~ "MOE",
partner == "UNICEF" ~ "UNICEF",
partner == "ChildFund Kenya" ~ "CF",
partner == "County Director of Education Wajir" ~ "CDE Wajir",
partner == "County Director of Education Mandera" ~ "CDE Mandera",
TRUE ~ acronym)) %>%
mutate(partner = str_replace_all(partner, "CDE", "County Director of Education"),
partner = str_replace_all(partner, "Girl Child Network|The Girl Child Network",
"The Girl Child Network"),
acronym = ifelse(partner == "The Girl Child Network", "GCN", acronym))
partner_list_counties
partner_list_counties %>%
write_csv("./data/partner_list_counties.csv")
eie %>%
mutate_at(vars(implementing_partner, lead_organisation), ~
str_sub(., end = 50L)) %>%
group_by(county, adm1_pcode, implementing_partner, lead_organisation) %>%
summarise(sector_reached = sum(sector_reached[activity_status == "Completed"], na.rm = TRUE),
activities = n_distinct(indicator_short)) %>%
select(county, implementing_partner, lead_organisation, reached, `#activities` = activities, adm1_pcode)
eie %>%
mutate_at(vars(implementing_partner, lead_organisation), ~
str_sub(., end = 50L)) %>%
group_by(county, adm1_pcode, implementing_partner, lead_organisation) %>%
summarise(sector_reached = sum(sector_reached[activity_status == "Completed"], na.rm = TRUE),
activities = n_distinct(indicator_short)) %>%
select(county, implementing_partner, lead_organisation, sector_reached, `#activities` = activities, adm1_pcode)
eie %>%
mutate_at(vars(implementing_partner, lead_organisation), ~
str_sub(., end = 50L)) %>%
group_by(county, adm1_pcode, implementing_partner, lead_organisation) %>%
summarise(reached = sum(total_reached[activity_status == "Completed"], na.rm = TRUE),
activities = n_distinct(indicator_short)) %>%
select(county, implementing_partner, lead_organisation, sector_reached, `#activities` = activities, adm1_pcode)
eie %>%
mutate_at(vars(implementing_partner, lead_organisation), ~
str_sub(., end = 50L)) %>%
group_by(county, adm1_pcode, implementing_partner, lead_organisation) %>%
summarise(reached = sum(total_reached[activity_status == "Completed"], na.rm = TRUE),
activities = n_distinct(indicator_short)) %>%
select(county, implementing_partner, lead_organisation, reached, `#activities` = activities, adm1_pcode)
partner_list_counties %>%
filter(partner_type == "implementing_partner")
partner_list_counties %>%
filter(partner_type == "implementing_partner") %>%
write_csv("./data/partner_list_counties_only_ip.csv")
eie %>%
rename(monitoring_indicator = indicator,
main_activity = activity) %>%
select(month:comments) %>%
write_csv("./data/eie_5ws_ocha.csv")
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(viridis)
library(patchwork)
library(DT)
library(here)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(anytime)
library(tidytext)
theme_set(theme_light())
# Installation of mdepriv package
# install package devtools if not yet installed
#   install.packages("devtools")
# install fast from GitHub without vignettes
#   devtools::install_github("a-benini/mdepriv", build_vignettes = FALSE
# Alternatively, follow the instructions here: https://a-benini.github.io/mdepriv/
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
# mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# Fixing dates
name_to_date <- function(x) {
lubridate::mdy(ifelse(x %in% c(month.name, month.abb), paste0(x, "/01/2023"), x))
}
# Recode last item
# Doesn't work well
recode_last_item <- function(input_vector) {
# Create a copy of the input vector
updated_vector <- input_vector
new_value <- paste0("and ", updated_vector[length(updated_vector)])
# Recode the last item
updated_vector[length(updated_vector)] <- new_value
# Return the updated vector
return(updated_vector)
}
summarise_indicator <- function(tbl) {
tbl %>%
summarise(girls = sum(girls, na.rm = TRUE),
boys = sum(boys, na.rm = TRUE),
men = sum(men, na.rm = TRUE),
women = sum(women, na.rm = TRUE),
counties = n_distinct(adm1_pcode)) %>%
mutate_at(vars(girls, boys, men, women), ~ replace_na(., 0)) %>%
mutate(total = girls + boys + men + women)
}
list_counties <- function(tbl) {
tbl %>%
distinct(county) %>% summarise(
counties = paste(county, collapse = ", ")) %>%
pull(counties)
}
combined <- read_csv("./data/combined.csv")
combined
combined %>%
filter(indicator == 1)
combined %>%
filter(indicator == "1")
combined %>%
filter(unicef_indicator_number == 1)
combined %>%
filter(unicef_indicator_number == 1) %>%
filter(sex_modifier == "total",
age_modifier == "total",
beneficiary_group == "all")
combined %>%
filter(unicef_indicator_number == 1) %>%
filter(sex_modifier == "total",
age_modifier == "total",
beneficiary_group == "all") %>%
group_by(county) %>%
summarise(value = sum(value, na.rm = TRUE))
combined %>%
filter(unicef_indicator_number == 1)
combined %>%
filter(unicef_indicator_number == 1 & sub_indicator = "indicator1_all_total")
combined %>%
filter(unicef_indicator_number == 1 & sub_indicator == "indicator1_all_total")
combined %>% count(unicef_indicator)
filter(sex_modifier == "total",
age_modifier == "total",
beneficiary_group == "all") %>%
group_by(county) %>%
summarise(value = sum(value, na.rm = TRUE))
combined %>%
filter(unicef_indicator_number == 1 & sub_indicator == "indicator1_all_total") %>%
group_by(county) %>%
summarise(value = sum(value, na.rm = TRUE))
combined %>% count(unicef_indicator)
combined %>% filter(unicef_indicator_number == 2) %>%
count(sub_indicator)
combined %>%
filter(unicef_indicator_number == 2 & sub_indicator == "indicator2_all_total") %>%
group_by(county) %>%
summarise(value = sum(value, na.rm = TRUE))
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(viridis)
library(patchwork)
library(DT)
library(here)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(anytime)
library(tidytext)
theme_set(theme_light())
# Installation of mdepriv package
# install package devtools if not yet installed
#   install.packages("devtools")
# install fast from GitHub without vignettes
#   devtools::install_github("a-benini/mdepriv", build_vignettes = FALSE
# Alternatively, follow the instructions here: https://a-benini.github.io/mdepriv/
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
# mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# Fixing dates
name_to_date <- function(x) {
lubridate::mdy(ifelse(x %in% c(month.name, month.abb), paste0(x, "/01/2023"), x))
}
combined %>%
filter(beneficiary_group == "all",
sex_modifier == "total",
age_modifier == "total") %>%
group_by(county) %>%
summarise(value = sum(value, na.rm = TRUE))
combined %>%
filter(beneficiary_group == "all",
sex_modifier == "total",
age_modifier == "total") %>%
group_by(county, unicef_indicator_number) %>%
summarise(value = sum(value, na.rm = TRUE))
combined %>%
filter(beneficiary_group == "all",
sex_modifier == "total",
age_modifier == "total") %>%
group_by(county, unicef_indicator) %>%
summarise(value = sum(value, na.rm = TRUE))
combined %>%
filter(beneficiary_group == "all",
sex_modifier == "total",
age_modifier == "total") %>%
group_by(county, unicef_indicator) %>%
summarise(value = sum(value, na.rm = TRUE)) %>%
pivot_wider(names_from = "unicef_indicator",
values_from = "value")
combined %>%
filter(beneficiary_group == "all",
sex_modifier == "total",
age_modifier == "total") %>%
group_by(county, unicef_indicator) %>%
summarise(value = sum(value, na.rm = TRUE)) %>%
pivot_wider(names_from = "unicef_indicator",
values_from = "value") %>%
glimpse()
combined %>%
filter(beneficiary_group == "all",
sex_modifier == "total",
age_modifier == "total") %>%
group_by(county, unicef_indicator) %>%
arrange(unicef_indicator) %>%
summarise(value = sum(value, na.rm = TRUE)) %>%
pivot_wider(names_from = "unicef_indicator",
values_from = "value") %>%
glimpse()
1700 / 2390
8835 + 9372
