"indicator5_idps_female",
"indicator5_refugees_total_adults",
"indicator5_refugees_male",
"indicator5_refugees_female",
"indicator5_narrative",
"x5",
"indicator6_all_total_adults",
"indicator6_all_male",
"indicator6_all_female",
"indicator6_narrative",
"x6",
"indicator7_all_total_children",
"indicator7_all_boys",
"indicator7_all_girls",
"indicator7_host_community_total_children",
"indicator7_host_community_boys",
"indicator7_host_community_girls",
"indicator7_idps_total_children",
"indicator7_idps_boys",
"indicator7_idps_girls",
"indicator7_refugees_total_children",
"indicator7_refugees_boys",
"indicator7_refugees_girls",
"indicator7_cwd_total_children",
"indicator7_cwd_boys",
"indicator7_cwd_girls",
"indicator7_narrative")
}
bottom <- crossing(combined %>% distinct(county),
combined %>% distinct(month),
messy) %>%
rename(sub_indicator = messy) %>%
mutate(key = paste0(county, month, sub_indicator)) %>%
left_join(combined %>%
mutate(key = paste0(county, month, sub_indicator)) %>%
select(key, value, char_value),
by = "key") %>%
filter(!str_detect(sub_indicator, "x|month")) %>%
mutate(char_value = ifelse(str_detect(sub_indicator, "narrative"),
char_value, NA_character_)) %>%
replace_na(list(value = 0)) %>%
mutate(value = ifelse(str_detect(sub_indicator, "narrative"),
char_value, value)) %>%
select(-key, -char_value) %>%
pivot_wider(names_from = sub_indicator,
values_from = value) %>%
mutate_at(vars(!matches("narrative|county|month")),
~ as.numeric(.)) %>%
mutate(month = fct_relevel(month, c("Total", "January", "February", "March",
"April", "May", "June", "July")),
county = fct_relevel(county, c(combined %>% distinct(county) %>% pull(county)))) %>%
arrange(county, month) %>%
column_selector() %>%
select(-county, -month)
bottom %>% write_csv(paste0("./data/bottom_table_", format(Sys.Date(), "%Y%m%d"), ".csv"))
top <- crossing(combined %>% distinct(county),
combined %>% distinct(month),
messy) %>%
rename(sub_indicator = messy) %>%
mutate(key = paste0(county, month, sub_indicator)) %>%
left_join(combined %>%
mutate(key = paste0(county, month, sub_indicator)) %>%
select(key, value, char_value),
by = "key") %>%
filter(!str_detect(sub_indicator, "x|month")) %>%
mutate(char_value = ifelse(str_detect(sub_indicator, "narrative"),
char_value, NA_character_)) %>%
replace_na(list(value = 0)) %>%
mutate(value = ifelse(str_detect(sub_indicator, "narrative"),
char_value, value)) %>%
select(-key, -char_value) %>%
pivot_wider(names_from = sub_indicator,
values_from = value) %>%
mutate_at(vars(!matches("narrative|county|month")),
~ as.numeric(.)) %>%
group_by(month) %>%
summarise_at(vars(!matches("narrative|county|month")), ~ sum(., na.rm = TRUE)) %>%
mutate(indicator1_narrative = "",
indicator2_narrative = "",
indicator3_narrative = "",
indicator4_narrative = "",
indicator5_narrative = "",
indicator6_narrative = "",
indicator7_narrative = "",
county = "Total") %>%
column_selector() %>%
select(-county, -month) %>%
filter(county_month != "Total Total")
top %>% write_csv(paste0("./data/top_table_", format(Sys.Date(), "%Y%m%d"), ".csv"))
full_months <- c("January", "February", "March",
"April", "May", "June",
"July", "August", "September",
"October", "November", "December")
data_entry_wide <- crossing(combined %>% distinct(county),
full_months,
messy) %>%
rename(sub_indicator = messy,
month = full_months) %>%
mutate(key = paste0(county, month, sub_indicator)) %>%
left_join(combined %>%
mutate(key = paste0(county, month, sub_indicator)) %>%
select(key, value, char_value),
by = "key") %>%
filter(!str_detect(sub_indicator, "x|month")) %>%
replace_na(list(value = 0)) %>%
mutate(value = ifelse(str_detect(sub_indicator, "narrative"),
char_value, value)) %>%
select(-key, -char_value) %>%
pivot_wider(names_from = sub_indicator,
values_from = value) %>%
mutate_at(vars(!matches("narrative|county|month")),
~ as.numeric(.)) %>%
mutate(indicator1_narrative = "",
indicator2_narrative = "",
indicator3_narrative = "",
indicator4_narrative = "",
indicator5_narrative = "",
indicator6_narrative = "",
indicator7_narrative = "") %>%
column_selector() %>%
select(!matches("x"), -county_month) %>%
mutate(month = fct_relevel(month, full_months)) %>%
arrange(county, month)
data_entry_wide %>%
select(-matches("total")) %>%
select(-matches("all")) %>%
write_csv("./data/data_entry_lean.csv")
data_entry_wide %>%
rename(indicator6_female = indicator6_all_female,
indicator6_male = indicator6_all_male)
data_entry_wide %>%
rename(indicator6_female = indicator6_all_female,
indicator6_male = indicator6_all_male) %>%
select(-matches("total")) %>%
select(-matches("all")) %>%
write_csv("./data/data_entry_lean.csv")
combined %>% count(unicef_indicator)
knitr::opts_chunk$set(echo = TRUE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(magrittr)
library(viridis)
library(here)
library(flextable)
library(writexl)
library(naniar)
library(anytime)
library(widyr)
library(tidytext)
theme_set(theme_light())
# Disabling scientific notation
options(scipen = 100)
# This should just be a standard R function
`%out%` <- Negate(`%in%`)
# Function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# Scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
# Mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM2") %>%
clean_names()
names_5ws <- c(
"month",
"lead_organisation",
"organisation_type",
"donor",
"sector",
"education_level",
"indicator",
"activity",
"implementing_partner",
"county",
"sub_county",
"names_numbers_schools",
"start_date",
"end_date",
"activity_status",
"boys",
"girls",
"men",
"women",
"beneficiary_type",
"total_reached",
"comments"
)
read_5ws <- function(file) {
read_excel(file,
sheet = "5W_Data_Entry",
skip = 2,
col_types = c(
"text", "text", "text", "text", "text", "text",
"text", "text", "text", "text", "text", "text",
"date", "date",
"text",
"numeric", "numeric", "numeric", "numeric",
"text", "numeric", "text"
)) %>%
setNames(names_5ws) %>%
mutate(source = file_list[i]) %>%
# Doing this here, but you can always move this to the end
# But this is the assumption that these lists are correct
mutate(
names_numbers_schools = case_when(
names_numbers_schools == "All the Juniour Secondary Schools (JSS) in Kalobeyei Settlement" ~
"Kalobeyei Settlement, Friends, Joy, Morningstar, Future and Bright Junior Secondary Secondary schools.",
names_numbers_schools == "All the main Secondary Schools in Kalobeyei Settlement" ~
"Kalobeyei Settlement, Friends, Joy, Morningstar, Future and Bright Junior Secondary Secondary schools.",
TRUE ~ names_numbers_schools)) %>%
mutate(
schools = case_when(
activity == "Provision of school meals to learners in the 8 primary schools and 7 pre-primary schools in Kalobeyei Settlement." ~ 15,
names_numbers_schools == "22 refugee schools and 11 host community schools" ~ 33,
comments == "37 schools supported with 115 handwashing kits" ~ 37,
str_detect(names_numbers_schools, "\n") ~ str_count(names_numbers_schools, "\n") + 1,
str_detect(names_numbers_schools, "\\,") ~ str_count(names_numbers_schools, "\\,|and|&") + 1,
str_detect(names_numbers_schools, "and") ~ str_count(names_numbers_schools, "and") + 1,
str_detect(names_numbers_schools, "\\;") ~ str_count(names_numbers_schools, "\\;") + 1,
!is.na(names_numbers_schools) ~ parse_number(names_numbers_schools),
TRUE ~ NA_integer_),
schools = ifelse(!is.na(names_numbers_schools) & is.na(schools), 1, schools)
) %>%
replace_with_na(replace = list(names_numbers_schools = "N/A")) %>%
filter(!is.na(month) & !is.na(lead_organisation) & !is.na(indicator)) %>%
mutate(county = recode(county,
"Tana_River" = "Tana River",
"Homa_Bay" = "Homa Bay",
"Home Bay" = "Homa Bay",
"West_Pokot" = "West Pokot",
"Taita_Taveta" = "Taita Taveta")) %>%
left_join(locations %>%
distinct(adm1_en, adm1_pcode),
by = c("county" = "adm1_en")) %>%
mutate(indicator = case_when(
str_detect(indicator, "in drought affected areas") ~ paste0("indicator 1 ", indicator),
str_detect(indicator, "feeding programmes") ~ paste0("indicator 2 ", indicator),
str_detect(indicator, "teaching materials") ~ paste0("indicator 3 ", indicator),
str_detect(indicator, "hygiene") ~ paste0("indicator 4 ", indicator),
str_detect(indicator, "educators trained on resilience") ~ paste0("indicator 5 ", indicator),
str_detect(indicator, "youth benefiting from resilience") ~ paste0("indicator 6 ", indicator),
TRUE ~ indicator
)) %>%
mutate(month = fct_relevel(month, c("January", "February", "March", "April",
"May", "June", "July", "August",
"September", "October", "November", "December"))) %>%
mutate_at(vars(implementing_partner, lead_organisation), ~ str_trim(str_squish(.))) %>%
mutate_at(vars(implementing_partner, lead_organisation), ~
case_when(
str_detect(., "AVSI") ~ "AVSI Foundation",
str_detect(., "Action for sustainable change|Action for Sustainable change") ~
"Action for Sustainable Change",
str_detect(., "FCA|FINN|Finn") ~ "Finn Church Aid",
str_detect(
., "LIFESKILL|Life skills|Lifeskills|LifeSkills|LISP|LISFESKILLS PROMOTERS|LIFESKIILS PROMOTERS") ~
"Lifeskills Promoters",
str_detect(., "ChildFund|Childfund") ~ "ChildFund Kenya",
str_detect(., "Missionary Sistrs of the catechism|Missionary sisters of the catechism")
~ "Missionary Sisters of the Catechism",
str_detect(., "NRC|NORWEGIAN") ~ "Norwegian Refugee Council",
str_detect(., "SCI|Save the Children") ~ "Save the Children",
str_detect(., "World Vision|World vision|WVK BAMBA AP") ~ "World Vision Kenya",
str_detect(., "Nawiri Children Program") ~ "Nawiri Children Development Program",
str_detect(., "ERIKs development Partner") ~ "ERIKs Development Partner",
str_detect(., "Servants of the poor") ~ "Servants of the Poor",
str_detect(., "Evangelizing sisters of mary|ESM") ~ "Evangelizing Sisters of Mary",
str_detect(., "Voluntary Service Overseas|VSO") ~ "Voluntary Service Overseas",
str_detect(., "Homa Bay Counties") ~ "Homa Bay County",
str_detect(., "WERK") ~ "Women Educational Researchers of Kenya",
str_detect(., "Women Educational Researchers of Kenya,") ~ "Women Educational Researchers of Kenya",
str_detect(., "The Girl Child Network \\(GCN\\)") ~ "The Girl Child Network",
str_detect(., "FHK|FH Kenya") ~ "Food for the Hungry",
str_detect(., "Futebol da Forcaa") ~ "Futebol da Forcaa",
str_detect(., "Edukans and SHERP Samburu") ~ "Edukans",
str_detect(., "Feed The Children") ~ "Feed the Children",
. == "MOE" ~ "Ministry of Education",
. == "CDE Wajir" ~ "County Director of Education Wajir",
. == "CDE Mandera" ~ "County Director of Education Mandera",
. == "CDE Marsabit"  ~ "County Director of Education Marsabit",
. == "Girl Child Network" ~ "The Girl Child Network",
. == "SC" ~ "Save the Children",
TRUE ~ .
))%>%
# Think about how you want to resolve the disaggregation issues
mutate(indicator = ifelse(
!is.na(boys) & str_detect(activity, "Training of children"),
"indicator 6 # of children and youth benefiting from resilience enhancing programmes (MHPSS, DRR & Life Skills, etc)", indicator)) %>%
mutate(indicator_short = case_when(
indicator == "indicator 1 # of children and youth accessing ECD spaces/schools in drought affected areas" ~
"1. Access ECD spaces/schools",
indicator == "indicator 2 # of schools/ECD spaces with feeding programmes" ~
"2. Feeding programmes",
# Not sure what's wrong with the text of this indicator
str_detect(indicator, "3") ~ "3. Teaching materials",
indicator == "indicator 4 # of schools with adequate quantites of safe water for drinking and personal hygiene" ~
"4. Safe water, personal hygiene",
indicator == "indicator 5 # of teachers / educators trained on resilience enhancing programmes (MHPSS, DRR & Life Skills, etc)" ~
"5. Educators resilience enhancing",
indicator == "indicator 6 # of children and youth benefiting from resilience enhancing programmes (MHPSS, DRR & Life Skills, etc)" ~
"6. Children resilience enhancing"
)) %>%
filter(!is.na(county) & total_reached > 0) %>%
mutate(sector_reached = ifelse(str_detect(indicator_short, "1|2|5|6"),
total_reached,
0)) %>%
mutate(source = str_remove(source,
"C:/Users/seanywng/Documents/R/eie_wg_5ws/data/5Ws_2023/")) %>%
filter(!is.na(indicator)) %>%
mutate(implementing_partner = ifelse(is.na(implementing_partner), lead_organisation, implementing_partner))
}
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(viridis)
library(patchwork)
library(DT)
library(here)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(anytime)
library(tidytext)
library(ggsflabel)
theme_set(theme_light())
# Installation of mdepriv package
# install package devtools if not yet installed
#   install.packages("devtools")
# install fast from GitHub without vignettes
#   devtools::install_github("a-benini/mdepriv", build_vignettes = FALSE
# Alternatively, follow the instructions here: https://a-benini.github.io/mdepriv/
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
# mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# Fixing dates
name_to_date <- function(x) {
lubridate::mdy(ifelse(x %in% c(month.name, month.abb), paste0(x, "/01/2023"), x))
}
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM2") %>%
clean_names()
report_date <- "28 July 2023"
report_month <- "July"
sitrep_table <- read_xlsx("./data/sitrep_results_table.xlsx") %>%
clean_names()
targets <- read_csv("./data/eie_targets.csv")
pcode1_shape <-
sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp",
quiet = TRUE) %>%
clean_names()
ipc <- read_csv("./data/ipc.csv")
partner_list_counties <- read_csv("./data/partner_list_counties.csv") %>%
filter(partner_type == "implementing_partner")
eie <- read_csv("./data/eie_5ws.csv") %>%
filter(!is.na(indicator_short)) %>%
replace_na(list(boys = 0, girls = 0, men = 0, women = 0)) %>%
# Total reached of indicator 1 is only boys and girls
mutate(total_reached = ifelse(str_detect(indicator, "1"),
boys + girls,
total_reached))
eie %>%
mutate(indicator_short = fct_rev(indicator_short)) %>%
mutate_at(vars(boys, girls, men, women), ~ replace_na(., 0)) %>%
mutate_at(vars(men, women), ~ ifelse(str_detect(indicator, "1"), 0, .)) %>%
group_by(indicator_short) %>%
summarise_at(vars(boys, girls, men, women), ~ sum(., na.rm = TRUE)) %>%
mutate(total_reached = boys + girls + men + women,
female = (women + girls) / total_reached,
male = (boys + men) / total_reached) %>%
pivot_longer(cols = c(female, male),
names_to = "sex",
values_to = "pc") %>%
ggplot(aes(x = pc, y = indicator_short, fill = sex)) +
geom_col() +
geom_text(aes(x = pc,
y = indicator_short,
label = percent(pc, accuracy = 1)),
position = position_stack(vjust = .5),
colour = "white") +
scale_fill_manual(values = c("#443983", "#35b779")) +
scale_x_continuous(labels = percent) +
labs(x = "",
y = "",
title = "Sex breakdown by indicator")
eie %>%
mutate(indicator_short = fct_rev(indicator_short)) %>%
mutate_at(vars(boys, girls, men, women), ~ replace_na(., 0)) %>%
mutate_at(vars(men, women), ~ ifelse(str_detect(indicator, "1"), 0, .)) %>%
group_by(indicator_short) %>%
summarise_at(vars(boys, girls, men, women), ~ sum(., na.rm = TRUE)) %>%
mutate(total_reached = boys + girls + men + women,
female = (women + girls) / total_reached,
male = (boys + men) / total_reached) %>%
pivot_longer(cols = c(female, male),
names_to = "sex",
values_to = "pc") %>%
ggplot(aes(x = pc, y = indicator_short, fill = sex)) +
geom_col()
eie %>%
mutate(indicator_short = fct_rev(indicator_short)) %>%
mutate_at(vars(boys, girls, men, women), ~ replace_na(., 0)) %>%
mutate_at(vars(men, women), ~ ifelse(str_detect(indicator, "1"), 0, .)) %>%
group_by(indicator_short) %>%
summarise_at(vars(boys, girls, men, women), ~ sum(., na.rm = TRUE)) %>%
mutate(total_reached = boys + girls + men + women,
female = (women + girls) / total_reached,
male = (boys + men) / total_reached) %>%
pivot_longer(cols = c(female, male),
names_to = "sex",
values_to = "pc") %>%
ggplot(aes(x = pc, y = indicator_short, fill = sex)) +
geom_col()
eie %>%
mutate(indicator_short = fct_rev(indicator_short)) %>%
mutate_at(vars(boys, girls, men, women), ~ replace_na(., 0)) %>%
mutate_at(vars(men, women), ~ ifelse(str_detect(indicator, "1"), 0, .)) %>%
group_by(indicator_short) %>%
summarise_at(vars(boys, girls, men, women), ~ sum(., na.rm = TRUE)) %>%
mutate(total_reached = boys + girls + men + women,
female = (women + girls) / total_reached,
male = (boys + men) / total_reached) %>%
pivot_longer(cols = c(female, male),
names_to = "sex",
values_to = "pc") %>%
ggplot(aes(x = pc, y = indicator_short, fill = sex)) +
geom_col() +
geom_text(aes(x = pc,
y = indicator_short,
label = percent(pc, accuracy = 1)),
position = position_stack(vjust = .5),
colour = "white")
eie %>%
mutate(indicator_short = fct_rev(indicator_short)) %>%
mutate_at(vars(boys, girls, men, women), ~ replace_na(., 0)) %>%
mutate_at(vars(men, women), ~ ifelse(str_detect(indicator, "1"), 0, .)) %>%
group_by(indicator_short) %>%
summarise_at(vars(boys, girls, men, women), ~ sum(., na.rm = TRUE)) %>%
mutate(total_reached = boys + girls + men + women,
female = (women + girls) / total_reached,
male = (boys + men) / total_reached) %>%
pivot_longer(cols = c(female, male),
names_to = "sex",
values_to = "pc") %>%
ggplot(aes(x = pc, y = indicator_short, fill = sex)) +
geom_col() +
geom_text(aes(x = pc,
y = indicator_short,
label = percent(pc, accuracy = 1)),
position = position_stack(vjust = .5),
colour = "white") +
scale_fill_manual(values = c("#443983", "#35b779"))
eie %>% glimpse()
eie %>%
ggplot(aes(x = sector_reached, y = county)) +
geom_col()
eie %>%
group_by(county) %>%
summarise_at("sector_reached", ~ sum(., na.rm = TRUE))
eie %>%
group_by(county) %>%
summarise_at("sector_reached", ~ sum(., na.rm = TRUE)) %>%
filter(sector_reached != 0)
eie %>%
group_by(county) %>%
summarise_at("sector_reached", ~ sum(., na.rm = TRUE)) %>%
filter(sector_reached != 0) %>%
ggplot(aes(x = sector_reached, y = county)) +
geom_col()
eie %>%
group_by(county) %>%
summarise_at("sector_reached", ~ sum(., na.rm = TRUE)) %>%
filter(sector_reached != 0) %>%
ggplot(aes(x = sector_reached, y = fct_reorder(county, sector_reached))) +
geom_col()
