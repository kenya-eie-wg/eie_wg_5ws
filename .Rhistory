sum_stats$reached_1256,
total_reached),
latest_reached = ifelse(indicator_short == "Total",
sum_stats$latest_reached,
latest_reached)) %>%
left_join(targets %>%
filter(target_unit == "people") %>%
group_by(indicator_short) %>%
summarise(target = sum(county_target)),
by = "indicator_short") %>%
filter(!is.na(indicator_short)) %>%
mutate(target = ifelse(indicator_short == "Total",
targets %>% distinct(county, county_overall_target) %>% {sum(.$county_overall_target)},
target),
target = ifelse(is.na(target), 0, target)) %>%
mutate(pc = round(total_reached / target * 100, digits = 2),
pc = ifelse(is.infinite(pc), 100, pc)) %>%
select(indicator = indicator_short, partners, counties,
latest_reached, total_reached, target, `%target_reached` = pc) %>%
select_all(~ gsub("latest",
params$report_month, .)) %>%
select_all(~ str_to_title(.))
summary_table %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("Summary statistics for EIE 5Ws reporting, ", params$report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1:7, j = 1, size = 9) %>%
fontsize(size = 9, part = "header") %>%
footnote(i = 1, j = 2, part = "header", ref_symbols = "1",
as_paragraph("Only implementing partners")) %>%
footnote(i = 8, j = 5:6, ref_symbols = "2",
as_paragraph("Only the sum of indicators 1, 2, 5 and 6"))
eie %>%
filter(activity_status == "Completed") %>%
mutate(latest_reached = ifelse(month %in% params$report_month, total_reached, NA_integer_)) %>%
group_by(indicator_short) %>%
summarise(partners = n_distinct(implementing_partner),
counties = n_distinct(adm1_pcode),
latest_reached = sum(latest_reached, na.rm = TRUE),
total_reached = sum(total_reached, na.rm = TRUE)) %>%
adorn_totals("row",,,, latest_reached, total_reached)
summary_table %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("Summary statistics for EIE 5Ws reporting, ", params$report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1:7, j = 1, size = 9) %>%
fontsize(size = 9, part = "header") %>%
footnote(i = 1, j = 2, part = "header", ref_symbols = "1",
as_paragraph("Only implementing partners")) %>%
footnote(i = 8, j = 4:5, ref_symbols = "2",
as_paragraph("Only the sum of indicators 1, 2, 5 and 6"))
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(viridis)
library(patchwork)
library(DT)
library(here)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(anytime)
library(tidytext)
theme_set(theme_light())
# Installation of mdepriv package
# install package devtools if not yet installed
#   install.packages("devtools")
# install fast from GitHub without vignettes
#   devtools::install_github("a-benini/mdepriv", build_vignettes = FALSE
# Alternatively, follow the instructions here: https://a-benini.github.io/mdepriv/
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
# mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# Fixing dates
name_to_date <- function(x) {
lubridate::mdy(ifelse(x %in% c(month.name, month.abb), paste0(x, "/01/2023"), x))
}
# Recode last item
# Doesn't work well
recode_last_item <- function(input_vector) {
# Create a copy of the input vector
updated_vector <- input_vector
new_value <- paste0("and ", updated_vector[length(updated_vector)])
# Recode the last item
updated_vector[length(updated_vector)] <- new_value
# Return the updated vector
return(updated_vector)
}
summarise_indicator <- function(tbl) {
tbl %>%
summarise(girls = sum(girls, na.rm = TRUE),
boys = sum(boys, na.rm = TRUE),
men = sum(men, na.rm = TRUE),
women = sum(women, na.rm = TRUE),
counties = n_distinct(adm1_pcode)) %>%
mutate_at(vars(girls, boys, men, women), ~ replace_na(., 0)) %>%
mutate(total = girls + boys + men + women)
}
list_counties <- function(tbl) {
tbl %>%
distinct(county) %>% summarise(
counties = paste(county, collapse = ", ")) %>%
pull(counties)
}
eie %>% glimpse()
eie %>% count(indicator_short, indicator)
eie %>% count(indicator_short)
sitrep_table_new <- eie %>%
filter(activity_status == "Completed") %>%
mutate(group = ifelse(str_detect(lead_organisation, "UNICEF"),
"unicef", "non_unicef")) %>%
filter(str_detect(indicator, "1|3") &
!str_detect(indicator, "5")) %>%
mutate(total = boys + girls) %>%
pivot_longer(cols = c(boys, girls, total),
names_to = "sex_modifier",
values_to = "beneficiaries") %>%
mutate(sex_modifier = str_to_title(sex_modifier),
sex_modifier = fct_relevel(sex_modifier,
c("Total", "Girls", "Boys"))) %>%
group_by(indicator_short, sex_modifier) %>%
summarise(unicef_previous_results = sum(beneficiaries[month %in% previous_months & group == "unicef"],
na.rm = TRUE),
unicef_total_results = sum(beneficiaries[group == "unicef"],
na.rm = TRUE),
sector_previous_results = sum(beneficiaries[month %in% previous_months], na.rm = TRUE),
sector_total_results = sum(beneficiaries, na.rm = TRUE),
.groups = "drop") %>%
mutate(indicator_match = ifelse(indicator_short == "1. Access ECD spaces/schools",
"Access to education",
"Learning materials"),
match = paste0(indicator_match, sex_modifier)) %>%
left_join(sitrep_table %>%
mutate(indicator_match = ifelse(str_detect(indicator_match, "education"),
"Access to education",
"Learning materials"),
sex_modifier = case_when(
str_detect(sex_modifier, "Total") ~ "Total",
str_detect(sex_modifier, "Girls") ~ "Girls",
str_detect(sex_modifier, "Boys") ~ "Boys")) %>%
# You can remove this later, since you've figured out the error
mutate(match = paste0(indicator_match, sex_modifier)) %>%
mutate_at(vars(needs, unicef_target, sector_target),
~ parse_number(.)) %>%
select(match, needs, unicef_target, sector_target),
by = c("match")) %>%
mutate(unicef_progress_rate = round(unicef_total_results / unicef_target * 100, digits = 2),
sector_progress_rate = round(sector_total_results / sector_target * 100, digits = 2)) %>%
select(indicator = indicator_match, sex_modifier, needs,
unicef_target, unicef_total_results, unicef_previous_results, unicef_progress_rate,
sector_target, sector_total_results, sector_previous_results, sector_progress_rate)
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM2") %>%
clean_names()
eie <- read_csv("./data/eie_5ws.csv")
report_date <- "31 December 2023"
previous_months <- c("January", "February", "March", "April", "May",
"July", "August", "September", "October", "November")
report_month <- "December"
sitrep_table <- read_xlsx("./data/sitrep_results_table.xlsx") %>%
setNames(c(
"indicator",
"indicator_match",
"sex_modifier",
"needs",
"unicef_target",
"unicef_total_results",
"unicef_previous_results",
"unicef_progress_rate",
"sector_target",
"sector_total_results",
"sector_previous_results",
"sector_progress_rate"
))
# Check the file name
# combined <- read_csv("./data/combined20230904.csv")
sitrep_table_new <- eie %>%
filter(activity_status == "Completed") %>%
mutate(group = ifelse(str_detect(lead_organisation, "UNICEF"),
"unicef", "non_unicef")) %>%
filter(str_detect(indicator, "1|3") &
!str_detect(indicator, "5")) %>%
mutate(total = boys + girls) %>%
pivot_longer(cols = c(boys, girls, total),
names_to = "sex_modifier",
values_to = "beneficiaries") %>%
mutate(sex_modifier = str_to_title(sex_modifier),
sex_modifier = fct_relevel(sex_modifier,
c("Total", "Girls", "Boys"))) %>%
group_by(indicator_short, sex_modifier) %>%
summarise(unicef_previous_results = sum(beneficiaries[month %in% previous_months & group == "unicef"],
na.rm = TRUE),
unicef_total_results = sum(beneficiaries[group == "unicef"],
na.rm = TRUE),
sector_previous_results = sum(beneficiaries[month %in% previous_months], na.rm = TRUE),
sector_total_results = sum(beneficiaries, na.rm = TRUE),
.groups = "drop") %>%
mutate(indicator_match = ifelse(indicator_short == "1. Access ECD spaces/schools",
"Access to education",
"Learning materials"),
match = paste0(indicator_match, sex_modifier)) %>%
left_join(sitrep_table %>%
mutate(indicator_match = ifelse(str_detect(indicator_match, "education"),
"Access to education",
"Learning materials"),
sex_modifier = case_when(
str_detect(sex_modifier, "Total") ~ "Total",
str_detect(sex_modifier, "Girls") ~ "Girls",
str_detect(sex_modifier, "Boys") ~ "Boys")) %>%
# You can remove this later, since you've figured out the error
mutate(match = paste0(indicator_match, sex_modifier)) %>%
mutate_at(vars(needs, unicef_target, sector_target),
~ parse_number(.)) %>%
select(match, needs, unicef_target, sector_target),
by = c("match")) %>%
mutate(unicef_progress_rate = round(unicef_total_results / unicef_target * 100, digits = 2),
sector_progress_rate = round(sector_total_results / sector_target * 100, digits = 2)) %>%
select(indicator = indicator_match, sex_modifier, needs,
unicef_target, unicef_total_results, unicef_previous_results, unicef_progress_rate,
sector_target, sector_total_results, sector_previous_results, sector_progress_rate)
sitrep_table_new%>%
flextable() %>%
theme_zebra() %>%
fontsize(part = "header", size = 6) %>%
fontsize(i = 1:6, j = 1:11, size = 7)
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(viridis)
library(patchwork)
library(DT)
library(here)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(anytime)
library(tidytext)
theme_set(theme_light())
# Installation of mdepriv package
# install package devtools if not yet installed
#   install.packages("devtools")
# install fast from GitHub without vignettes
#   devtools::install_github("a-benini/mdepriv", build_vignettes = FALSE
# Alternatively, follow the instructions here: https://a-benini.github.io/mdepriv/
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
# mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# Fixing dates
name_to_date <- function(x) {
lubridate::mdy(ifelse(x %in% c(month.name, month.abb), paste0(x, "/01/2023"), x))
}
# Recode last item
# Doesn't work well
recode_last_item <- function(input_vector) {
# Create a copy of the input vector
updated_vector <- input_vector
new_value <- paste0("and ", updated_vector[length(updated_vector)])
# Recode the last item
updated_vector[length(updated_vector)] <- new_value
# Return the updated vector
return(updated_vector)
}
summarise_indicator <- function(tbl) {
tbl %>%
summarise(girls = sum(girls, na.rm = TRUE),
boys = sum(boys, na.rm = TRUE),
men = sum(men, na.rm = TRUE),
women = sum(women, na.rm = TRUE),
counties = n_distinct(adm1_pcode)) %>%
mutate_at(vars(girls, boys, men, women), ~ replace_na(., 0)) %>%
mutate(total = girls + boys + men + women)
}
list_counties <- function(tbl) {
tbl %>%
distinct(county) %>% summarise(
counties = paste(county, collapse = ", ")) %>%
pull(counties)
}
eie %>%
filter(activity_status == "Completed") %>%
mutate(group = ifelse(str_detect(lead_organisation, "UNICEF"),
"unicef", "non_unicef")) %>%
filter(str_detect(indicator, "1|3")) %>%
mutate(total = boys + girls) %>%
pivot_longer(cols = c(boys, girls, total),
names_to = "sex_modifier",
values_to = "beneficiaries") %>%
mutate(sex_modifier = str_to_title(sex_modifier),
sex_modifier = fct_relevel(sex_modifier,
c("Total", "Girls", "Boys"))) %>%
group_by(indicator_short, sex_modifier) %>%
summarise(unicef_previous_results = sum(beneficiaries[month %in% previous_months & group == "unicef"],
na.rm = TRUE),
unicef_total_results = sum(beneficiaries[group == "unicef"],
na.rm = TRUE),
sector_previous_results = sum(beneficiaries[month %in% previous_months], na.rm = TRUE),
sector_total_results = sum(beneficiaries, na.rm = TRUE),
.groups = "drop") %>%
mutate(indicator_match = ifelse(indicator_short == "1. Access ECD spaces/schools",
"Access to education",
"Learning materials"),
match = paste0(indicator_match, sex_modifier))
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM2") %>%
clean_names()
eie <- read_csv("./data/eie_5ws.csv") %>%
filter(month %out% c("November", "December"))
report_date <- "30 October 2023"
previous_months <- c("January", "February", "March", "April", "May", "June", "July", "August", "September")
report_month <- "October"
sitrep_table <- read_xlsx("./data/sitrep_results_table.xlsx") %>%
setNames(c(
"indicator",
"indicator_match",
"sex_modifier",
"needs",
"unicef_target",
"unicef_total_results",
"unicef_previous_results",
"unicef_progress_rate",
"sector_target",
"sector_total_results",
"sector_previous_results",
"sector_progress_rate"
))
# Check the file name
# combined <- read_csv("./data/combined20230904.csv")
eie %>%
filter(activity_status == "Completed") %>%
mutate(group = ifelse(str_detect(lead_organisation, "UNICEF"),
"unicef", "non_unicef")) %>%
filter(str_detect(indicator, "1|3")) %>%
mutate(total = boys + girls) %>%
pivot_longer(cols = c(boys, girls, total),
names_to = "sex_modifier",
values_to = "beneficiaries") %>%
mutate(sex_modifier = str_to_title(sex_modifier),
sex_modifier = fct_relevel(sex_modifier,
c("Total", "Girls", "Boys"))) %>%
group_by(indicator_short, sex_modifier) %>%
summarise(unicef_previous_results = sum(beneficiaries[month %in% previous_months & group == "unicef"],
na.rm = TRUE),
unicef_total_results = sum(beneficiaries[group == "unicef"],
na.rm = TRUE),
sector_previous_results = sum(beneficiaries[month %in% previous_months], na.rm = TRUE),
sector_total_results = sum(beneficiaries, na.rm = TRUE),
.groups = "drop") %>%
mutate(indicator_match = ifelse(indicator_short == "1. Access ECD spaces/schools",
"Access to education",
"Learning materials"),
match = paste0(indicator_match, sex_modifier))
eie %>%
filter(activity_status == "Completed") %>%
mutate(group = ifelse(str_detect(lead_organisation, "UNICEF"),
"unicef", "non_unicef")) %>%
filter(str_detect(indicator, "1|3") & !str_detect(indicator, "5")) %>%
mutate(total = boys + girls) %>%
pivot_longer(cols = c(boys, girls, total),
names_to = "sex_modifier",
values_to = "beneficiaries") %>%
mutate(sex_modifier = str_to_title(sex_modifier),
sex_modifier = fct_relevel(sex_modifier,
c("Total", "Girls", "Boys"))) %>%
group_by(indicator_short, sex_modifier) %>%
summarise(unicef_previous_results = sum(beneficiaries[month %in% previous_months & group == "unicef"],
na.rm = TRUE),
unicef_total_results = sum(beneficiaries[group == "unicef"],
na.rm = TRUE),
sector_previous_results = sum(beneficiaries[month %in% previous_months], na.rm = TRUE),
sector_total_results = sum(beneficiaries, na.rm = TRUE),
.groups = "drop") %>%
mutate(indicator_match = ifelse(indicator_short == "1. Access ECD spaces/schools",
"Access to education",
"Learning materials"),
match = paste0(indicator_match, sex_modifier))
eie %>%
filter(activity_status == "Completed") %>%
mutate(group = ifelse(str_detect(lead_organisation, "UNICEF"),
"unicef", "non_unicef")) %>%
filter(str_detect(indicator, "1|3") & !str_detect(indicator, "5")) %>%
mutate(total = boys + girls) %>%
pivot_longer(cols = c(boys, girls, total),
names_to = "sex_modifier",
values_to = "beneficiaries") %>%
mutate(sex_modifier = str_to_title(sex_modifier),
sex_modifier = fct_relevel(sex_modifier,
c("Total", "Girls", "Boys")))
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(viridis)
library(patchwork)
library(DT)
library(here)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(anytime)
library(tidytext)
theme_set(theme_light())
# Installation of mdepriv package
# install package devtools if not yet installed
#   install.packages("devtools")
# install fast from GitHub without vignettes
#   devtools::install_github("a-benini/mdepriv", build_vignettes = FALSE
# Alternatively, follow the instructions here: https://a-benini.github.io/mdepriv/
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
# mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# Fixing dates
name_to_date <- function(x) {
lubridate::mdy(ifelse(x %in% c(month.name, month.abb), paste0(x, "/01/2023"), x))
}
# Run this if you need to
# rmarkdown::render(input = "5Ws_cleaning_script.Rmd")
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM2") %>%
clean_names()
sitrep_table <- read_xlsx("./data/sitrep_results_table.xlsx") %>%
clean_names()
targets <- read_csv("./data/eie_targets.csv")
pcode1_shape <-
sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp",
quiet = TRUE) %>%
clean_names()
ipc <- read_csv("./data/ipc.csv")
partner_list_counties <- read_csv("./data/partner_list_counties.csv") %>%
filter(partner_type == "implementing_partner")
eie <- read_csv("./data/eie_5ws.csv") %>%
# filter(!is.na(indicator_short)) %>%
replace_na(list(boys = 0, girls = 0, men = 0, women = 0)) %>%
# Total reached of indicator 1 is only boys and girls
mutate(total_reached = case_when(
str_detect(indicator, "children and youth accessing ECD spaces/schools in drought affected areas") ~
boys + girls,
str_detect(indicator, "5 #|5.1|5.2|5.3") ~ men + women,
str_detect(indicator, "children and youth benefiting from resilience enhancing programmes") ~ boys + girls,
TRUE ~ total_reached)) %>%
mutate(lead_organisation = ifelse(is.na(lead_organisation),
implementing_partner,
lead_organisation))
