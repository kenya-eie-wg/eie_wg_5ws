str_detect(., "SC|SCI|Save the Children") ~ "Save the Children",
str_detect(., "World Vision|World vision|WVK BAMBA AP") ~ "World Vision Kenya",
str_detect(., "Nawiri Children Program") ~ "Nawiri Children Development Program",
str_detect(., "ERIKs development Partner") ~ "ERIKs Development Partner",
str_detect(., "Servants of the poor") ~ "Servants of the Poor",
str_detect(., "Evangelizing sisters of mary") ~ "Evangelizing Sisters of Mary",
TRUE ~ .
))%>%
# Think about how you want to resolve the disaggregation issues
mutate(indicator = ifelse(
!is.na(boys) & str_detect(activity, "Training of children"),
"indicator 6 # of children and youth benefiting from resilience enhancing programmes (MHPSS, DRR & Life Skills, etc)", indicator)) %>%
mutate(indicator_short = case_when(
indicator == "indicator 1 # of children and youth accessing ECD spaces/schools in drought affected areas" ~
"1. Access ECD spaces/schools",
indicator == "indicator 2 # of schools/ECD spaces with feeding programmes" ~
"2. Feeding programmes",
# Not sure what's wrong with the text of this indicator
str_detect(indicator, "3") ~ "3. Teaching materials",
indicator == "indicator 4 # of schools with adequate quantites of safe water for drinking and personal hygiene" ~
"4. Safe water, personal hygiene",
indicator == "indicator 5 # of teachers / educators trained on resilience enhancing programmes (MHPSS, DRR & Life Skills, etc)" ~
"5. Educators resilience enhancing",
indicator == "indicator 6 # of children and youth benefiting from resilience enhancing programmes (MHPSS, DRR & Life Skills, etc)" ~
"6. Children resilience enhancing"
)) %>%
filter(!is.na(county) & total_reached > 0) %>%
mutate(sector_reached = ifelse(str_detect(indicator_short, "1|2|5|6"),
total_reached,
0)) %>%
mutate(source = str_remove(source,
"C:/Users/seanywng/Documents/R/eie_wg_5ws/data/5Ws_2023/"))
}
# Change the folder to the correct one
# The files will be read from here
file_list <- list.files(path = path_5ws,
recursive = TRUE,
pattern = "\\.xlsx$",
full.names = TRUE)
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM2") %>%
clean_names()
# This is the folder where the 4Ws from the current round are stored
path_5ws <- "C:/Users/seanywng/Documents/R/eie_wg_5ws/data/5Ws_2023"
# Change the folder to the correct one
# The files will be read from here
file_list <- list.files(path = path_5ws,
recursive = TRUE,
pattern = "\\.xlsx$",
full.names = TRUE)
# Filtering out open? files? Not sure
file_list <- file_list[!str_detect(file_list, "\\~")]
# Ok, got the for loop to work
# Initialise empty data frame
eie <- data.frame()
# Loop
for (i in 1:length(file_list)) {
eie_i <- read_5ws(file_list[i])
eie <- rbind(eie, eie_i)
}
eie %>%
mutate(total_reached_check = rowSums(.[16:19], na.rm = TRUE)) %>%
filter(total_reached_check != total_reached)
eie %>%
filter(is.na(adm1_pcode)) %>%
distinct(county)
eie %>%
filter(!is.na(indicator))
eie %>%
filter(is.na(indicator))
read_5ws <- function(file) {
read_excel(file,
sheet = "5W_Data_Entry",
skip = 2,
col_types = c(
"text", "text", "text", "text", "text", "text",
"text", "text", "text", "text", "text", "text",
"date", "date",
"text",
"numeric", "numeric", "numeric", "numeric",
"text", "numeric", "text"
)) %>%
setNames(names_5ws) %>%
mutate(source = file_list[i]) %>%
# Doing this here, but you can always move this to the end
# But this is the assumption that these lists are correct
mutate(
names_numbers_schools = case_when(
names_numbers_schools == "All the Juniour Secondary Schools (JSS) in Kalobeyei Settlement" ~
"Kalobeyei Settlement, Friends, Joy, Morningstar, Future and Bright Junior Secondary Secondary schools.",
names_numbers_schools == "All the main Secondary Schools in Kalobeyei Settlement" ~
"Kalobeyei Settlement, Friends, Joy, Morningstar, Future and Bright Junior Secondary Secondary schools.",
TRUE ~ names_numbers_schools)) %>%
mutate(
schools = case_when(
activity == "Provision of school meals to learners in the 8 primary schools and 7 pre-primary schools in Kalobeyei Settlement." ~ 15,
names_numbers_schools == "22 refugee schools and 11 host community schools" ~ 33,
comments == "37 schools supported with 115 handwashing kits" ~ 37,
str_detect(names_numbers_schools, "\n") ~ str_count(names_numbers_schools, "\n") + 1,
str_detect(names_numbers_schools, "\\,") ~ str_count(names_numbers_schools, "\\,|and|&") + 1,
str_detect(names_numbers_schools, "and") ~ str_count(names_numbers_schools, "and") + 1,
str_detect(names_numbers_schools, "\\;") ~ str_count(names_numbers_schools, "\\;") + 1,
!is.na(names_numbers_schools) ~ parse_number(names_numbers_schools),
TRUE ~ NA_integer_),
schools = ifelse(!is.na(names_numbers_schools) & is.na(schools), 1, schools)
) %>%
replace_with_na(replace = list(names_numbers_schools = "N/A")) %>%
filter(!is.na(month) & !is.na(lead_organisation) & !is.na(indicator)) %>%
mutate(county = recode(county,
"Tana_River" = "Tana River",
"Homa_Bay" = "Homa Bay",
"Home Bay" = "Homa Bay",
"West_Pokot" = "West Pokot",
"Taita_Taveta" = "Taita Taveta")) %>%
left_join(locations %>%
distinct(adm1_en, adm1_pcode),
by = c("county" = "adm1_en")) %>%
mutate(indicator = case_when(
str_detect(indicator, "in drought affected areas") ~ paste0("indicator 1 ", indicator),
str_detect(indicator, "feeding programmes") ~ paste0("indicator 2 ", indicator),
str_detect(indicator, "teaching materials") ~ paste0("indicator 3 ", indicator),
str_detect(indicator, "hygiene") ~ paste0("indicator 4 ", indicator),
str_detect(indicator, "educators trained on resilience") ~ paste0("indicator 5 ", indicator),
str_detect(indicator, "youth benefiting from resilience") ~ paste0("indicator 6 ", indicator),
TRUE ~ indicator
)) %>%
mutate(month = fct_relevel(month, c("January", "February", "March", "April",
"May", "June", "July", "August",
"September", "October", "November", "December"))) %>%
mutate_at(vars(implementing_partner, lead_organisation), ~
case_when(
str_detect(., "AVSI") ~ "AVSI Foundation",
. == "Action for sustainable change" ~ "Action for Sustainable Change",
str_detect(., "FCA|FINN|Finn") ~ "Finn Church Aid",
str_detect(
., "LIFESKILL|Life skills|Lifeskills|LifeSkills|LISP|LISFESKILLS PROMOTERS|LIFESKIILS PROMOTERS") ~
"Lifeskill Promoters",
str_detect(., "ChildFund|Childfund") ~ "ChildFund Kenya",
. == "Missionary Sistrs of the catechism" ~ "Missionary Sisters of the Catechism",
str_detect(., "NRC|NORWEGIAN") ~ "Norwegian Refugee Council",
str_detect(., "SC|SCI|Save the Children") ~ "Save the Children",
str_detect(., "World Vision|World vision|WVK BAMBA AP") ~ "World Vision Kenya",
str_detect(., "Nawiri Children Program") ~ "Nawiri Children Development Program",
str_detect(., "ERIKs development Partner") ~ "ERIKs Development Partner",
str_detect(., "Servants of the poor") ~ "Servants of the Poor",
str_detect(., "Evangelizing sisters of mary") ~ "Evangelizing Sisters of Mary",
TRUE ~ .
))%>%
# Think about how you want to resolve the disaggregation issues
mutate(indicator = ifelse(
!is.na(boys) & str_detect(activity, "Training of children"),
"indicator 6 # of children and youth benefiting from resilience enhancing programmes (MHPSS, DRR & Life Skills, etc)", indicator)) %>%
mutate(indicator_short = case_when(
indicator == "indicator 1 # of children and youth accessing ECD spaces/schools in drought affected areas" ~
"1. Access ECD spaces/schools",
indicator == "indicator 2 # of schools/ECD spaces with feeding programmes" ~
"2. Feeding programmes",
# Not sure what's wrong with the text of this indicator
str_detect(indicator, "3") ~ "3. Teaching materials",
indicator == "indicator 4 # of schools with adequate quantites of safe water for drinking and personal hygiene" ~
"4. Safe water, personal hygiene",
indicator == "indicator 5 # of teachers / educators trained on resilience enhancing programmes (MHPSS, DRR & Life Skills, etc)" ~
"5. Educators resilience enhancing",
indicator == "indicator 6 # of children and youth benefiting from resilience enhancing programmes (MHPSS, DRR & Life Skills, etc)" ~
"6. Children resilience enhancing"
)) %>%
filter(!is.na(county) & total_reached > 0) %>%
mutate(sector_reached = ifelse(str_detect(indicator_short, "1|2|5|6"),
total_reached,
0)) %>%
mutate(source = str_remove(source,
"C:/Users/seanywng/Documents/R/eie_wg_5ws/data/5Ws_2023/")) %>%
filter(!is.na(indicator))
}
# Change the folder to the correct one
# The files will be read from here
file_list <- list.files(path = path_5ws,
recursive = TRUE,
pattern = "\\.xlsx$",
full.names = TRUE)
# Filtering out open? files? Not sure
file_list <- file_list[!str_detect(file_list, "\\~")]
# Ok, got the for loop to work
# Initialise empty data frame
eie <- data.frame()
# Loop
for (i in 1:length(file_list)) {
eie_i <- read_5ws(file_list[i])
eie <- rbind(eie, eie_i)
}
eie %>%
mutate(total_reached_check = rowSums(.[16:19], na.rm = TRUE)) %>%
filter(total_reached_check != total_reached)
eie %>%
filter(is.na(adm1_pcode)) %>%
distinct(county)
eie %>%
filter(is.na(indicator))
# Write
eie %>%
write_csv("./data/eie_5ws.csv")
eie <- read_csv("./data/eie_5ws.csv") %>%
filter(!is.na(indicator_short))
eie %>%
filter(activity_status == "Completed" & !is.na(indicator_short)) %>%
filter(str_detect(indicator, "4") & month == "May") %>%
filter(lead_organisation == "UNICEF")
eie %>%
filter(activity_status == "Completed" & !is.na(indicator_short)) %>%
mutate(has_schools = ifelse(!is.na(schools), "yes", "no")) %>%
group_by(indicator_short, has_schools) %>%
summarise(schools = sum(schools, na.rm = TRUE),
reached = sum(total_reached, na.rm = TRUE)) %>%
ungroup() %>%
mutate(indicator_short = fct_relevel(indicator_short,
c("1. Access ECD spaces/schools",
"2. Feeding programmes",
"3. Teaching materials",
"4. Safe water, personal hygiene",
"5. Educators resilience enhancing",
"6. Children resilience enhancing")),
indicator_short = fct_rev(indicator_short)) %>%
ggplot(aes(y = indicator_short, x = reached)) +
geom_col(aes(fill = has_schools),
position = position_dodge(width = .9)) +
geom_text(aes(label = comma(reached), group = has_schools),
position = position_dodge(width = .9),
hjust = "inward") +
scale_fill_viridis_d(option = "cividis", end = .9, begin = .3) +
scale_x_continuous(labels = comma) +
labs(x = "Reached",
y = "",
fill = "Schools\nreported",
title = "Not all persons reached are associated with schools",
subtitle = "Only ")
eie %>%
filter(activity_status == "Completed") %>%
filter(!is.na(schools)) %>%
mutate(date = name_to_date(month)) %>%
filter(str_detect(indicator_short, "2|4")) %>%
group_by(indicator_short, date) %>%
summarise(schools = sum(schools),
reached = sum(total_reached)) %>%
arrange(date) %>%
mutate(cum_schools = cumsum(schools)) %>%
arrange(indicator_short) %>%
ggplot(aes(x = date, y = cum_schools),
vjust = -.5) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
geom_line(size = 1.7,
aes(colour = indicator_short)) +
geom_text(aes(label = comma(cum_schools)), vjust = -.5) +
scale_colour_manual(values = c("#31688e", "#d8576b")) +
theme(legend.position = "bottom") +
labs(x = "",
y = "Cumulative number of schools reached",
title = "Schools reached by feeding programmes and WASH in schools",
colour = "Indicator")
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(viridis)
library(patchwork)
library(DT)
library(here)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(anytime)
library(tidytext)
library(ggsflabel)
theme_set(theme_light())
# Installation of mdepriv package
# install package devtools if not yet installed
#   install.packages("devtools")
# install fast from GitHub without vignettes
#   devtools::install_github("a-benini/mdepriv", build_vignettes = FALSE
# Alternatively, follow the instructions here: https://a-benini.github.io/mdepriv/
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
# mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# Fixing dates
name_to_date <- function(x) {
lubridate::mdy(ifelse(x %in% c(month.name, month.abb), paste0(x, "/01/2023"), x))
}
eie %>%
filter(activity_status == "Completed") %>%
mutate(latest_reached = ifelse(month == "June", total_reached, NA_integer_)) %>%
group_by(indicator_short) %>%
summarise(partners = n_distinct(implementing_partner),
counties = n_distinct(adm1_pcode),
latest_reached = sum(latest_reached, na.rm = TRUE),
total_reached = sum(total_reached, na.rm = TRUE)) %>%
adorn_totals("row",,,, latest_reached, total_reached) %>%
mutate(partners = ifelse(indicator_short == "Total", sum_stats$partners, partners),
counties = ifelse(indicator_short == "Total", sum_stats$counties, counties),
total_reached = ifelse(indicator_short == "Total",
sum_stats$reached_1256,
total_reached),
latest_reached = ifelse(indicator_short == "Total",
sum_stats$latest_reached,
latest_reached)) %>%
left_join(targets %>%
filter(target_unit == "people") %>%
group_by(indicator_short) %>%
summarise(target = sum(county_target)),
by = "indicator_short") %>%
mutate(target = ifelse(indicator_short == "Total",
targets %>% distinct(county, county_overall_target) %>% {sum(.$county_overall_target)},
target)) %>%
mutate(pc = round(total_reached / target * 100, digits = 2)) %>%
select(indicator = indicator_short, partners, counties,
latest_reached, total_reached, target, `%target` = pc) %>%
select_all(~ gsub("latest",
report_month, .)) %>%
select_all(~ str_to_title(.)) %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("Summary statistics for EIE 5Ws reporting, ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1:6, j = 1, size = 9) %>%
fontsize(size = 9, part = "header") %>%
footnote(i = 1, j = 4, part = "header", ref_symbols = "1",
as_paragraph("Distinct number of schools not available as full list of schools is not reported")) %>%
footnote(i = 7, j = 5:6, ref_symbols = "2",
as_paragraph("Only the sum of indicators 1, 2, 5 and 6"))
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM2") %>%
clean_names()
eie <- read_csv("./data/eie_5ws.csv") %>%
filter(!is.na(indicator_short))
report_date <- "25 June 2023"
report_month <- "June"
sitrep_table <- read_xlsx("./data/sitrep_results_table.xlsx") %>%
clean_names()
targets <- read_csv("./data/eie_targets.csv")
pcode1_shape <-
sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp",
quiet = TRUE) %>%
clean_names()
ipc <- read_csv("./data/ipc.csv")
sum_stats <- eie %>%
summarise(partners = n_distinct(implementing_partner),
counties = n_distinct(county),
reached = sum(sector_reached, na.rm = TRUE),
men = sum(men[activity_status == "Completed"], na.rm = TRUE),
women = sum(women[activity_status == "Completed"], na.rm = TRUE),
boys = sum(boys[activity_status == "Completed"], na.rm = TRUE),
girls = sum(girls[activity_status == "Completed"], na.rm = TRUE),
reached_1256 = sum(total_reached[str_detect(indicator_short, "1|2|5|6") &
activity_status == "Completed"], na.rm = TRUE),
latest_reached = sum(total_reached[str_detect(indicator_short, "1|2|5|6") &
activity_status == "Completed"&
month %in% report_month],
na.rm = TRUE))
eie %>%
filter(activity_status == "Completed") %>%
mutate(latest_reached = ifelse(month %in% report_month, total_reached, NA_integer_)) %>%
group_by(indicator_short) %>%
summarise(partners = n_distinct(implementing_partner),
counties = n_distinct(adm1_pcode),
latest_reached = sum(latest_reached, na.rm = TRUE),
total_reached = sum(total_reached, na.rm = TRUE)) %>%
adorn_totals("row",,,, latest_reached, total_reached) %>%
mutate(partners = ifelse(indicator_short == "Total", sum_stats$partners, partners),
counties = ifelse(indicator_short == "Total", sum_stats$counties, counties),
total_reached = ifelse(indicator_short == "Total",
sum_stats$reached_1256,
total_reached),
latest_reached = ifelse(indicator_short == "Total",
sum_stats$latest_reached,
latest_reached)) %>%
left_join(targets %>%
filter(target_unit == "people") %>%
group_by(indicator_short) %>%
summarise(target = sum(county_target)),
by = "indicator_short") %>%
mutate(target = ifelse(indicator_short == "Total",
targets %>% distinct(county, county_overall_target) %>% {sum(.$county_overall_target)},
target)) %>%
mutate(pc = round(total_reached / target * 100, digits = 2)) %>%
select(indicator = indicator_short, partners, counties,
latest_reached, total_reached, target, `%target` = pc) %>%
select_all(~ gsub("latest",
report_month, .)) %>%
select_all(~ str_to_title(.)) %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("Summary statistics for EIE 5Ws reporting, ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1:6, j = 1, size = 9) %>%
fontsize(size = 9, part = "header") %>%
footnote(i = 1, j = 4, part = "header", ref_symbols = "1",
as_paragraph("Distinct number of schools not available as full list of schools is not reported")) %>%
footnote(i = 7, j = 5:6, ref_symbols = "2",
as_paragraph("Only the sum of indicators 1, 2, 5 and 6"))
summary_table <- eie %>%
filter(activity_status == "Completed") %>%
mutate(latest_reached = ifelse(month %in% report_month, total_reached, NA_integer_)) %>%
group_by(indicator_short) %>%
summarise(partners = n_distinct(implementing_partner),
counties = n_distinct(adm1_pcode),
latest_reached = sum(latest_reached, na.rm = TRUE),
total_reached = sum(total_reached, na.rm = TRUE)) %>%
adorn_totals("row",,,, latest_reached, total_reached) %>%
mutate(partners = ifelse(indicator_short == "Total", sum_stats$partners, partners),
counties = ifelse(indicator_short == "Total", sum_stats$counties, counties),
total_reached = ifelse(indicator_short == "Total",
sum_stats$reached_1256,
total_reached),
latest_reached = ifelse(indicator_short == "Total",
sum_stats$latest_reached,
latest_reached)) %>%
left_join(targets %>%
filter(target_unit == "people") %>%
group_by(indicator_short) %>%
summarise(target = sum(county_target)),
by = "indicator_short") %>%
mutate(target = ifelse(indicator_short == "Total",
targets %>% distinct(county, county_overall_target) %>% {sum(.$county_overall_target)},
target)) %>%
mutate(pc = round(total_reached / target * 100, digits = 2)) %>%
select(indicator = indicator_short, partners, counties,
latest_reached, total_reached, target, `%target` = pc) %>%
select_all(~ gsub("latest",
report_month, .)) %>%
select_all(~ str_to_title(.))
summary_table
summary_table %>%
filter(str_detect(Indicator, "1"))
summary_table %>%
filter(str_detect(Indicator, "1")) %>%
theme_zebra() %>%
set_caption(paste0("EiE Indicator ", parse_number(Indicator), ", as of ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1:6, j = 1, size = 9) %>%
fontsize(size = 9, part = "header")
summary_table %>%
filter(str_detect(Indicator, "1")) %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("EiE Indicator ", parse_number(Indicator), ", as of ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1:6, j = 1, size = 9) %>%
fontsize(size = 9, part = "header")
summary_table
summary_table %>%
filter(str_detect(Indicator, "1")) %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("EiE Indicator 1, as of ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1:6, j = 1, size = 9) %>%
fontsize(size = 9, part = "header")
summary_table %>%
filter(str_detect(Indicator, "1")) %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("EiE Indicator 1, as of ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
#fontsize(i = 1:6, j = 1, size = 9) %>%
fontsize(size = 9, part = "header")
summary_table %>%
filter(str_detect(Indicator, "1")) %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("EiE Indicator 1, as of ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1, j = 1, size = 9) %>%
fontsize(size = 9, part = "header")
summary_table %>%
filter(str_detect(Indicator, "5")) %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("EiE Indicator 5, as of ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1, j = 1, size = 9) %>%
fontsize(size = 9, part = "header")
summary_table %>%
filter(str_detect(Indicator, "6")) %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("EiE Indicator 6, as of ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1, j = 1, size = 9) %>%
fontsize(size = 9, part = "header")
eie %>% filter(month %in% report_month & str_detect(indicator_short, "1")) %>% {sum(.$total_reached, na.rm = TRUE)} %>% format(big.mark = ",")
eie %>% filter(month %in% report_month & str_detect(indicator_short, "1")) %>% {sum(.$total_reached, na.rm = TRUE)}
eie %>% filter(month %in% report_month & str_detect(indicator_short, "1") & activity_status == "Completed") %>% {sum(.$total_reached, na.rm = TRUE)}
