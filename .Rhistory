hjust = "inward") +
scale_fill_viridis_d(option = "cividis", end = .9, begin = .3) +
scale_x_continuous(labels = comma) +
labs(x = "Reached",
y = "",
fill = "Schools\nreported",
title = "Not all persons reached are associated with schools",
subtitle = "Only ")
eie %>%
filter(activity_status == "Completed") %>%
filter(!is.na(schools)) %>%
mutate(date = name_to_date(month)) %>%
filter(str_detect(indicator_short, "2|4")) %>%
group_by(indicator_short, date) %>%
summarise(schools = sum(schools),
reached = sum(total_reached)) %>%
arrange(date) %>%
mutate(cum_schools = cumsum(schools)) %>%
arrange(indicator_short) %>%
ggplot(aes(x = date, y = cum_schools),
vjust = -.5) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
geom_line(size = 1.7,
aes(colour = indicator_short)) +
geom_text(aes(label = comma(cum_schools)), vjust = -.5) +
scale_colour_manual(values = c("#31688e", "#d8576b")) +
theme(legend.position = "bottom") +
labs(x = "",
y = "Cumulative number of schools reached",
title = "Schools reached by feeding programmes and WASH in schools",
colour = "Indicator")
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(viridis)
library(patchwork)
library(DT)
library(here)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(anytime)
library(tidytext)
library(ggsflabel)
theme_set(theme_light())
# Installation of mdepriv package
# install package devtools if not yet installed
#   install.packages("devtools")
# install fast from GitHub without vignettes
#   devtools::install_github("a-benini/mdepriv", build_vignettes = FALSE
# Alternatively, follow the instructions here: https://a-benini.github.io/mdepriv/
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
# mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# Fixing dates
name_to_date <- function(x) {
lubridate::mdy(ifelse(x %in% c(month.name, month.abb), paste0(x, "/01/2023"), x))
}
eie %>%
filter(activity_status == "Completed") %>%
mutate(latest_reached = ifelse(month == "June", total_reached, NA_integer_)) %>%
group_by(indicator_short) %>%
summarise(partners = n_distinct(implementing_partner),
counties = n_distinct(adm1_pcode),
latest_reached = sum(latest_reached, na.rm = TRUE),
total_reached = sum(total_reached, na.rm = TRUE)) %>%
adorn_totals("row",,,, latest_reached, total_reached) %>%
mutate(partners = ifelse(indicator_short == "Total", sum_stats$partners, partners),
counties = ifelse(indicator_short == "Total", sum_stats$counties, counties),
total_reached = ifelse(indicator_short == "Total",
sum_stats$reached_1256,
total_reached),
latest_reached = ifelse(indicator_short == "Total",
sum_stats$latest_reached,
latest_reached)) %>%
left_join(targets %>%
filter(target_unit == "people") %>%
group_by(indicator_short) %>%
summarise(target = sum(county_target)),
by = "indicator_short") %>%
mutate(target = ifelse(indicator_short == "Total",
targets %>% distinct(county, county_overall_target) %>% {sum(.$county_overall_target)},
target)) %>%
mutate(pc = round(total_reached / target * 100, digits = 2)) %>%
select(indicator = indicator_short, partners, counties,
latest_reached, total_reached, target, `%target` = pc) %>%
select_all(~ gsub("latest",
report_month, .)) %>%
select_all(~ str_to_title(.)) %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("Summary statistics for EIE 5Ws reporting, ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1:6, j = 1, size = 9) %>%
fontsize(size = 9, part = "header") %>%
footnote(i = 1, j = 4, part = "header", ref_symbols = "1",
as_paragraph("Distinct number of schools not available as full list of schools is not reported")) %>%
footnote(i = 7, j = 5:6, ref_symbols = "2",
as_paragraph("Only the sum of indicators 1, 2, 5 and 6"))
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM2") %>%
clean_names()
eie <- read_csv("./data/eie_5ws.csv") %>%
filter(!is.na(indicator_short))
report_date <- "25 June 2023"
report_month <- "June"
sitrep_table <- read_xlsx("./data/sitrep_results_table.xlsx") %>%
clean_names()
targets <- read_csv("./data/eie_targets.csv")
pcode1_shape <-
sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp",
quiet = TRUE) %>%
clean_names()
ipc <- read_csv("./data/ipc.csv")
sum_stats <- eie %>%
summarise(partners = n_distinct(implementing_partner),
counties = n_distinct(county),
reached = sum(sector_reached, na.rm = TRUE),
men = sum(men[activity_status == "Completed"], na.rm = TRUE),
women = sum(women[activity_status == "Completed"], na.rm = TRUE),
boys = sum(boys[activity_status == "Completed"], na.rm = TRUE),
girls = sum(girls[activity_status == "Completed"], na.rm = TRUE),
reached_1256 = sum(total_reached[str_detect(indicator_short, "1|2|5|6") &
activity_status == "Completed"], na.rm = TRUE),
latest_reached = sum(total_reached[str_detect(indicator_short, "1|2|5|6") &
activity_status == "Completed"&
month %in% report_month],
na.rm = TRUE))
eie %>%
filter(activity_status == "Completed") %>%
mutate(latest_reached = ifelse(month %in% report_month, total_reached, NA_integer_)) %>%
group_by(indicator_short) %>%
summarise(partners = n_distinct(implementing_partner),
counties = n_distinct(adm1_pcode),
latest_reached = sum(latest_reached, na.rm = TRUE),
total_reached = sum(total_reached, na.rm = TRUE)) %>%
adorn_totals("row",,,, latest_reached, total_reached) %>%
mutate(partners = ifelse(indicator_short == "Total", sum_stats$partners, partners),
counties = ifelse(indicator_short == "Total", sum_stats$counties, counties),
total_reached = ifelse(indicator_short == "Total",
sum_stats$reached_1256,
total_reached),
latest_reached = ifelse(indicator_short == "Total",
sum_stats$latest_reached,
latest_reached)) %>%
left_join(targets %>%
filter(target_unit == "people") %>%
group_by(indicator_short) %>%
summarise(target = sum(county_target)),
by = "indicator_short") %>%
mutate(target = ifelse(indicator_short == "Total",
targets %>% distinct(county, county_overall_target) %>% {sum(.$county_overall_target)},
target)) %>%
mutate(pc = round(total_reached / target * 100, digits = 2)) %>%
select(indicator = indicator_short, partners, counties,
latest_reached, total_reached, target, `%target` = pc) %>%
select_all(~ gsub("latest",
report_month, .)) %>%
select_all(~ str_to_title(.)) %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("Summary statistics for EIE 5Ws reporting, ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1:6, j = 1, size = 9) %>%
fontsize(size = 9, part = "header") %>%
footnote(i = 1, j = 4, part = "header", ref_symbols = "1",
as_paragraph("Distinct number of schools not available as full list of schools is not reported")) %>%
footnote(i = 7, j = 5:6, ref_symbols = "2",
as_paragraph("Only the sum of indicators 1, 2, 5 and 6"))
summary_table <- eie %>%
filter(activity_status == "Completed") %>%
mutate(latest_reached = ifelse(month %in% report_month, total_reached, NA_integer_)) %>%
group_by(indicator_short) %>%
summarise(partners = n_distinct(implementing_partner),
counties = n_distinct(adm1_pcode),
latest_reached = sum(latest_reached, na.rm = TRUE),
total_reached = sum(total_reached, na.rm = TRUE)) %>%
adorn_totals("row",,,, latest_reached, total_reached) %>%
mutate(partners = ifelse(indicator_short == "Total", sum_stats$partners, partners),
counties = ifelse(indicator_short == "Total", sum_stats$counties, counties),
total_reached = ifelse(indicator_short == "Total",
sum_stats$reached_1256,
total_reached),
latest_reached = ifelse(indicator_short == "Total",
sum_stats$latest_reached,
latest_reached)) %>%
left_join(targets %>%
filter(target_unit == "people") %>%
group_by(indicator_short) %>%
summarise(target = sum(county_target)),
by = "indicator_short") %>%
mutate(target = ifelse(indicator_short == "Total",
targets %>% distinct(county, county_overall_target) %>% {sum(.$county_overall_target)},
target)) %>%
mutate(pc = round(total_reached / target * 100, digits = 2)) %>%
select(indicator = indicator_short, partners, counties,
latest_reached, total_reached, target, `%target` = pc) %>%
select_all(~ gsub("latest",
report_month, .)) %>%
select_all(~ str_to_title(.))
summary_table
summary_table %>%
filter(str_detect(Indicator, "1"))
summary_table %>%
filter(str_detect(Indicator, "1")) %>%
theme_zebra() %>%
set_caption(paste0("EiE Indicator ", parse_number(Indicator), ", as of ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1:6, j = 1, size = 9) %>%
fontsize(size = 9, part = "header")
summary_table %>%
filter(str_detect(Indicator, "1")) %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("EiE Indicator ", parse_number(Indicator), ", as of ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1:6, j = 1, size = 9) %>%
fontsize(size = 9, part = "header")
summary_table
summary_table %>%
filter(str_detect(Indicator, "1")) %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("EiE Indicator 1, as of ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1:6, j = 1, size = 9) %>%
fontsize(size = 9, part = "header")
summary_table %>%
filter(str_detect(Indicator, "1")) %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("EiE Indicator 1, as of ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
#fontsize(i = 1:6, j = 1, size = 9) %>%
fontsize(size = 9, part = "header")
summary_table %>%
filter(str_detect(Indicator, "1")) %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("EiE Indicator 1, as of ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1, j = 1, size = 9) %>%
fontsize(size = 9, part = "header")
summary_table %>%
filter(str_detect(Indicator, "5")) %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("EiE Indicator 5, as of ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1, j = 1, size = 9) %>%
fontsize(size = 9, part = "header")
summary_table %>%
filter(str_detect(Indicator, "6")) %>%
flextable() %>%
theme_zebra() %>%
set_caption(paste0("EiE Indicator 6, as of ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(i = 1, j = 1, size = 9) %>%
fontsize(size = 9, part = "header")
eie %>% filter(month %in% report_month & str_detect(indicator_short, "1")) %>% {sum(.$total_reached, na.rm = TRUE)} %>% format(big.mark = ",")
eie %>% filter(month %in% report_month & str_detect(indicator_short, "1")) %>% {sum(.$total_reached, na.rm = TRUE)}
eie %>% filter(month %in% report_month & str_detect(indicator_short, "1") & activity_status == "Completed") %>% {sum(.$total_reached, na.rm = TRUE)}
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(viridis)
library(patchwork)
library(DT)
library(here)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(anytime)
library(tidytext)
library(ggsflabel)
theme_set(theme_light())
# Installation of mdepriv package
# install package devtools if not yet installed
#   install.packages("devtools")
# install fast from GitHub without vignettes
#   devtools::install_github("a-benini/mdepriv", build_vignettes = FALSE
# Alternatively, follow the instructions here: https://a-benini.github.io/mdepriv/
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
# mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# Fixing dates
name_to_date <- function(x) {
lubridate::mdy(ifelse(x %in% c(month.name, month.abb), paste0(x, "/01/2023"), x))
}
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM2") %>%
clean_names()
eie <- read_csv("./data/eie_5ws.csv") %>%
filter(!is.na(indicator_short))
report_date <- "25 June 2023"
report_month <- "June"
sitrep_table <- read_xlsx("./data/sitrep_results_table.xlsx") %>%
clean_names()
targets <- read_csv("./data/eie_targets.csv")
pcode1_shape <-
sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp",
quiet = TRUE) %>%
clean_names()
ipc <- read_csv("./data/ipc.csv")
eie %>% filter(activity_status == "Ongoing")
eie %>% filter(activity_status == "Ongoing") %>%
count(start_date)
eie %>% filter(activity_status == "Ongoing") %>%
count(end_date)
eie %>% filter(activity_status == "Ongoing" & end_date == "2023-06-01")
eie %>% filter(activity_status == "Ongoing")
summary_table %>%
filter(str_detect(Indicator, "1")) %>%
flextable() %>%
set_caption(paste0("EiE Indicator 1, as of ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(size = 9, part = "header")
sum_stats <- eie %>%
summarise(partners = n_distinct(implementing_partner),
counties = n_distinct(county),
reached = sum(sector_reached, na.rm = TRUE),
men = sum(men[str_detect(indicator_short, "1|2|5|6") &
activity_status == "Completed"], na.rm = TRUE),
women = sum(women[str_detect(indicator_short, "1|2|5|6") &
activity_status == "Completed"], na.rm = TRUE),
boys = sum(boys[str_detect(indicator_short, "1|2|5|6") &
activity_status == "Completed"], na.rm = TRUE),
girls = sum(girls[str_detect(indicator_short, "1|2|5|6") &
activity_status == "Completed"], na.rm = TRUE),
reached_1256 = sum(total_reached[str_detect(indicator_short, "1|2|5|6") &
activity_status == "Completed"], na.rm = TRUE),
latest_reached = sum(total_reached[str_detect(indicator_short, "1|2|5|6") &
activity_status == "Completed"&
month %in% report_month],
na.rm = TRUE))
summary_table %>%
filter(str_detect(Indicator, "1")) %>%
flextable() %>%
set_caption(paste0("EiE Indicator 1, as of ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(size = 9, part = "header")
summary_table <- eie %>%
filter(activity_status == "Completed") %>%
mutate(latest_reached = ifelse(month %in% report_month, total_reached, NA_integer_)) %>%
group_by(indicator_short) %>%
summarise(partners = n_distinct(implementing_partner),
counties = n_distinct(adm1_pcode),
latest_reached = sum(latest_reached, na.rm = TRUE),
total_reached = sum(total_reached, na.rm = TRUE)) %>%
adorn_totals("row",,,, latest_reached, total_reached) %>%
mutate(partners = ifelse(indicator_short == "Total", sum_stats$partners, partners),
counties = ifelse(indicator_short == "Total", sum_stats$counties, counties),
total_reached = ifelse(indicator_short == "Total",
sum_stats$reached_1256,
total_reached),
latest_reached = ifelse(indicator_short == "Total",
sum_stats$latest_reached,
latest_reached)) %>%
left_join(targets %>%
filter(target_unit == "people") %>%
group_by(indicator_short) %>%
summarise(target = sum(county_target)),
by = "indicator_short") %>%
mutate(target = ifelse(indicator_short == "Total",
targets %>% distinct(county, county_overall_target) %>% {sum(.$county_overall_target)},
target)) %>%
mutate(pc = round(total_reached / target * 100, digits = 2)) %>%
select(indicator = indicator_short, partners, counties,
latest_reached, total_reached, target, `%target` = pc) %>%
select_all(~ gsub("latest",
report_month, .)) %>%
select_all(~ str_to_title(.))
summary_table %>%
filter(str_detect(Indicator, "1")) %>%
flextable() %>%
set_caption(paste0("EiE Indicator 1, as of ", report_date)) %>%
set_table_properties(layout = "autofit", width = .99) %>%
fontsize(size = 9, part = "header")
eie %>%
distinct(indicator) %>%
arrange(indicator) %>%
flextable() %>%
theme_zebra() %>%
set_table_properties(width = .8, layout = "autofit") %>%
fontsize(i = 1:6, j = 1, size = 9, part = "header")
eie %>%
distinct(indicator) %>%
arrange(indicator) %>%
flextable() %>%
theme_zebra() %>%
set_table_properties(width = .8, layout = "autofit") %>%
fontsize(i = 1:6, j = 1, size = 9)
eie %>%
distinct(indicator) %>%
arrange(indicator) %>%
flextable() %>%
theme_zebra() %>%
set_table_properties(width = .85, layout = "autofit") %>%
fontsize(i = 1:6, j = 1, size = 9)
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(viridis)
library(patchwork)
library(DT)
library(here)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(anytime)
library(tidytext)
library(ggsflabel)
theme_set(theme_light())
# Installation of mdepriv package
# install package devtools if not yet installed
#   install.packages("devtools")
# install fast from GitHub without vignettes
#   devtools::install_github("a-benini/mdepriv", build_vignettes = FALSE
# Alternatively, follow the instructions here: https://a-benini.github.io/mdepriv/
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
# mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# Fixing dates
name_to_date <- function(x) {
lubridate::mdy(ifelse(x %in% c(month.name, month.abb), paste0(x, "/01/2023"), x))
}
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM2") %>%
clean_names()
eie <- read_csv("./data/eie_5ws.csv") %>%
filter(!is.na(indicator_short))
report_date <- "25 June 2023"
report_month <- "June"
sitrep_table <- read_xlsx("./data/sitrep_results_table.xlsx") %>%
clean_names()
targets <- read_csv("./data/eie_targets.csv")
pcode1_shape <-
sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp",
quiet = TRUE) %>%
clean_names()
ipc <- read_csv("./data/ipc.csv")
eie %>%
glimpse()
