---
title: "Untitled"
output: html_document
date: '2023-06-27'
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(viridis)
library(patchwork)
library(DT)
library(here)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(anytime)
library(tidytext)

theme_set(theme_light())

# Installation of mdepriv package
# install package devtools if not yet installed
#   install.packages("devtools")

# install fast from GitHub without vignettes 
#   devtools::install_github("a-benini/mdepriv", build_vignettes = FALSE

# Alternatively, follow the instructions here: https://a-benini.github.io/mdepriv/

# disabling scientific notation
options(scipen = 100)

`%out%` <- Negate(`%in%`)

# function for transposing df
transpose_df <- function(df) {
  t_df <- data.table::transpose(df)
  colnames(t_df) <- rownames(df)
  rownames(t_df) <- colnames(df)
  t_df <- t_df %>%
    tibble::rownames_to_column(.data = .) %>%
    tibble::as_tibble(.)
  return(t_df)
}

# scaling functions 
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}

# mode function 
mode <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))]
}

# Fixing dates
name_to_date <- function(x) {
  lubridate::mdy(ifelse(x %in% c(month.name, month.abb), paste0(x, "/01/2023"), x))
}


```


# Data and names

```{r}
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx", 
                      sheet = "ADM2") %>% 
  clean_names()
```

## Messy names

```{r}

messy <- c(
  "month",
  "indicator1_all_total_children",
  "indicator1_all_boys",
  "indicator1_all_girls",
  "indicator1_host_community_total_children",
  "indicator1_host_community_boys",
  "indicator1_host_community_girls",
  "indicator1_idps_total_children",
  "indicator1_idps_boys",
  "indicator1_idps_girls",
  "indicator1_refugees_total_children",
  "indicator1_refugees_boys",
  "indicator1_refugees_girls",
  "indicator1_cwd_total_children",
  "indicator1_cwd_boys",
  "indicator1_cwd_girls",
  "indicator1_narrative",
  "x1",
  "indicator2_all_total_children",
  "indicator2_all_boys",
  "indicator2_all_girls",
  "indicator2_host_community_total_children",
  "indicator2_host_community_boys",
  "indicator2_host_community_girls",
  "indicator2_idps_total_children",
  "indicator2_idps_boys",
  "indicator2_idps_girls",
  "indicator2_refugees_total_children",
  "indicator2_refugees_boys",
  "indicator2_refugees_girls",
  "indicator2_cwd_total_children",
  "indicator2_cwd_boys",
  "indicator2_cwd_girls",
  "indicator2_new_latrines",
  "indicator2_rehabiltated_latrines",
  "indicator2_new_classrooms",
  "indicator2_rehabilitated_classrooms",
  "indicator2_narrative",
  "x2",
  "indicator3_all_total_children",
  "indicator3_all_boys",
  "indicator3_all_girls",
  "indicator3_host_community_total_children",
  "indicator3_host_community_boys",
  "indicator3_host_community_girls",
  "indicator3_idps_total_children",
  "indicator3_idps_boys",
  "indicator3_idps_girls",
  "indicator3_refugees_total_children",
  "indicator3_refugees_boys",
  "indicator3_refugees_girls",
  "indicator3_cwd_total_children",
  "indicator3_cwd_boys",
  "indicator3_cwd_girls",
  "indicator3_narrative",
  "x3",
  "indicator4_all_total_adults",
  "indicator4_all_male",
  "indicator4_all_female",
  "indicator4_host_community_total_adults",
  "indicator4_host_community_male",
  "indicator4_host_community_female",
  "indicator4_idps_total_adults",
  "indicator4_idps_male",
  "indicator4_idps_female",
  "indicator4_refugees_total_adults",
  "indicator4_refugees_male",
  "indicator4_refugees_female",
  "indicator4_narrative",
  "x4",
  "indicator5_all_total_adults",
  "indicator5_all_male",
  "indicator5_all_female",
  "indicator5_host_community_total_adults",
  "indicator5_host_community_male",
  "indicator5_host_community_female",
  "indicator5_idps_total_adults",
  "indicator5_idps_male",
  "indicator5_idps_female",
  "indicator5_refugees_total_adults",
  "indicator5_refugees_male",
  "indicator5_refugees_female",
  "indicator5_narrative",
  "x5",
  "indicator6_all_total_adults",
  "indicator6_all_male",
  "indicator6_all_female",
  "indicator6_narrative",
  "x6",
  "indicator7_all_total_children",
  "indicator7_all_boys",
  "indicator7_all_girls",
  "indicator7_host_community_total_children",
  "indicator7_host_community_boys",
  "indicator7_host_community_girls",
  "indicator7_idps_total_children",
  "indicator7_idps_boys",
  "indicator7_idps_girls",
  "indicator7_refugees_total_children",
  "indicator7_refugees_boys",
  "indicator7_refugees_girls",
  "indicator7_cwd_total_children",
  "indicator7_cwd_boys",
  "indicator7_cwd_girls",
  "indicator7_narrative"
)


```



# Read messy table

```{r}
  
  
clean_messy_table <- function(tbl) {
  tbl %>% 
    setNames(messy) %>% 
    slice(10:284) %>% 
    mutate(county = ifelse(str_detect(month, "\\."), 
                           month, 
                           NA_character_), 
           county = gsub("[[:punct:]]|[[:digit:]]", "", county), 
           county = case_when(
             str_detect(county, "Garissa") ~ "Garissa", 
             str_detect(county, "Turkana") ~ "Turkana",
             str_detect(county, "Homa") ~ "Homa Bay", 
             TRUE ~ county)) %>% 
     fill(county) %>% 
     mutate(month = stri_extract_last_words(month)) %>% 
     # Keeping these empty columns to align with the original format
     select(-contains("x")) %>%
     pivot_longer(cols = indicator1_all_total_children:indicator7_narrative, 
                 names_to = "indicator", 
                 values_to = "value") %>% 
     mutate(month = fct_relevel(month, c("January", "February", "March", 
                                           "April", "May", "June", "July")), 
     char_value = as.character(value), 
     value = as.numeric(value)) 
     #naniar::replace_with_na(replace = list(value = 0)) %>% 
     #filter(!is.na(value)) 
}
  

```

# Alternate version because the template is slightly altered 

```{r}

clean_messy_table_alt <- function(tbl) {
  tbl %>% 
    setNames(messy) %>% 
    slice(10:248) %>% 
    mutate(county = word(month, 1)) %>%
    naniar::replace_with_na(list(county = "July", 
                                 county = "NA", 
                                 month = "NA")) %>% 
    fill(county) %>% 
    mutate(county = case_when(str_detect(county, "West") ~ "West Pokot", 
                              str_detect(county, "Homa") ~ "Homa Bay", 
                              str_detect(county, "Taita") ~ "Taita Taveta",
                              str_detect(county, "Tana") ~ "Tana River", 
                              str_detect(county, "Tharaka") ~ "Tharaka Nithi", 
                              TRUE ~ county)) %>% 
    mutate(month = stri_extract_last_words(month)) %>%
    filter(!is.na(month)) %>% 
    select(-contains("x")) %>%
       pivot_longer(cols = indicator1_all_total_children:indicator7_narrative, 
                   names_to = "indicator", 
                   values_to = "value") %>%
    mutate(month = fct_relevel(month, c("January", "February", "March", 
                                             "April", "May", "June", "July")),
           char_value = as.character(value),
           value = as.numeric(value))
}
  
```


# Combined

```{r}


combined <- read_excel("./data/unicef_internal/Copy of Monthly Education SitRep_Jul23_lzo.xlsx") %>% 
  clean_messy_table_alt() %>% 
  rename(lzo_value = value, 
         lzo_char_value = char_value) %>% 
  left_join(read_excel("./data/unicef_internal/Kajiado Kwale Kilifi Monthly Education SitRep_Jul23.xlsx") %>% 
              clean_messy_table_alt() %>% 
              rename(kzo_value = value, 
                     kzo_char_value = char_value), 
            by = c("month", "county", "indicator")) %>% 
  left_join(read_excel("./data/unicef_internal/Copy of Monthly Education SitRep_July 2023 GZO input.xlsx") %>% 
              clean_messy_table_alt() %>% 
              rename(gzo_value = value, 
                     gzo_char_value = char_value), 
            by = c("month", "county", "indicator")) %>% 
  mutate(value = case_when(!is.na(lzo_value) & !is.na(kzo_value) & !is.na(gzo_value) ~ 
                             pmax(lzo_value, kzo_value, gzo_value),
                           !is.na(lzo_value) & !is.na(kzo_value) ~ 
                             pmax(lzo_value, kzo_value), 
                           !is.na(lzo_value) & !is.na(gzo_value) ~ 
                             pmax(lzo_value, gzo_value),
                           !is.na(kzo_value) & !is.na(gzo_value) ~ 
                             pmax(kzo_value, gzo_value),
                           is.na(lzo_value) & is.na(kzo_value) ~ gzo_value, 
                           is.na(gzo_value) & is.na(kzo_value) ~ lzo_value, 
                           is.na(gzo_value) & is.na(lzo_value) ~ kzo_value, 
                           TRUE ~ NA_integer_)) %>% 
   mutate(char_value = case_when(!is.na(lzo_char_value) ~ lzo_char_value, 
                            !is.na(gzo_char_value) ~ gzo_char_value, 
                            !is.na(kzo_char_value) ~ kzo_char_value, 
                            TRUE ~ NA_character_)) %>% 
  rename(sub_indicator = indicator) %>% 
  mutate(sex_modifier = case_when(str_detect(sub_indicator, "narrative") ~ NA_character_,
                                  str_detect(sub_indicator, "girls|women|Women|Girls|Female|female") ~ "female", 
                                  str_detect(sub_indicator, "boys|Boys|men|Men|Male|male") ~ "male", 
                                  str_detect(sub_indicator, "total") ~ "total", 
                                  TRUE ~ NA_character_), 
         beneficiary_group = case_when(str_detect(sub_indicator, "narrative") ~ NA_character_,
                                       str_detect(sub_indicator, "host_community") ~ "host_community", 
                                       str_detect(sub_indicator, "idps") ~ "idps", 
                                       str_detect(sub_indicator, "refugees") ~ "refugees",
                                       str_detect(sub_indicator, "all") ~ "all",
                                       str_detect(sub_indicator, "cwd") ~ "cwd",
                                       TRUE ~ NA_character_), 
         age_modifier = case_when(str_detect(sub_indicator, "narrative") ~ NA_character_,
                                  str_detect(sub_indicator, "boys|girls|children") ~ "children", 
                                  str_detect(sub_indicator, "Male|male|Female|female|adults") ~ "adults", 
                                  str_detect(sub_indicator, "all") & str_detect(sub_indicator, "1|3|7|2") ~ "children", 
                                  str_detect(sub_indicator, "all") & str_detect(sub_indicator, "5|6|4") ~ "adults",
                                  TRUE ~ NA_character_)) %>% 
  mutate(age_modifier = case_when(str_detect(sub_indicator, "1|3|7") & is.na(age_modifier) & 
                                    !str_detect(sub_indicator, "narrative") ~ "children", 
                                str_detect(sub_indicator, "4|5|6") & is.na(age_modifier) & 
                                  !str_detect(sub_indicator, "narrative") ~ "adults",
                                str_detect(sub_indicator, "2") & !is.na(sex_modifier) ~ "children", 
                                TRUE ~ age_modifier)) %>% 
  mutate(unicef_indicator_number = as.factor(parse_number(sub_indicator)), 
         unicef_indicator = case_when(str_detect(sub_indicator, "1") ~ 
                                       "1. OOSC accessing formal education", 
                                     str_detect(sub_indicator, "2") ~ 
                                       "2. Children benefiting from child-friendly environment", 
                                     str_detect(sub_indicator, "3") ~ 
                                       "3. Children who receive assistance to continue learning", 
                                     str_detect(sub_indicator, "4") ~ 
                                       "4. Teachers trained resilience programmes", 
                                     str_detect(sub_indicator, "5") ~ 
                                       "5. BoM trained resilience programmes", 
                                     str_detect(sub_indicator, "6") ~ 
                                       "6. Govt. officials trained", 
                                     str_detect(sub_indicator, "7") ~ 
                                       "7. Children life skills mentorship")) %>% 
  select(-kzo_value, -lzo_value, -gzo_value, 
         -kzo_char_value, -lzo_char_value, -gzo_char_value) 

combined %>% write_csv(paste0("./data/combined_sitrep_", format(Sys.Date(), "%Y%m%d"), ".csv"))



```



## Checks 

```{r}
check <- combined %>% 
  mutate(sub_indicator_alt = str_sub(sub_indicator, start = 1L, end = 15L)) %>%
  mutate(sub_indicator_alt = str_replace_all(sub_indicator_alt, "all_", "all"),
         sub_indicator_alt = str_replace_all(sub_indicator_alt, "cwd_", "cwd"),
         sub_indicator_alt = str_replace_all(sub_indicator_alt, "host", "host_community"),
         sub_indicator_alt = str_replace_all(sub_indicator_alt, "refu", "refugees"),
         sub_indicator_alt = str_replace_all(sub_indicator_alt, "narr", "narrative"), 
         sub_indicator_alt = ifelse(sub_indicator %in% c("new_classrooms",
                                                         "indicator2_new_latrines", 
                                                         "indicator2_rehabilitated_classrooms", 
                                                         "indicator2_rehabiltated_latrines"), 
                                    sub_indicator, sub_indicator_alt)) %>%
  group_by(month, county, sub_indicator_alt, sex_modifier) %>% 
  summarise(value = sum(value, na.rm = TRUE)) %>% 
  pivot_wider(names_from = sex_modifier, values_from = value) %>% 
  select(-`NA`) %>% 
  mutate(total = ifelse(female + male > total, female + male, total)) %>% 
  pivot_longer(cols = c(female, male, total),
               names_to = "sex_modifier", 
               values_to = "check_value") %>% 
  mutate(key = paste0(month, county, sub_indicator_alt, sex_modifier)) %>% 
  ungroup()
  
# Write over the old dataset 

combined <- combined %>% 
  mutate(sub_indicator_alt = str_sub(sub_indicator, start = 1L, end = 15L)) %>%
  mutate(sub_indicator_alt = str_replace_all(sub_indicator_alt, "all_", "all"),
         sub_indicator_alt = str_replace_all(sub_indicator_alt, "cwd_", "cwd"),
         sub_indicator_alt = str_replace_all(sub_indicator_alt, "host", "host_community"),
         sub_indicator_alt = str_replace_all(sub_indicator_alt, "refu", "refugees"),
         sub_indicator_alt = str_replace_all(sub_indicator_alt, "narr", "narrative"), 
         sub_indicator_alt = ifelse(sub_indicator %in% c("new_classrooms",
                                                         "indicator2_new_latrines", 
                                                         "indicator2_rehabilitated_classrooms", 
                                                         "indicator2_rehabiltated_latrines"), 
                                    sub_indicator, sub_indicator_alt)) %>%
  mutate(key = paste0(month, county, sub_indicator_alt, sex_modifier)) %>% 
  left_join(check %>% select(key, check_value), 
            by = "key") %>% 
  mutate(value = case_when(str_detect(sub_indicator, "narrative") ~ value, 
                           value != check_value ~ check_value, 
                           TRUE ~ value)) %>% 
  select(-key, -sub_indicator_alt, -key)
```

# Output 

```{r}
# Only if you don't want to run the whole thing again, though use the correct file name
# combined <- read_csv("./data/combined.csv")
```




## Selector 

```{r}
column_selector <- function(tbl){
  tbl %>% 
    mutate(x1 = "", x2 = "", x3 = "", x4 = "", x5 = "", x6 = "", 
         county_month = paste0(county, " ", month)) %>%
    mutate(county_month = ifelse(str_detect(county_month, "NA"), NA_character_, county_month)) %>%
    select("county", "month", "county_month", 
           "indicator1_all_total_children", 
           "indicator1_all_boys", 
           "indicator1_all_girls",
           "indicator1_host_community_total_children", 
           "indicator1_host_community_boys", 
           "indicator1_host_community_girls",
           "indicator1_idps_total_children", 
           "indicator1_idps_boys", 
           "indicator1_idps_girls", 
           "indicator1_refugees_total_children", 
           "indicator1_refugees_boys", 
           "indicator1_refugees_girls", 
           "indicator1_cwd_total_children", 
           "indicator1_cwd_boys", 
           "indicator1_cwd_girls", 
           "indicator1_narrative",
           "x1", 
           "indicator2_all_total_children", 
           "indicator2_all_boys", 
           "indicator2_all_girls",
           "indicator2_host_community_total_children", 
           "indicator2_host_community_boys", 
           "indicator2_host_community_girls",
           "indicator2_idps_total_children", 
           "indicator2_idps_boys", 
           "indicator2_idps_girls", 
           "indicator2_refugees_total_children", 
           "indicator2_refugees_boys", 
           "indicator2_refugees_girls", 
           "indicator2_cwd_total_children", 
           "indicator2_cwd_boys", 
           "indicator2_cwd_girls", 
           "indicator2_new_latrines", 
           "indicator2_rehabiltated_latrines", 
           "indicator2_new_classrooms", 
           "indicator2_rehabilitated_classrooms",
           "indicator2_narrative",
           "x2", 
           "indicator3_all_total_children", 
           "indicator3_all_boys", 
           "indicator3_all_girls",
           "indicator3_host_community_total_children", 
           "indicator3_host_community_boys", 
           "indicator3_host_community_girls",
           "indicator3_idps_total_children", 
           "indicator3_idps_boys", 
           "indicator3_idps_girls", 
           "indicator3_refugees_total_children", 
           "indicator3_refugees_boys", 
           "indicator3_refugees_girls", 
           "indicator3_cwd_total_children", 
           "indicator3_cwd_boys", 
           "indicator3_cwd_girls", 
           "indicator3_narrative",
           "x3", 
           "indicator4_all_total_adults", 
           "indicator4_all_male", 
           "indicator4_all_female",
           "indicator4_host_community_total_adults", 
           "indicator4_host_community_male", 
           "indicator4_host_community_female",
           "indicator4_idps_total_adults", 
           "indicator4_idps_male", 
           "indicator4_idps_female", 
           "indicator4_refugees_total_adults", 
           "indicator4_refugees_male", 
           "indicator4_refugees_female", 
           "indicator4_narrative",
           "x4",
           "indicator5_all_total_adults", 
           "indicator5_all_male", 
           "indicator5_all_female",
           "indicator5_host_community_total_adults", 
           "indicator5_host_community_male", 
           "indicator5_host_community_female",
           "indicator5_idps_total_adults", 
           "indicator5_idps_male", 
           "indicator5_idps_female", 
           "indicator5_refugees_total_adults", 
           "indicator5_refugees_male", 
           "indicator5_refugees_female", 
           "indicator5_narrative",
           "x5", 
           "indicator6_all_total_adults", 
           "indicator6_all_male", 
           "indicator6_all_female", 
           "indicator6_narrative", 
           "x6", 
           "indicator7_all_total_children", 
           "indicator7_all_boys", 
           "indicator7_all_girls",
           "indicator7_host_community_total_children", 
           "indicator7_host_community_boys", 
           "indicator7_host_community_girls",
           "indicator7_idps_total_children", 
           "indicator7_idps_boys", 
           "indicator7_idps_girls", 
           "indicator7_refugees_total_children", 
           "indicator7_refugees_boys", 
           "indicator7_refugees_girls", 
           "indicator7_cwd_total_children", 
           "indicator7_cwd_boys", 
           "indicator7_cwd_girls", 
           "indicator7_narrative")
}
```


## To messy table

```{r}
bottom <- crossing(combined %>% distinct(county),
                   combined %>% distinct(month),
                   messy) %>% 
  rename(sub_indicator = messy) %>% 
  mutate(key = paste0(county, month, sub_indicator)) %>% 
  left_join(combined %>% 
              mutate(key = paste0(county, month, sub_indicator)) %>% 
              select(key, value, char_value),
            by = "key") %>% 
  filter(!str_detect(sub_indicator, "x|month")) %>% 
  mutate(char_value = ifelse(str_detect(sub_indicator, "narrative"), 
                char_value, NA_character_)) %>%
  replace_na(list(value = 0)) %>% 
  mutate(value = ifelse(str_detect(sub_indicator, "narrative"), 
                char_value, value)) %>% 
  select(-key, -char_value) %>% 
  pivot_wider(names_from = sub_indicator, 
              values_from = value) %>% 
  mutate_at(vars(!matches("narrative|county|month")), 
            ~ as.numeric(.)) %>% 
  mutate(month = fct_relevel(month, c("Total", "January", "February", "March",
                                      "April", "May", "June", "July")), 
         county = fct_relevel(county, c(combined %>% distinct(county) %>% pull(county)))) %>% 
  arrange(county, month) %>% 
  column_selector() %>% 
  select(-county, -month)

bottom %>% write_csv(paste0("./data/bottom_table_", format(Sys.Date(), "%Y%m%d"), ".csv"))




  

```




```{r}
top <- crossing(combined %>% distinct(county),
                   combined %>% distinct(month),
                   messy) %>% 
  rename(sub_indicator = messy) %>% 
  mutate(key = paste0(county, month, sub_indicator)) %>% 
  left_join(combined %>% 
              mutate(key = paste0(county, month, sub_indicator)) %>% 
              select(key, value, char_value),
            by = "key") %>% 
  filter(!str_detect(sub_indicator, "x|month")) %>% 
  mutate(char_value = ifelse(str_detect(sub_indicator, "narrative"), 
                char_value, NA_character_)) %>%
  replace_na(list(value = 0)) %>% 
  mutate(value = ifelse(str_detect(sub_indicator, "narrative"), 
                char_value, value)) %>% 
  select(-key, -char_value) %>% 
  pivot_wider(names_from = sub_indicator, 
              values_from = value) %>% 
  mutate_at(vars(!matches("narrative|county|month")), 
            ~ as.numeric(.)) %>% 
  group_by(month) %>% 
  summarise_at(vars(!matches("narrative|county|month")), ~ sum(., na.rm = TRUE)) %>% 
  mutate(indicator1_narrative = "", 
         indicator2_narrative = "", 
         indicator3_narrative = "", 
         indicator4_narrative = "", 
         indicator5_narrative = "", 
         indicator6_narrative = "", 
         indicator7_narrative = "", 
         county = "Total") %>% 
  column_selector() %>% 
  select(-county, -month) %>% 
  filter(county_month != "Total Total")


top %>% write_csv(paste0("./data/top_table_", format(Sys.Date(), "%Y%m%d"), ".csv"))
```

# Alternative formats

```{r}
crossing(combined %>% distinct(county),
         full_months,
         messy) %>% 
  rename(sub_indicator = messy,
         month = full_months) %>% 
  mutate(key = paste0(county, month, sub_indicator)) %>% 
  left_join(combined %>% 
              mutate(key = paste0(county, month, sub_indicator)) %>% 
              select(key, value, char_value),
            by = "key") %>% 
  filter(!str_detect(sub_indicator, "x|month")) %>% 
  replace_na(list(value = 0)) %>% 
  mutate(value = ifelse(str_detect(sub_indicator, "narrative"), 
                char_value, value)) %>% 
  select(-key, -char_value) %>% 
  pivot_wider(names_from = sub_indicator, 
              values_from = value) %>% 
  mutate_at(vars(!matches("narrative|county|month")), 
            ~ as.numeric(.)) %>% 
  mutate(indicator1_narrative = "", 
         indicator2_narrative = "", 
         indicator3_narrative = "", 
         indicator4_narrative = "", 
         indicator5_narrative = "", 
         indicator6_narrative = "", 
         indicator7_narrative = "") %>% 
  column_selector() %>% 
  select(!matches("x"), -county_month) %>% 
  mutate(month = fct_relevel(month, full_months)) %>% 
  arrange(county, month)
```

## Wide

```{r}

full_months <- c("January", "February", "March",
                     "April", "May", "June", 
                     "July", "August", "September", 
                     "October", "November", "December")

data_entry_wide <- crossing(combined %>% distinct(county),
         full_months,
         messy) %>% 
  rename(sub_indicator = messy,
         month = full_months) %>% 
  mutate(key = paste0(county, month, sub_indicator)) %>% 
  left_join(combined %>% 
              mutate(key = paste0(county, month, sub_indicator)) %>% 
              select(key, value, char_value),
            by = "key") %>% 
  filter(!str_detect(sub_indicator, "x|month")) %>% 
  replace_na(list(value = 0)) %>% 
  mutate(value = ifelse(str_detect(sub_indicator, "narrative"), 
                char_value, value)) %>% 
  select(-key, -char_value) %>% 
  pivot_wider(names_from = sub_indicator, 
              values_from = value) %>% 
  mutate_at(vars(!matches("narrative|county|month")), 
            ~ as.numeric(.)) %>% 
  mutate(indicator1_narrative = "", 
         indicator2_narrative = "", 
         indicator3_narrative = "", 
         indicator4_narrative = "", 
         indicator5_narrative = "", 
         indicator6_narrative = "", 
         indicator7_narrative = "") %>% 
  column_selector() %>% 
  select(!matches("x"), -county_month) %>% 
  mutate(month = fct_relevel(month, full_months)) %>% 
  arrange(county, month)

data_entry_wide %>% 
  write_csv("./data/data_entry_wide.csv")
  

```

## Long

```{r}
full_months <- c("January", "February", "March",
                     "April", "May", "June", 
                     "July", "August", "September", 
                     "October", "November", "December")

data_entry_long <- crossing(combined %>% distinct(county),
         full_months,
         messy) %>% 
  rename(sub_indicator = messy,
         month = full_months) %>%
  mutate(sub_indicator_alt = str_sub(sub_indicator, start = 1L, end = 15L)) %>%
  mutate(sub_indicator_alt = str_replace_all(sub_indicator_alt, "all_", "all"),
         sub_indicator_alt = str_replace_all(sub_indicator_alt, "cwd_", "cwd"),
         sub_indicator_alt = str_replace_all(sub_indicator_alt, "host", "host_community"),
         sub_indicator_alt = str_replace_all(sub_indicator_alt, "refu", "refugees"),
         sub_indicator_alt = str_replace_all(sub_indicator_alt, "narr", "narrative"), 
         sub_indicator_alt = ifelse(sub_indicator %in% c("new_classrooms",
                                                         "indicator2_new_latrines", 
                                                         "indicator2_rehabilitated_classrooms", 
                                                         "indicator2_rehabiltated_latrines"), 
                                    sub_indicator, sub_indicator_alt)) %>% 
  select(-sub_indicator) %>% 
  filter(!str_detect(sub_indicator_alt, "x|month")) %>% 
  distinct(county, month, sub_indicator_alt) %>%  
  left_join(
    combined %>%
      select(month, county, sub_indicator, value, sex_modifier) %>% 
      filter(!is.na(value)) %>% 
      pivot_wider(names_from = sex_modifier, 
                  values_from = value) %>% 
      mutate(sub_indicator_alt = str_sub(sub_indicator, start = 1L, end = 15L)) %>%
      rename(facility = `NA`) %>% 
      mutate(sub_indicator_alt = str_replace_all(sub_indicator_alt, "all_", "all"),
         sub_indicator_alt = str_replace_all(sub_indicator_alt, "cwd_", "cwd"),
         sub_indicator_alt = str_replace_all(sub_indicator_alt, "host", "host_community"),
         sub_indicator_alt = str_replace_all(sub_indicator_alt, "refu", "refugees"),
         sub_indicator_alt = str_replace_all(sub_indicator_alt, "narr", "narrative"), 
         sub_indicator_alt = ifelse(sub_indicator %in% c("new_classrooms",
                                                         "indicator2_new_latrines", 
                                                         "indicator2_rehabilitated_classrooms", 
                                                         "indicator2_rehabiltated_latrines"), 
                                    sub_indicator, sub_indicator_alt)) %>%
      group_by(month, county, sub_indicator_alt) %>% 
      summarise(male = sum(male, na.rm = TRUE), 
                female = sum(female, na.rm = TRUE), 
                total = sum(total, na.rm = TRUE), 
                facility = sum(facility, na.rm = TRUE)) %>% 
      mutate(total = ifelse(total == 0 & male > 0 | female > 0, male + female, total)),
    by = c("county" = "county", "month" = "month", "sub_indicator_alt" = "sub_indicator_alt")
  ) %>% 
  mutate(month = fct_relevel(month, full_months)) %>%
  arrange(county, month) %>% 
  replace_na(list(male = 0, 
                  female = 0, 
                  total = 0,
                  facility = 0)) %>% 
  filter(!str_detect(sub_indicator_alt, "narrative")) %>% 
  mutate(comments = "")

data_entry_long %>% 
  write_xlsx("./data/data_entry_long.xlsx")
```





```{r}
combined %>% 
  select(month, county, sub_indicator, value) %>% 
  pivot_wider(names_from = sub_indicator, 
              values_from = value) %>% 
  write_csv("./data/flat_table.csv")


combined %>% 
  group_by(unicef_indicator, sub_indicator) %>% 
  summarise(value = sum(value, na.rm = TRUE)) %>% 
  write_csv("./data/summary_by_sub_indicator.csv")

combined %>% 
  filter(beneficiary_group == "all", 
         sex_modifier == "total", 
         age_modifier == "total") %>% 
  group_by(unicef_indicator) %>% 
  arrange(unicef_indicator) %>% 
  summarise(value = sum(value, na.rm = TRUE)) %>% 
  pivot_wider(names_from = "unicef_indicator", 
              values_from = "value")  
  write_csv("./data/summary_by_county.csv")

combined %>% 
  select(result_statement, indicator, sub_indicator)

```

# Plots 

```{r}
combined %>% 
  filter(str_detect(unicef_indicator, "1") & 
           beneficiary_group == "all" & 
           age_modifier == "children") %>% 
  group_by(county, sex_modifier) %>% 
  summarise(value = sum(value, na.rm = TRUE)) %>% 
  group_by(county) %>% 
  mutate(county_total = sum(value), 
         pc = value / county_total) %>% 
  ungroup() %>% 
  mutate(county = fct_reorder(county, county_total)) %>% 
  arrange(county) %>% 
  ggplot(aes(x = value, y = county, fill = sex_modifier)) + 
  geom_col(position = position_dodge(width = .9)) +
  scale_fill_manual(values = c("#443983", "#35b779")) +
  geom_text(aes(x = value, 
                y = county, 
                label = percent(pc, accuracy = 1)),
            position = position_dodge(width = .8), 
            hjust = "inward") + 
  labs(x = "Number of children", 
       y = "", 
       title = "Sex ratio of OOSC accessing formal/informal education") + 
  scale_x_continuous(labels = comma) 

ggsave("./img/oosc_example_plot.png", 
       height = 8, width = 11, units = "in")
  


```

```{r}
combined %>% 
  filter(str_detect(sub_indicator, "all_total|cwd") & !str_detect(sub_indicator, "boys|girls")) %>% 
  replace_na(list(value = 0)) %>% 
  mutate(indicator = str_sub(sub_indicator, 1L, 10L)) %>% 
  group_by(indicator, beneficiary_group) %>% 
  summarise(value = sum(value)) %>% 
  pivot_wider(names_from = beneficiary_group, 
              values_from = value, 
              values_fill = 0) %>% 
  mutate(pc = cwd / all * 100)
  ggplot(aes(x = value, y = indicator)) + 
  geom_col(aes(fill = beneficiary_group),
           position = position_dodge(width = .9))
  group_by() %>% 
  summarise()
```

```{r}
combined %>% 
  filter(!str_detect(unicef_indicator, "6")) %>% 
  group_by(unicef_indicator_number, beneficiary_group) %>% 
  summarise(value = sum(value, na.rm = TRUE)) %>% 
  filter(beneficiary_group %out% c("all", "cwd") & !is.na(beneficiary_group)) %>% 
  mutate(unicef_indicator_number = as.factor(unicef_indicator_number), 
         unicef_indicator_number = fct_rev(unicef_indicator_number)) %>% 
  ggplot(aes(x = value, y = unicef_indicator_number)) + 
  geom_col(aes(fill = beneficiary_group), 
           position = position_stack()) + 
  scale_fill_viridis_d(begin = .2)
  glimpse()
```


