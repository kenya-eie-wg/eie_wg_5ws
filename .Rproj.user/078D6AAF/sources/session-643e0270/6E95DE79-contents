---
title: "Untitled"
output: html_document
date: '2023-06-23'
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(magrittr)
library(viridis)
library(here)
library(sf)
library(googlesheets4)
library(flextable)
library(writexl)
library(naniar)
library(anytime)
library(widyr)
library(tidytext)

theme_set(theme_light())

# Disabling scientific notation
options(scipen = 100)

# This should just be a standard R function
`%out%` <- Negate(`%in%`)

# Function for transposing df
transpose_df <- function(df) {
  t_df <- data.table::transpose(df)
  colnames(t_df) <- rownames(df)
  rownames(t_df) <- colnames(df)
  t_df <- t_df %>%
    tibble::rownames_to_column(.data = .) %>%
    tibble::as_tibble(.)
  return(t_df)
}

# Scaling functions 
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}

# Mode function 
mode <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))]
}



```


#  Data

## Locations

```{r}
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx", 
                      sheet = "ADM2") %>% 
  clean_names()
```

## Path to 4Ws

```{r}

# This is the folder where the 4Ws from the current round are stored

path_5ws <- "C:/Users/seanywng/Documents/R/eie_wg_5ws/data/5Ws_2023"


```

# 5Ws

## Column names

```{r}
names_5ws <- c(
  "month", 
  "lead_organisation", 
  "organisation_type", 
  "donor",
  "sector", 
  "education_level", 
  "indicator", 
  "activity", 
  "implementing_partner", 
  "county", 
  "sub_county", 
  "names_numbers_schools", 
  "start_date", 
  "end_date", 
  "activity_status", 
  "boys", 
  "girls", 
  "men", 
  "women", 
  "beneficiary_type", 
  "total_reached", 
  "comments"
)
```

# Read_5Ws() 


```{r}


read_5ws <- function(file) {
  
  read_excel(file, 
             sheet = "5W_Data_Entry", 
             skip = 2, 
             col_types = c(
               "text", "text", "text", "text", "text", "text", 
               "text", "text", "text", "text", "text", "text", 
               "date", "date", 
               "text", 
               "numeric", "numeric", "numeric", "numeric", 
               "text", "numeric", "text"
             )) %>% 
    setNames(names_5ws) %>% 
    mutate(source = file_list[i]) %>%
    # Doing this here, but you can always move this to the end
    # But this is the assumption that these lists are correct
    mutate( 
      names_numbers_schools = case_when(
        names_numbers_schools == "All the Juniour Secondary Schools (JSS) in Kalobeyei Settlement" ~
        "Kalobeyei Settlement, Friends, Joy, Morningstar, Future and Bright Junior Secondary Secondary schools.",
        names_numbers_schools == "All the main Secondary Schools in Kalobeyei Settlement" ~ 
        "Kalobeyei Settlement, Friends, Joy, Morningstar, Future and Bright Junior Secondary Secondary schools.", 
        TRUE ~ names_numbers_schools)) %>% 
    mutate(
      schools = case_when(
      activity == "Provision of school meals to learners in the 8 primary schools and 7 pre-primary schools in Kalobeyei Settlement." ~ 15,
      names_numbers_schools == "22 refugee schools and 11 host community schools" ~ 33,
      str_detect(names_numbers_schools, "\n") ~ str_count(names_numbers_schools, "\n") + 1,
      str_detect(names_numbers_schools, "\\,") ~ str_count(names_numbers_schools, "\\,|and|&") + 1, 
      str_detect(names_numbers_schools, "and") ~ str_count(names_numbers_schools, "and") + 1,
      str_detect(names_numbers_schools, "\\;") ~ str_count(names_numbers_schools, "\\;") + 1, 
      !is.na(names_numbers_schools) ~ parse_number(names_numbers_schools), 
      TRUE ~ NA_integer_), 
      schools = ifelse(!is.na(names_numbers_schools) & is.na(schools), 1, schools)
      ) %>%
    replace_with_na(replace = list(names_numbers_schools = "N/A")) %>% 
    filter(!is.na(month) & !is.na(lead_organisation) & !is.na(indicator)) %>% 
    mutate(county = recode(county, 
                            "Tana_River" = "Tana River", 
                            "Homa_Bay" = "Homa Bay", 
                            "Home Bay" = "Homa Bay", 
                            "West_Pokot" = "West Pokot", 
                            "Taita_Taveta" = "Taita Taveta")) %>% 
    left_join(locations %>% 
                distinct(adm1_en, adm1_pcode),
               by = c("county" = "adm1_en")) %>% 
  mutate(indicator = case_when(
    str_detect(indicator, "in drought affected areas") ~ paste0("indicator 1 ", indicator), 
    str_detect(indicator, "feeding programmes") ~ paste0("indicator 2 ", indicator), 
    str_detect(indicator, "teaching materials") ~ paste0("indicator 3 ", indicator), 
    str_detect(indicator, "hygiene") ~ paste0("indicator 4 ", indicator), 
    str_detect(indicator, "educators trained on resilience") ~ paste0("indicator 5 ", indicator), 
    str_detect(indicator, "youth benefiting from resilience") ~ paste0("indicator 6 ", indicator), 
    TRUE ~ indicator
  )) %>% 
    mutate(month = fct_relevel(month, c("January", "February", "March", "April", 
                                        "May", "June", "July", "August", 
                                        "September", "October", "November", "December"))) %>% 
  mutate(implementing_partner = case_when(
    str_detect(implementing_partner, "AVSI") ~ "AVSI Foundation", 
    implementing_partner == "Action for sustainable change" ~ "Action for Sustainable Change", 
    str_detect(implementing_partner, "FCA|FINN|Finn") ~ "Finn Church Aid", 
    str_detect(implementing_partner, "LIFESKILL|Life skills|Lifeskills|LifeSkills|LISP") ~ "Lifeskill Promoters", 
    implementing_partner == "Missionary Sistrs of the catechism" ~ "Missionary Sisters of the Catechism", 
    str_detect(implementing_partner, "NRC|NORWEGIAN") ~ "Norwegian Refugee Council", 
    str_detect(implementing_partner, "SC|SCI|Save the Children") ~ "Save the Children", 
    str_detect(implementing_partner, "World Vision") ~ "World Vision", 
    TRUE ~ implementing_partner
  ))%>% 
  mutate(indicator_short = case_when(
    indicator == "indicator 1 # of children and youth accessing ECD spaces/schools in drought affected areas" ~ 
      "1. Access ECD spaces/schools", 
    indicator == "indicator 2 # of schools/ECD spaces with feeding programmes" ~ 
      "2. Feeding programmes", 
    # Not sure what's wrong with the text of this indicator
    str_detect(indicator, "3") ~ "3. Teaching materials", 
    indicator == "indicator 4 # of schools with adequate quantites of safe water for drinking and personal hygiene" ~ 
      "4. Safe water, personal hygiene", 
    indicator == "indicator 5 # of teachers / educators trained on resilience enhancing programmes (MHPSS, DRR & Life Skills, etc)" ~ 
      "5. Educators resilience enhancing", 
    indicator == "indicator 6 # of children and youth benefiting from resilience enhancing programmes (MHPSS, DRR & Life Skills, etc)" ~ 
      "6. Children resilience enhancing"
  ))
    
  } 

```


What you can do next is to use tidytext to separate out a list of schools 

## Output

```{r warning = FALSE}
  
# Change the folder to the correct one
# The files will be read from here 
file_list <- list.files(path = path_5ws, 
                        recursive = TRUE, 
                        pattern = "\\.xlsx$", 
                        full.names = TRUE) 

# Filtering out open? files? Not sure
file_list <- file_list[!str_detect(file_list, "\\~")]

# Ok, got the for loop to work
# Initialise empty data frame
eie <- data.frame()


# Loop
for (i in 1:length(file_list)) {
  eie_i <- read_5ws(file_list[i])
  eie <- rbind(eie, eie_i)
}


# Write 
eie %>% 
  write_csv("./data/eie_5ws.csv")

```



## Checks

```{r}
eie %>% 
  mutate(total_reached_check = rowSums(.[16:19], na.rm = TRUE)) %>% 
  filter(total_reached_check != total_reached)

```

```{r}
eie %>% 
  filter(str_detect(indicator, "2")) %>% 
  select(county, names_numbers_schools, activity, schools, comments)

eie_5ws %>% 
  filter(str_detect(names_numbers_schools, "Kalobeyei Settlement"))

eie_5ws %>% 
  filter(str_detect(names_numbers_schools, "Kalobeyei Settlement"))

eie %>% 
  filter(!is.na(names_numbers_schools) & is.na(schools)) %>% 
  select(names_numbers_schools, schools)

eie %>% filter(str_detect(names_numbers_schools, "econdary")) %>% 
  select(names_numbers_schools, activity, comments)
```


```{r}
eie_5ws %>% 
  group_by(indicator, county, month) %>% 
  summarise(beneficiaries = sum(total_reached, na.rm = TRUE), 
            schools = sum(schools, na.rm = TRUE)) %>% 
  ungroup() %>% 
  mutate(month = fct_relevel(month, c("January", "February", "March", "April", 
                                        "May", "June", "July", "August", 
                                        "September", "October", "November", "December"))) %>% 
  arrange(indicator, month)

eie %>% 
  filter(month == "May" & str_detect(indicator, "1")) %>% 
  filter(implementing_partner == "Save the Children" | lead_organisation == "Save the Children")

eie %>% 

```


# Targets


```{r}
targets <- read_excel(file_list[3], 
           sheet = "Reach by Indicator", 
           skip = 1) %>% 
  clean_names() %>% 
  select(x1, x2, 
         contains("target")) %>% 
  setNames(c("county", 
           "county_overall_target", 
           "indicator1_target_children", 
           "indicator2_target", 
           "indicator3_target_people", 
           "indicator4_target", 
           "indicator5_target_educators", 
           "indicator6_target_children")) %>% 
  slice(0:23) %>% 
  separate(indicator2_target, into = c("indicator2_target_schools", "indicator2_target_children"), sep = "\\(") %>%
  separate(indicator4_target, into = c("indicator4_target_schools", "indicator4_target_children"), sep = "\\(") %>%
  mutate_at(vars(indicator2_target_schools, 
                 indicator2_target_children, 
                 indicator4_target_schools, 
                 indicator4_target_children), 
            ~ parse_number(.)) %>% 
  pivot_longer(cols = indicator1_target_children:indicator6_target_children, 
               names_to = "type", 
               values_to = "county_target") %>% 
  mutate(number = parse_number(type), 
         indicator = case_when(
           str_detect(type, "1") ~ "number of children and youth accessing ECD spaces/schools in drought-affected areas", 
           str_detect(type, "2") ~ "number of schools/ECD spaces with feeding programmes", 
           str_detect(type, "3") ~ "number of learners and teachers with learning and teaching materials", 
           str_detect(type, "4") ~ "number of schools with adequate quantities of safe water for drinking and personal hygiene", 
           str_detect(type, "5") ~ "number of teachers/educaotrs trained on resilience-enhancing programmes", 
           str_detect(type, "6") ~ "number of children and youth benefiting from resiliece-enhancing programmes")) %>% 
  mutate(target_unit = str_sub(type, start = 19L)) %>% 
  select(county, number, indicator, county_target, target_unit, county_overall_target)

targets %>% 
  write_csv("./data/eie_targets.csv")
```


```{r}
eie_5ws %>% 
  count(sub_county, 
        sort = TRUE)

library(flextable)
eie %>% 
  mutate(sub_counties = ifelse(str_detect(sub_county, "\\,|All|all") | is.na(sub_county), 
                        "mixed", "correct")) %>% 
  group_by(sub_counties) %>% 
  summarise(rows = n(), 
            beneficiaries = sum(total_reached, na.rm = TRUE)) %>% 
  mutate(percent = round(beneficiaries / sum(beneficiaries, na.rm = TRUE) * 100, digits = 2)) %>% 
  flextable() %>% 
  theme_zebra() %>% 
  set_table_properties(layout = "autofit", width = .8)

eie %>% 
  mutate(sub_counties = ifelse(str_detect(sub_county, "\\,|All|all"), 
                        "mixed", "correct")) %>% 
  filter(sub_counties == "mixed") %>% 
  group_by(lead_organisation, sub_county, month) %>% 
  filter(lead_organisation == "Save the Children") %>% 
  summarise(beneficiaries = sum(total_reached)) %>% 
  flextable() %>% 
  theme_zebra() %>% 
  set_table_properties(layout = "autofit", width = .99)
  
```

```{r}
eie_5ws %>% 
  mutate(sub_counties = ifelse(str_detect(sub_county, "\\,|All|all"), 
                        "mixed", "correct")) %>% 
  filter(sub_counties == "mixed") %>% 
  count(implementing_partners)

eie_5ws %>% 
  filter(implementing_partners == "Save the Children") %>% 
  mutate(sub_counties = ifelse(str_detect(sub_county, "\\,|All|all"), 
                        "mixed", "correct")) %>% 
  count(sub_counties, wt = total_reached)

eie_5ws %>% count(implementing_partners, sort = TRUE)

eie_5ws %>% filter(county == "Wajir") %>% count(implementing_partners, sub_county, sort = TRUE)

eie_5ws %>% 
  filter(implementing_partners == "Save the Children" & county == "Wajir" & 
           str_detect(indicator, "1")) %>% 
  group_by(month, lead_organisation, sub_county) %>% 
  summarise(reached = total_reached) %>% 
  flextable() %>% 
  theme_zebra() %>% 
  set_caption("Extract from 5Ws -- Save the Children, Indicator 1")
```

