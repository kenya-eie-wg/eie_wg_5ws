---
title: "Untitled"
output: html_document
date: '2023-06-23'
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(magrittr)
library(viridis)
library(here)
library(sf)
library(googlesheets4)
library(flextable)
library(writexl)
library(naniar)
library(anytime)
library(widyr)
library(tidytext)

theme_set(theme_light())

# Disabling scientific notation
options(scipen = 100)

# This should just be a standard R function
`%out%` <- Negate(`%in%`)

# Function for transposing df
transpose_df <- function(df) {
  t_df <- data.table::transpose(df)
  colnames(t_df) <- rownames(df)
  rownames(t_df) <- colnames(df)
  t_df <- t_df %>%
    tibble::rownames_to_column(.data = .) %>%
    tibble::as_tibble(.)
  return(t_df)
}

# Scaling functions 
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}

# Mode function 
mode <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))]
}



```


#  Data

## Locations

```{r}
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx", 
                      sheet = "ADM2") %>% 
  clean_names()
```

## Path to 4Ws

```{r}

# This is the folder where the 4Ws from the current round are stored

path_5ws <- "C:/Users/seanywng/Documents/R/eie_wg_5ws/data/5Ws_2023"


```

# 5Ws

## Column names

```{r}
names_5ws <- c(
  "month", 
  "lead_organisation", 
  "organisation_type", 
  "donor",
  "sector", 
  "education_level", 
  "indicator", 
  "activity", 
  "implementing_partner", 
  "county", 
  "sub_county", 
  "names_numbers_schools", 
  "start_date", 
  "end_date", 
  "activity_status", 
  "boys", 
  "girls", 
  "men", 
  "women", 
  "beneficiary_type", 
  "total_reached", 
  "comments"
)
```

# Read_5Ws() 


```{r}


read_5ws <- function(file) {
  
  read_excel(file, 
             sheet = "5W_Data_Entry", 
             skip = 2, 
             col_types = c(
               "text", "text", "text", "text", "text", "text", 
               "text", "text", "text", "text", "text", "text", 
               "date", "date", 
               "text", 
               "numeric", "numeric", "numeric", "numeric", 
               "text", "numeric", "text"
             )) %>% 
    setNames(names_5ws) %>% 
    mutate(source = file_list[i]) %>%
    # Doing this here, but you can always move this to the end
    # But this is the assumption that these lists are correct
    mutate( 
      names_numbers_schools = case_when(
        names_numbers_schools == "All the Juniour Secondary Schools (JSS) in Kalobeyei Settlement" ~
        "Kalobeyei Settlement, Friends, Joy, Morningstar, Future and Bright Junior Secondary Secondary schools.",
        names_numbers_schools == "All the main Secondary Schools in Kalobeyei Settlement" ~ 
        "Kalobeyei Settlement, Friends, Joy, Morningstar, Future and Bright Junior Secondary Secondary schools.", 
        TRUE ~ names_numbers_schools)) %>% 
    mutate(
      schools = case_when(
      activity == "Provision of school meals to learners in the 8 primary schools and 7 pre-primary schools in Kalobeyei Settlement." ~ 15,
      names_numbers_schools == "22 refugee schools and 11 host community schools" ~ 33,
      comments == "37 schools supported with 115 handwashing kits" ~ 37,
      str_detect(names_numbers_schools, "\n") ~ str_count(names_numbers_schools, "\n") + 1,
      str_detect(names_numbers_schools, "\\,") ~ str_count(names_numbers_schools, "\\,|and|&") + 1, 
      str_detect(names_numbers_schools, "and") ~ str_count(names_numbers_schools, "and") + 1,
      str_detect(names_numbers_schools, "\\;") ~ str_count(names_numbers_schools, "\\;") + 1, 
      !is.na(names_numbers_schools) ~ parse_number(names_numbers_schools), 
      TRUE ~ NA_integer_), 
      schools = ifelse(!is.na(names_numbers_schools) & is.na(schools), 1, schools)
      ) %>%
    replace_with_na(replace = list(names_numbers_schools = "N/A")) %>% 
    filter(!is.na(month) & !is.na(lead_organisation) & !is.na(indicator)) %>% 
    mutate(county = recode(county, 
                            "Tana_River" = "Tana River", 
                            "Homa_Bay" = "Homa Bay", 
                            "Home Bay" = "Homa Bay", 
                            "West_Pokot" = "West Pokot", 
                            "Taita_Taveta" = "Taita Taveta")) %>% 
    left_join(locations %>% 
                distinct(adm1_en, adm1_pcode),
               by = c("county" = "adm1_en")) %>% 
  mutate(indicator = case_when(
    str_detect(indicator, "in drought affected areas") ~ paste0("indicator 1 ", indicator), 
    str_detect(indicator, "feeding programmes") ~ paste0("indicator 2 ", indicator), 
    str_detect(indicator, "teaching materials") ~ paste0("indicator 3 ", indicator), 
    str_detect(indicator, "hygiene") ~ paste0("indicator 4 ", indicator), 
    str_detect(indicator, "educators trained on resilience") ~ paste0("indicator 5 ", indicator), 
    str_detect(indicator, "youth benefiting from resilience") ~ paste0("indicator 6 ", indicator), 
    TRUE ~ indicator
  )) %>% 
    mutate(month = fct_relevel(month, c("January", "February", "March", "April", 
                                        "May", "June", "July", "August", 
                                        "September", "October", "November", "December"))) %>%
    mutate_at(vars(implementing_partner, lead_organisation), ~
                case_when(
                  str_detect(., "AVSI") ~ "AVSI Foundation",
                  . == "Action for sustainable change" ~ "Action for Sustainable Change",
                  str_detect(., "FCA|FINN|Finn") ~ "Finn Church Aid",
                  str_detect(
                    ., "LIFESKILL|Life skills|Lifeskills|LifeSkills|LISP|LISFESKILLS PROMOTERS|LIFESKIILS PROMOTERS") ~
                    "Lifeskill Promoters",
                  str_detect(., "ChildFund|Childfund") ~ "ChildFund Kenya", 
                  . == "Missionary Sistrs of the catechism" ~ "Missionary Sisters of the Catechism",
                  str_detect(., "NRC|NORWEGIAN") ~ "Norwegian Refugee Council",
                  str_detect(., "SC|SCI|Save the Children") ~ "Save the Children",
                  str_detect(., "World Vision|World vision|WVK BAMBA AP") ~ "World Vision Kenya",
                  str_detect(., "Nawiri Children Program") ~ "Nawiri Children Development Program",
                  str_detect(., "ERIKs development Partner") ~ "ERIKs Development Partner",
                  str_detect(., "Servants of the poor") ~ "Servants of the Poor",
                  str_detect(., "Evangelizing sisters of mary") ~ "Evangelizing Sisters of Mary",
                  TRUE ~ .
                ))%>% 
    # Think about how you want to resolve the disaggregation issues 
    mutate(indicator = ifelse(
      !is.na(boys) & str_detect(activity, "Training of children"),
        "indicator 6 # of children and youth benefiting from resilience enhancing programmes (MHPSS, DRR & Life Skills, etc)", indicator)) %>%
     mutate(indicator_short = case_when(
    indicator == "indicator 1 # of children and youth accessing ECD spaces/schools in drought affected areas" ~ 
      "1. Access ECD spaces/schools", 
    indicator == "indicator 2 # of schools/ECD spaces with feeding programmes" ~ 
      "2. Feeding programmes", 
    # Not sure what's wrong with the text of this indicator
    str_detect(indicator, "3") ~ "3. Teaching materials", 
    indicator == "indicator 4 # of schools with adequate quantites of safe water for drinking and personal hygiene" ~ 
      "4. Safe water, personal hygiene", 
    indicator == "indicator 5 # of teachers / educators trained on resilience enhancing programmes (MHPSS, DRR & Life Skills, etc)" ~ 
      "5. Educators resilience enhancing", 
    indicator == "indicator 6 # of children and youth benefiting from resilience enhancing programmes (MHPSS, DRR & Life Skills, etc)" ~ 
      "6. Children resilience enhancing"
  )) %>% 
    filter(!is.na(county) & total_reached > 0) %>% 
    mutate(sector_reached = ifelse(str_detect(indicator_short, "1|2|5|6"), 
                                 total_reached, 
                                 0)) %>% 
    mutate(source = str_remove(source, 
                             "C:/Users/seanywng/Documents/R/eie_wg_5ws/data/5Ws_2023/")) %>% 
    filter(!is.na(indicator))
    
  } 

```



What you can do next is to use tidytext to separate out a list of schools 

## Output

```{r warning = FALSE}
  
# Change the folder to the correct one
# The files will be read from here 
file_list <- list.files(path = path_5ws, 
                        recursive = TRUE, 
                        pattern = "\\.xlsx$", 
                        full.names = TRUE) 

# Filtering out open? files? Not sure
file_list <- file_list[!str_detect(file_list, "\\~")]

# Ok, got the for loop to work
# Initialise empty data frame
eie <- data.frame()


# Loop
for (i in 1:length(file_list)) {
  eie_i <- read_5ws(file_list[i])
  eie <- rbind(eie, eie_i)
}



```




## Checks

```{r}
eie %>% 
  mutate(total_reached_check = rowSums(.[16:19], na.rm = TRUE)) %>% 
  filter(total_reached_check != total_reached)

eie %>% 
  filter(is.na(adm1_pcode)) %>% 
  distinct(county)

eie %>% 
  filter(is.na(indicator))

```


## Write 

```{r}
# Write 
eie %>% 
  write_csv("./data/eie_5ws.csv")
```




# Targets


```{r}
targets <- read_excel("./data/5Ws_2023/Consolidated 5W_ Education_Mar 2023 Report.xlsx", 
           sheet = "Reach by Indicator", 
           skip = 1) %>% 
  clean_names() %>% 
  select(x1, x2, 
         contains("target")) %>% 
  setNames(c("county", 
           "county_overall_target", 
           "indicator1_target_people", 
           "indicator2_target", 
           "indicator3_target_people", 
           "indicator4_target", 
           "indicator5_target_people", 
           "indicator6_target_people")) %>% 
  slice(0:23) %>% 
  separate(indicator2_target, into = c("indicator2_target_schools", "indicator2_target_people"), sep = "\\(") %>%
  separate(indicator4_target, into = c("indicator4_target_schools", "indicator4_target_people"), sep = "\\(") %>%
  mutate_at(vars(indicator2_target_schools, 
                 indicator2_target_people, 
                 indicator4_target_schools, 
                 indicator4_target_people), 
            ~ parse_number(.)) %>% 
  pivot_longer(cols = indicator1_target_people:indicator6_target_people, 
               names_to = "type", 
               values_to = "county_target") %>% 
  replace_na(list(county_target = 0)) %>% 
  mutate(indicator_number = parse_number(type), 
         indicator = case_when(
           str_detect(type, "1") ~ "number of children and youth accessing ECD spaces/schools in drought-affected areas", 
           str_detect(type, "2") ~ "number of schools/ECD spaces with feeding programmes", 
           str_detect(type, "3") ~ "number of learners and teachers with learning and teaching materials", 
           str_detect(type, "4") ~ "number of schools with adequate quantities of safe water for drinking and personal hygiene", 
           str_detect(type, "5") ~ "number of teachers/educaotrs trained on resilience-enhancing programmes", 
           str_detect(type, "6") ~ "number of children and youth benefiting from resiliece-enhancing programmes")) %>% 
  mutate(target_unit = str_sub(type, start = 19L)) %>% 
  select(county, indicator_number, indicator, county_target, target_unit, county_overall_target) %>% 
  mutate(indicator_short = case_when(
    
    indicator_number == 1 ~ 
      "1. Access ECD spaces/schools", 
    indicator_number == 2 ~ 
      "2. Feeding programmes", 
    # Not sure what's wrong with the text of this indicator
    str_detect(indicator, "teaching materials") ~ "3. Teaching materials", 
    indicator_number == 4 ~ 
      "4. Safe water, personal hygiene", 
    indicator_number == 5 ~ 
      "5. Educators resilience enhancing", 
    indicator_number == 6 ~ 
      "6. Children resilience enhancing"
  )) %>%    
  mutate(county = recode(county, 
                         "Tharaka Nithi" = "Tharaka-Nithi")) %>% 
  left_join(locations %>% 
                distinct(adm1_en, adm1_pcode),
               by = c("county" = "adm1_en"))  



targets %>% 
  write_csv("./data/eie_targets.csv")
```

# IPC

```{r}

ipc_names <- read_excel("./data/KE-IPC-Analysis-Acute-Food-Insecurity-February-2023--SRA-.xlsx", 
           skip = 10) %>% 
  slice(1) %>% 
  clean_names() %>% 
  transpose_df() %>% 
  rename(a = `1`, 
         rowname_a = rowname) %>% 
  cbind(read_excel("./data/KE-IPC-Analysis-Acute-Food-Insecurity-February-2023--SRA-.xlsx", 
           skip = 9) %>% 
          clean_names() %>%
          slice(1) %>%
          transpose_df() %>%
          fill(`1`) %>%
          rename(b = `1`,
                 rowname_b = rowname) %>% 
          mutate(b = ifelse(is.na(b), "missing", b))) %>% 
  mutate(colnames = paste0(a, " ", b)) %>% 
  pull(colnames)

ipc <- read_excel("./data/KE-IPC-Analysis-Acute-Food-Insecurity-February-2023--SRA-.xlsx", 
           skip = 11) %>%
  setNames(ipc_names)  %>%
  clean_names() %>% 
  select_all(~ gsub("_missing", "", .)) %>% 
  rename(county = area) %>% 
  filter(!is.na(county)) %>%
  select(3, 10, 22:24) %>% 
  mutate(county = str_to_title(county), 
         county = recode(county, 
                         "Lamu County" = "Lamu", 
                         "Tharaka" = "Tharaka-Nithi", 
                         "Taita" = "Taita Taveta")) %>% 
  left_join(locations %>% 
              distinct(county = adm1_en, adm1_pcode), 
            by = "county") 

 
  write_csv("./data/ipc.csv")

```



```{r}
eie %>% 
  filter(activity_status == "Completed") %>% 
  group_by(county, month, indicator_short) %>% 
  summarise(reach = sum(total_reached)) %>% 
  pivot_wider(names_from = month, values_from = reach) %>% 
  right_join(targets %>% 
               filter(!is.na(indicator_short)) %>%
               select(county, county_target, indicator_short), 
             by = c("county", "indicator_short")) %>% 
  write_csv("reached_by_indicator_flat.csv")
```





