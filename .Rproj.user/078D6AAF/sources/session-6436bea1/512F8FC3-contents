---
title: "Kenya Education in Emergencies Working Group -- Drought 5Ws Report"
date:  "30 September 2023"
output:
  html_document:
    code_download: yes
    theme: readable
    toc: yes
    toc_depth: 4
    toc_float: yes
    number_sections: no
    collapsed: no
always_allow_html: yes
params: 
  report_date: "30 September 20233"
  report_month: "September"
---

```{css, echo=FALSE}

#TOC::before {
  content: "";
  display: block;
  height: 50px;
  margin: 2em 20px 40px 20px;
  background-image: url("https://raw.githubusercontent.com/kenya-eie-wg/eie_wg_5ws/main/eie_wg_logo.png");
  background-size: contain;
  background-position: center center;
  background-repeat: no-repeat;
}
```

```{=html}
<style>
    body .main-container {
        max-width: 1280px;
    }
</style>
```



```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(janitor)
library(scales)
library(viridis)
library(patchwork)
library(DT)
library(here)
library(sf)
library(plotly)
library(flextable)
library(ggrepel)
library(anytime)
library(tidytext)
library(ggsflabel)

theme_set(theme_light())

# Installation of mdepriv package
# install package devtools if not yet installed
#   install.packages("devtools")

# install fast from GitHub without vignettes 
#   devtools::install_github("a-benini/mdepriv", build_vignettes = FALSE

# Alternatively, follow the instructions here: https://a-benini.github.io/mdepriv/

# disabling scientific notation
options(scipen = 100)

`%out%` <- Negate(`%in%`)

# function for transposing df
transpose_df <- function(df) {
  t_df <- data.table::transpose(df)
  colnames(t_df) <- rownames(df)
  rownames(t_df) <- colnames(df)
  t_df <- t_df %>%
    tibble::rownames_to_column(.data = .) %>%
    tibble::as_tibble(.)
  return(t_df)
}

# scaling functions 
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}

# mode function 
mode <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))]
}

# Fixing dates
name_to_date <- function(x) {
  lubridate::mdy(ifelse(x %in% c(month.name, month.abb), paste0(x, "/01/2023"), x))
}
```




```{r data}
# Run this if you need to
# rmarkdown::render(input = "5Ws_cleaning_script.Rmd")

locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx", 
                      sheet = "ADM2") %>% 
  clean_names()

sitrep_table <- read_xlsx("./data/sitrep_results_table.xlsx") %>% 
  clean_names()

targets <- read_csv("./data/eie_targets.csv")

pcode1_shape <- 
  sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp", 
          quiet = TRUE) %>% 
  clean_names()

ipc <- read_csv("./data/ipc.csv")

partner_list_counties <- read_csv("./data/partner_list_counties.csv") %>% 
  filter(partner_type == "implementing_partner")

eie <- read_csv("./data/eie_5ws.csv") %>% 
  filter(!is.na(indicator_short)) %>% 
  replace_na(list(boys = 0, girls = 0, men = 0, women = 0)) %>% 
  # Total reached of indicator 1 is only boys and girls 
  mmutate(total_reached = case_when(
    str_detect(indicator, "children and youth accessing ECD spaces/schools in drought affected areas") ~ 
      boys + girls,
    str_detect(indicator, "5 #|5.1|5.2|5.3") ~ men + women,
    str_detect(indicator, "children and youth benefiting from resilience enhancing programmes") ~ boys + girls, 
                                   TRUE ~ total_reached)) %>% 
  filter(month %out% c("October", "November", "December"))
```




[Previous months' reports](landing_page.html) 

<br><br><br>

# 1. Summary

## 1.1 Summary table

```{r}
sum_stats <- eie %>%  
  summarise(partners = n_distinct(implementing_partner), 
            counties = n_distinct(county), 
            reached = sum(sector_reached, na.rm = TRUE), 
            men = sum(men[str_detect(indicator_short, "2|5") & 
                            activity_status == "Completed"], na.rm = TRUE), 
            women = sum(women[str_detect(indicator_short, "2|5") &
                                activity_status == "Completed"], na.rm = TRUE), 
            boys = sum(boys[str_detect(indicator_short, "1|2|6") &
                              activity_status == "Completed"], na.rm = TRUE), 
            girls = sum(girls[str_detect(indicator_short, "1|2|6") & 
                                activity_status == "Completed"], na.rm = TRUE), 
            reached_1256 = sum(total_reached[str_detect(indicator_short, "1|2|5|6") & 
                                               activity_status == "Completed"], na.rm = TRUE), 
            latest_reached = sum(total_reached[str_detect(indicator_short, "1|2|5|6") & 
                                               activity_status == "Completed"& 
                                                 month %in% params$report_month], 
                                 na.rm = TRUE))



```

A total of `r sum_stats %>% pull(reached_1256) %>% format(big.mark = ",")` persons have been reached by EiE activities in 2023, of which `r sum_stats %>% pull(boys) %>% format(big.mark = ",")` were boys, `r sum_stats %>% pull(girls) %>% format(big.mark = ",")` were girls, `r sum_stats %>% pull(men) %>% format(big.mark = ",")` were men and `r sum_stats %>% pull(women) %>% format(big.mark = ",")` were women. Below is a summary by indicator. 



<br>

```{r}


summary_table <- eie %>% 
  filter(activity_status == "Completed") %>% 
  mutate(latest_reached = ifelse(month %in% params$report_month, total_reached, NA_integer_)) %>% 
  group_by(indicator_short) %>% 
  summarise(partners = n_distinct(implementing_partner), 
            counties = n_distinct(adm1_pcode),   
            latest_reached = sum(latest_reached, na.rm = TRUE), 
            total_reached = sum(total_reached, na.rm = TRUE)) %>% 
  adorn_totals("row",,,, latest_reached, total_reached) %>% 
  mutate(partners = ifelse(indicator_short == "Total", sum_stats$partners, partners), 
         counties = ifelse(indicator_short == "Total", sum_stats$counties, counties), 
         total_reached = ifelse(indicator_short == "Total", 
                                sum_stats$reached_1256, 
                                total_reached), 
         latest_reached = ifelse(indicator_short == "Total", 
                                 sum_stats$latest_reached, 
                                 latest_reached)) %>% 
  left_join(targets %>% 
              filter(target_unit == "people") %>%
              group_by(indicator_short) %>%
              summarise(target = sum(county_target)), 
            by = "indicator_short") %>% 
  filter(!is.na(indicator_short)) %>% 
  mutate(target = ifelse(indicator_short == "Total", 
                         targets %>% distinct(county, county_overall_target) %>% {sum(.$county_overall_target)}, 
                         target), 
         target = ifelse(is.na(target), 0, target)) %>% 
  mutate(pc = round(total_reached / target * 100, digits = 2), 
         pc = ifelse(is.infinite(pc), 100, pc)) %>%
  select(indicator = indicator_short, partners, counties, 
         latest_reached, total_reached, target, `%target_reached` = pc) %>%
  select_all(~ gsub("latest", 
                    params$report_month, .)) %>%
  select_all(~ str_to_title(.))  

summary_table %>% 
  flextable() %>% 
  theme_zebra() %>% 
  set_caption(paste0("Summary statistics for EIE 5Ws reporting, ", params$report_date)) %>% 
  set_table_properties(layout = "autofit", width = .99) %>% 
  fontsize(i = 1:7, j = 1, size = 9) %>% 
  fontsize(size = 9, part = "header") %>% 
  footnote(i = 1, j = 2, part = "header", ref_symbols = "1", 
           as_paragraph("Only implementing partners")) %>% 
  footnote(i = 8, j = 5:6, ref_symbols = "2", 
           as_paragraph("Only the sum of indicators 1, 2, 5 and 6"))

  
```

<br><br><br>


## 1.2 By sex and age

```{r}
eie %>% 
  mutate(indicator_short = fct_rev(indicator_short)) %>%
  mutate_at(vars(boys, girls, men, women), ~ replace_na(., 0)) %>% 
  mutate_at(vars(men, women), ~ ifelse(str_detect(indicator, "1"), 0, .)) %>% 
  group_by(indicator_short) %>% 
  summarise_at(vars(boys, girls, men, women), ~ sum(., na.rm = TRUE)) %>% 
  mutate(total_reached = boys + girls + men + women, 
         female = (women + girls) / total_reached, 
         male = (boys + men) / total_reached) %>%
  pivot_longer(cols = c(female, male), 
               names_to = "sex", 
               values_to = "pc") %>% 
  ggplot(aes(x = pc, y = indicator_short, fill = sex)) + 
  geom_col() + 
  geom_text(aes(x = pc, 
                y = indicator_short, 
                label = percent(pc, accuracy = 1)),
            position = position_stack(vjust = .5), 
            colour = "white") +
  scale_fill_manual(values = c("#443983", "#35b779")) +
  scale_x_continuous(labels = percent) + 
  labs(x = "", 
       y = "", 
       title = "Sex breakdown by indicator")  

```

<br>

Only Indicator 6, Children benefiting from resilience-enhancing programming, sees a higher proportion of females reached over men. 

<br>

```{r fig.height=6}
eie %>% 
  filter(activity_status == "Completed") %>% 
  mutate_at(vars(boys, girls, men, women), ~ replace_na(., 0)) %>%
  group_by(indicator_short) %>% 
  summarise_at(vars(men, women, boys, girls), ~ sum(.)) %>% 
  filter(!is.na(indicator_short)) %>% 
  pivot_longer(cols = c(men, women, boys, girls), 
               names_to = "type", 
               values_to = "reached") %>% 
  mutate(type = str_to_title(type), 
         type = fct_relevel(type, c("Men", "Women", "Boys", "Girls"))) %>% 
  # You're just filtering them out manually
  mutate(reached = case_when(
    str_detect(indicator_short, "5") & type == "Boys" ~ 0, 
    str_detect(indicator_short, "5") & type == "Girls" ~ 0, 
    str_detect(indicator_short, "6") & type == "Men" ~ 0, 
    str_detect(indicator_short, "6") & type == "Women" ~ 0, 
    str_detect(indicator_short, "1") & type == "Men" ~ 0, 
    str_detect(indicator_short, "1") & type == "Women" ~ 0,
    TRUE ~ reached
  )) %>% 
  ggplot(aes(y = type, x = reached, fill = type)) + 
  geom_col() + 
  geom_text(aes(label = comma(reached)), 
            hjust = "inward") +
  theme(legend.position = "none",
        strip.text = element_text(size = 8, face = "bold"),
        strip.background = element_rect(fill = "#212121"), 
        plot.title = element_text(size = 12)) +
  scale_x_continuous(labels = number_format(scale = 1 / 1000, suffix = "K")) +
  scale_fill_viridis_d(begin = .2, end = .9) + 
  facet_wrap(~ indicator_short, scales = "free_x") + 
  labs(x = "Persons reached", 
       y = "", 
       title = "Reach disaggregated by sex, age and indicator")


```



<br><br><br>


## 1.3 By county

```{r}
cum_pc<- eie %>% 
  filter(activity_status == "Completed") %>% 
  group_by(county) %>% 
  summarise(beneficiaries = sum(sector_reached, na.rm = TRUE)) %>% 
  left_join(targets %>% 
              distinct(county, target = county_overall_target), 
            by = "county") %>% 
  replace_na(list(target = 0)) %>% 
  mutate(pc_ben = round(beneficiaries / sum(beneficiaries) * 100, digits = 2), 
         pc_target = round(target / sum(target) * 100, digits = 2)) %>% 
  arrange(desc(beneficiaries)) %>% 
  mutate(cum_pc = cumsum(pc_ben))
```

`r cum_pc %>% filter(county == "Turkana") %>% pull(cum_pc)`% of all beneficiaries reached originate from Turkana, though it only has `r cum_pc %>% filter(county == "Turkana") %>% pull(pc_target)`% of the targeted population. 

<br>

```{r}

eie %>% 
  group_by(adm1_pcode, county) %>% 
  summarise(sector_reached = sum(sector_reached, na.rm = TRUE), 
            .groups = "drop") %>% 
  left_join(targets %>% 
              distinct(county, target = county_overall_target), 
            by = "county") %>%  
  mutate(county = fct_reorder(county, sector_reached)) %>% 
  filter(sector_reached > 0 | target > 0) %>% 
  left_join(ipc %>% 
              select(adm1_pcode, percent_phase_p3), 
            by = "adm1_pcode") %>% 
  pivot_longer(cols = c(sector_reached, target), 
               names_to = "type", 
               values_to = "value") %>% 
  mutate(type = ifelse(type == "target", "County Target", "Sector Reached")) %>% 
  replace_na(list(value = 0)) %>%
  ggplot(aes(x = value, 
             y = county, 
             fill = percent_phase_p3)) + 
  geom_col() + 
  geom_text(aes(label = comma(value)), hjust = "inward") +
  scale_x_continuous(labels = number_format(scale = 1/1000, suffix = "K")) +
  scale_fill_viridis(option = "inferno", begin = .4, , direction = -1, 
                     labels = percent) + 
  facet_grid(~ type, scales = "free_x", space = "free") + 
  labs(fill = "% IPC3+",
       x = "Target/reached", 
       y = "", 
       caption = "Colours refer to % of county population in IPC phase 3 or above. Homa Bay was not assessed as part of the IPC Classification", 
       title = "Comparison between targets and reached") +
  theme(# axis.text.x = element_text(size = 5, angle = 60, hjust = 1, vjust = 1), 
        # axis.text.y = element_text(size = 5), 
        strip.text = element_text(size = 8, face = "bold"),
        strip.background = element_rect(fill = "#212121"), 
        plot.caption = element_text(hjust = .5))
```

IPC data extracted from [here](https://www.ipcinfo.org/ipc-country-analysis/details-map/en/c/1156210/?iso3=KEN).

<br><br><br>



# 2. Progress by indicator

## 2.1 Overall progress



```{r fig.height=6}

line_values <- eie %>% 
  filter(activity_status == "Completed") %>% 
  group_by(indicator_short) %>% 
  summarise(beneficiaries = sum(total_reached, na.rm = TRUE))


eie %>% 
  filter(activity_status == "Completed") %>% 
  mutate(date = name_to_date(month)) %>% 
  group_by(date, indicator_short) %>% 
  summarise(beneficiaries = sum(total_reached, na.rm = TRUE)) %>% 
  group_by(indicator_short) %>% 
  arrange(date) %>% 
  mutate(cum_ben = cumsum(beneficiaries)) %>% 
  arrange(indicator_short) %>%  
  ggplot(aes(x = date, y = cum_ben, colour = indicator_short)) + 
  # geom_smooth(size = 1, alpha = .3, span = .5, linetype = 0) +
  stat_smooth(geom = "line", apha = .3, span = .5) + 
  geom_point() + 
  geom_text(aes(label = comma(beneficiaries)), 
            x = -Inf, y = Inf, hjust = -0.15, vjust = 0.9, data = line_values) + 
  scale_x_date(date_breaks = "1 month", date_labels = "%b") + 
  scale_y_continuous(labels = comma) + 
  facet_wrap(~indicator_short, scales = "free_y") + 
  theme(legend.position = "none",
        axis.text.x = element_text(size = 6, angle = 60, hjust = 1, vjust = 1), 
        axis.text.y = element_text(size = 6), 
        strip.text = element_text(size = 6, face = "bold"),
        strip.background = element_rect(fill = "#212121"), 
        plot.title = element_text(size = 12)) + 
  labs(x = "", 
       y = "Cumulative interventions", 
       title = paste0("Monthly progress by activity, ", params$report_date),
       subtitle = "Indicator subtotal in the top-left corner of each facet") 
  


```
<br>

The rate of increase in the number of beneficiaries reached has yet to plateau, with only indicators 2 and 6 seeing slight slowdowns in the number of beneficiaries reached each month. 

<br><br><br>


## 2.2 Reached by indicator

```{r}
ben_plot <- function(tbl) {
  tbl %>% 
    group_by(indicator_short, county) %>% 
    summarise(beneficiaries = sum(total_reached, na.rm = TRUE)) %>% 
    full_join(targets %>% 
                filter(target_unit %in% c("people")) %>% 
                select(county, indicator_short, county_target), 
              by = c("county", "indicator_short")) %>% 
    replace_na(list(county_target = 0, 
                    beneficiaries = 0)) %>% 
    filter(beneficiaries > 0) %>% 
    mutate(pc = ifelse(county_target > 0, beneficiaries / county_target, 0), 
           county = fct_reorder(county, beneficiaries)) %>%  
    ggplot(aes(x = beneficiaries, y = county)) + 
    geom_col(aes(fill = pc)) +
    geom_text(aes(label = comma(beneficiaries), hjust = "inward"), 
              colour = "grey45") + 
    scale_x_continuous(labels = comma) +
    scale_fill_viridis(direction = -1, option = "mako", 
                       labels = percent, begin = .2) + 
    labs(title = "Beneficiaries reached", 
         x = "Beneficiaries", 
         y = "", 
         fill = "% reached") 
}

pc_plot <- function(tbl) {
  tbl %>% 
    group_by(indicator_short, county) %>% 
    summarise(beneficiaries = sum(total_reached, na.rm = TRUE)) %>% 
    full_join(targets %>% 
                filter(target_unit %in% c("people")) %>% 
                select(county, indicator_short, county_target), 
              by = c("county", "indicator_short")) %>% 
    replace_na(list(county_target = 0, 
                    beneficiaries = 0)) %>% 
    filter(beneficiaries > 0) %>% 
    mutate(pc = ifelse(county_target > 0, beneficiaries / county_target, 0), 
           county = fct_reorder(county, beneficiaries)) %>%  
    ggplot(aes(x = pc, y = county)) + 
    geom_col(aes(fill = pc)) + 
    geom_text(aes(label = percent(pc, accuracy = .1), hjust = "inward"), 
              colour = "grey45") + 
    scale_x_continuous(labels = percent) +
    scale_fill_viridis(direction = -1, option = "mako", 
                       labels = percent, begin = .2) + 
    labs(title = "% of target reached", 
         x = "% reached", 
         y = "", 
         fill = "% reached") +
    
    theme(legend.position = "none")
}
```

```{r}
targets_range <- targets %>% 
  filter(target_unit == "people") %>% 
  group_by(indicator_short, county) %>% 
  summarise(target = sum(county_target, na.rm = TRUE)) %>% 
  pivot_wider(names_from = indicator_short, values_from = target) %>% 
  setNames(c("county", "indicator1", "indicator2", "indicator3", "indicator4", 
             "indicator5", "indicator6"))

indicator_map <- function(tbl, indicator_number, plot_option) {
  
  plot_option <- enquo(plot_option)
  indicator_number <- enquo(indicator_number)
  
  tbl %>% 
    filter(str_detect(indicator_short, !!indicator_number)) %>% 
    group_by(indicator_short, county) %>% 
    summarise(beneficiaries = sum(total_reached, na.rm = TRUE)) %>% 
    full_join(targets %>% 
                filter(str_detect(indicator_short, !!indicator_number)) %>%
                filter(target_unit %in% c("people")) %>% 
                select(county, indicator_short, county_target), 
              by = c("county", "indicator_short")) %>% 
    replace_na(list(county_target = 0, 
                    beneficiaries = 0)) %>% 
    filter(beneficiaries > 0 | county_target > 0)  %>% 
    mutate(pc = ifelse(county_target > 0, beneficiaries / county_target, 0), 
           county = fct_reorder(county, beneficiaries)) %>% 
    naniar::replace_with_na(list(beneficiaries = 0)) %>% 
    left_join(locations %>% 
                distinct(county = adm1_en, adm1_pcode), 
              by = "county") %>% 
    right_join(pcode1_shape, by = c("adm1_pcode")) %>%
    st_as_sf() %>% 
    ggplot() + 
    geom_sf(size = .01, colour = "grey70", 
            aes(fill = !!plot_option)) + 
    geom_sf_text(aes(label = comma(!!plot_option)),
                 colour = "grey45",
                 size = 2.5) + 
    scale_fill_viridis_c(labels = comma, 
                         na.value = "grey80") + 
    theme_void() + 
    theme(plot.title = element_text(hjust = .5))
    
}

```

### 2.2.1 Access to ECD spaces/schools

<br>

```{r}
summary_table %>% 
  filter(str_detect(Indicator, "1")) %>% 
  flextable() %>% 
  set_caption(paste0("EiE Indicator 1, as of ", params$report_date)) %>% 
  set_table_properties(layout = "autofit", width = .99)

```

<br>

```{r}
indicator_map(eie, "1", county_target) +
  labs(title = "Targets", 
       fill = "Target")  + 
indicator_map(eie, "1", beneficiaries) + 
  scale_fill_viridis(limits = range(targets_range$indicator1), 
                     labels = comma, 
                     na.value = "grey80") + 
  labs(title = "Total reached", 
       fill = "Reached") +
  plot_annotation(title = "1. Access to ECD spaces/schools, target and reached", 
                  subtitle = paste0("As of ", params$report_date)) 

```



<br>

In `r params$report_month` 2023, `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "1") & activity_status == "Completed") %>% {sum(.$total_reached, na.rm = TRUE)} %>% format(big.mark = ",")` persons were reached by interventions contributing to this indicator, of which `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "1") & activity_status == "Completed") %>% {sum(.$boys, na.rm = TRUE)} %>% format(big.mark = ",")` were boys and `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "1") & activity_status == "Completed") %>% {sum(.$girls, na.rm = TRUE)} %>% format(big.mark = ",")` were girls.

<br>

```{r fig.height=6}
eie %>% 
  filter(str_detect(indicator_short, "1")) %>% 
  pc_plot() +

eie %>% 
  filter(str_detect(indicator_short, "1")) %>% 
  ben_plot() +
  
plot_annotation(title = "1. Children accessing ECD spaces/schools, target and reached", 
                subtitle = "Counties without targets have 0% reached")

 
```

<br><br><br>

### 2.2.2 School feeding programmes

<br>

```{r}
summary_table %>% 
  filter(str_detect(Indicator, "2")) %>% 
  flextable() %>% 
  set_caption(paste0("EiE Indicator 2, as of ", params$report_date)) %>% 
  set_table_properties(layout = "autofit", width = .99) 
```

<br>

```{r}
indicator_map(eie, "2", county_target) +
  labs(title = "Targets", 
       fill = "Target")  + 
indicator_map(eie, "2", beneficiaries) + 
  scale_fill_viridis(limits = range(targets_range$indicator2), 
                     labels = comma, 
                     na.value = "grey80") + 
  labs(title = "Total reached", 
       fill = "Reached") +
  plot_annotation(title = "2. School feeding programmes, target and reached", 
                  subtitle = paste0("As of ", params$report_date)) 

  
```

<br>

In `r params$report_month` 2023, `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "2") & activity_status == "Completed") %>% {sum(.$total_reached, na.rm = TRUE)} %>% format(big.mark = ",")` persons were reached by interventions contributing to this indicator, of which `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "2") & activity_status == "Completed") %>% {sum(.$boys, na.rm = TRUE)} %>% format(big.mark = ",")` were boys and `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "2") & activity_status == "Completed") %>% {sum(.$girls, na.rm = TRUE)} %>% format(big.mark = ",")` were girls. 

<br>

```{r}
eie %>% 
  filter(str_detect(indicator_short, "2")) %>% 
  pc_plot() +

eie %>% 
  filter(str_detect(indicator_short, "2")) %>% 
  ben_plot() +
  
plot_annotation(title = "2. Feeding programmes", 
                subtitle = "Counties without targets have 0% reached")


```


<br><br><br>

### 2.2.3 Teaching and learning materials

<br>

```{r}
summary_table %>% 
  filter(str_detect(Indicator, "3")) %>% 
  flextable() %>% 
  set_caption(paste0("EiE Indicator 3, as of ", params$report_date)) %>% 
  set_table_properties(layout = "autofit", width = .99) 
```

<br>

```{r}
indicator_map(eie, "3", county_target) +
  labs(title = "Targets", 
       fill = "Target")  + 
indicator_map(eie, "3", beneficiaries) + 
  scale_fill_viridis(limits = range(targets_range$indicator3), 
                     labels = comma, 
                     na.value = "grey80") + 
  labs(title = "Total reached", 
       fill = "Reached") +
  plot_annotation(title = "3. Teaching and learning materials, target and reached", 
                  subtitle = paste0("As of ", params$report_date)) 

  
```

<br>

In `r params$report_month` 2023, `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "3") & activity_status == "Completed") %>% {sum(.$total_reached, na.rm = TRUE)} %>% format(big.mark = ",")` persons were reached by interventions contributing to this indicator, of which `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "3") & activity_status == "Completed") %>% {sum(.$boys, na.rm = TRUE)} %>% format(big.mark = ",")` were boys,  `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "3") & activity_status == "Completed") %>% {sum(.$girls, na.rm = TRUE)} %>% format(big.mark = ",")` were girls, `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "3") & activity_status == "Completed") %>% {sum(.$men, na.rm = TRUE)} %>% format(big.mark = ",")` were men and `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "3") & activity_status == "Completed") %>% {sum(.$women, na.rm = TRUE)} %>% format(big.mark = ",")` were women. 

<br>

```{r}
eie %>% 
  filter(str_detect(indicator_short, "3")) %>% 
  pc_plot() +

eie %>% 
  filter(str_detect(indicator_short, "3")) %>% 
  ben_plot() +
  
plot_annotation(title = "3. Teaching materials", 
                subtitle = "Counties without targets have 0% reached")


```

<br><br><br>

### 2.2.4 Safe water, personal hygiene

<br>

```{r}
summary_table %>% 
  filter(str_detect(Indicator, "4")) %>% 
  flextable() %>% 
  set_caption(paste0("EiE Indicator 4, as of ", params$report_date)) %>% 
  set_table_properties(layout = "autofit", width = .99) 
```

<br>

```{r}
indicator_map(eie, "4", county_target) +
  labs(title = "Targets", 
       fill = "Target")  + 
indicator_map(eie, "4", beneficiaries) + 
  scale_fill_viridis(limits = range(targets_range$indicator4), 
                     labels = comma, 
                     na.value = "grey80") + 
  labs(title = "Total reached", 
       fill = "Reached") +
  plot_annotation(title = "4. Safe water, personal hygiene, target and reached", 
                  subtitle = paste0("As of ", params$report_date)) 

  
```

<br>

In `r params$report_month` 2023, `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "4") & activity_status == "Completed") %>% {sum(.$total_reached, na.rm = TRUE)} %>% format(big.mark = ",")` persons were reached by interventions contributing to this indicator, of which `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "4") & activity_status == "Completed") %>% {sum(.$boys, na.rm = TRUE)} %>% format(big.mark = ",")` were boys and `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "4") & activity_status == "Completed") %>% {sum(.$girls, na.rm = TRUE)} %>% format(big.mark = ",")` and were girls. 

<br>

```{r}
eie %>% 
  filter(str_detect(indicator_short, "4")) %>% 
  pc_plot() +

eie %>%
  filter(str_detect(indicator_short, "4")) %>% 
  ben_plot() +
  
plot_annotation(title = "4. Safe water, personal hygiene", 
                subtitle = "Counties without % reached have no target")

```

<br><br><br>

### 2.2.5 Educators trained in resilience enhancing programmes

<br>

```{r}
summary_table %>% 
  filter(str_detect(Indicator, "5")) %>% 
  flextable() %>% 
  set_caption(paste0("EiE Indicator 5, as of ", params$report_date)) %>% 
  set_table_properties(layout = "autofit", width = .99) 
```

<br>

```{r}
indicator_map(eie, "5", county_target) +
  scale_fill_viridis_c(na.value = "grey80", limits = range(c(0, 1813))) + 
  labs(title = "Targets", 
       fill = "Target")  + 
indicator_map(eie, "5", beneficiaries) + 
  labs(title = "Total reached", 
       fill = "Reached") +
  plot_annotation(title = "5. Educators trained in resilience enhancing programmes, target and reached", 
                  subtitle = paste0("As of ", params$report_date)) 

```

<br>

In `r params$report_month` 2023, `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "5") & activity_status == "Completed") %>% {sum(.$total_reached, na.rm = TRUE)} %>% format(big.mark = ",")` persons were reached by interventions contributing to this indicator, of which `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "5") & activity_status == "Completed") %>% {sum(.$men, na.rm = TRUE)} %>% format(big.mark = ",")` were men and `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "5") & activity_status == "Completed") %>% {sum(.$women, na.rm = TRUE)} %>% format(big.mark = ",")` and were women. 


<br>

```{r}
eie %>% 
  filter(str_detect(indicator_short, "5")) %>% 
  pc_plot() +

eie %>%
  filter(str_detect(indicator_short, "5")) %>% 
  ben_plot() +
  
plot_annotation(title = "5. Educators trained in resilience enhancing programmes", 
                subtitle = "Counties without % reached have no target")


```

<br><br><br>

### 2.2.6 Children benefited from resilience enhancing programmes

<br>

```{r}
summary_table %>% 
  filter(str_detect(Indicator, "6")) %>% 
  flextable() %>% 
  set_caption(paste0("EiE Indicator 6, as of ", params$report_date)) %>% 
  set_table_properties(layout = "autofit", width = .99) 
```

<br>

```{r}
indicator_map(eie, "6", county_target) +
  labs(title = "Targets", 
       fill = "Target")  + 
indicator_map(eie, "6", beneficiaries) + 
  scale_fill_viridis(limits = range(targets_range$indicator6), 
                     labels = comma, 
                     na.value = "grey80") + 
  labs(title = "Total reached", 
       fill = "Reached") +
  plot_annotation(title = "6. Children benefited from resilience enhancing programmes, target and reached", 
                  subtitle = paste0("As of ", params$report_date)) 

```

<br>

In `r params$report_month` 2023, `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "6") & activity_status == "Completed") %>% {sum(.$total_reached, na.rm = TRUE)} %>% format(big.mark = ",")` persons were reached by interventions contributing to this indicator, of which `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "6") & activity_status == "Completed") %>% {sum(.$boys, na.rm = TRUE)} %>% format(big.mark = ",")` were boys and `r eie %>% filter(month %in% params$report_month & str_detect(indicator_short, "6") & activity_status == "Completed") %>% {sum(.$girls, na.rm = TRUE)} %>% format(big.mark = ",")` and were girls 


<br>

```{r}
eie %>% 
  filter(str_detect(indicator_short, "5")) %>% 
  pc_plot() +

eie %>%
  filter(str_detect(indicator_short, "5")) %>% 
  ben_plot() +
  
plot_annotation(title = "6. Children benefited from resilience enhancing programmes", 
                subtitle = "Counties without % reached have no target")


```


<br><br><br>

# 3. Partners

## 3.1 Operational presence of implementing partners

<br>



```{r warning=FALSE, fig.height=7}

partner_map <- eie %>% 
  mutate_at(vars(boys, girls, men, women), ~ replace_na(., 0)) %>% 
  group_by(adm1_pcode, county) %>% 
  summarise(partners = n_distinct(implementing_partner), 
            lead_organisation = n_distinct(lead_organisation),
            activities = n_distinct(indicator_short), 
            women = sum(women[activity_status == "Completed"], na.rm = TRUE),
            men = sum(men[activity_status == "Completed"], na.rm = TRUE), 
            boys = sum(boys[activity_status == "Completed"], na.rm = TRUE), 
            girls = sum(girls[activity_status == "Completed"], na.rm = TRUE),
            total_reached = sum(total_reached[activity_status == "Completed"], na.rm = TRUE),
            .groups = "drop") %>% 
  mutate(reached = men + women + boys + girls, 
         male = men + boys, 
         female = women + girls, 
         male_pc = round(male / reached * 100), 
         female_pc = round(female / reached * 100)) %>%  
  left_join(partner_list_counties %>%
              distinct(adm1_pcode, acronym) %>%
              group_by(adm1_pcode) %>%
              arrange(acronym) %>% 
              summarise(acronym = paste0(acronym, collapse = ", ")) %>%
              mutate(acronym = str_replace_all(acronym, "ChildFund", "CF"), 
                     n_partners = str_count(acronym, ",") + 1), 
            by = "adm1_pcode") %>% 
  left_join(pcode1_shape, 
             by = "adm1_pcode") %>% 
  st_as_sf() %>% 
  ggplot() + 
  geom_sf(size = .01, colour = "grey70", 
          data = pcode1_shape) + 
  geom_sf(size = .01, colour = "grey70", 
          aes(fill = partners, 
              colour = adm1_pcode)) + 
  geom_sf_text(aes(label = paste0( 
    county, "\n", partners), 
                   text = paste0(
                "County: ", county, "\n", 
                "Partners: ", n_partners, "\n", 
                "Reached: ", comma(total_reached), "\n", 
                "Female_reached%: ", female_pc, "%", "\n", 
                "Male_reached%: ", male_pc, "%", 
                "\n", "\n", 
                acronym)), 
                size = 3, colour = "gray40") + 
  scale_fill_viridis_c(option = "mako", 
                     direction = -1,
                     breaks = c(1, 3, 6, 10)) + 
  
  theme_void() + 
  # Remember that you need guide_colorbar, not guide_legend
  # guides(fill = guide_colorbar(reverse = TRUE)) + 
  labs(title = "KENYA: Education in Emergencies Working Group operational presence", 
       subtitle = paste0("as of ", params$report_date), 
       fill = "Partners")


ggplotly(partner_map, tooltip = c("text")) %>% 
  layout(title = list(text = paste0(sum_stats$partners, " EiE implementing partners across ", sum_stats$counties, " counties",
                                    "<br>",
                                    "<sup>",
                                    "as of ", params$report_date, "; mouse over county name for more details", "</sup>")))
```


<br>


Below is an interactive table which adds detail to the map above, serving additional information for coordination -- allowing interested parties to search by county or partner. 

 The column `#Activities` refers to the number of Education activities implemented by said partner in each county. Each column can be sorted with the arrows next to each column name. Each column can also be filtered by typing into the search bar below each column name. Only completed activities have been included.
 
```{r}
eie %>%
  mutate_at(vars(implementing_partner, lead_organisation), ~ 
              str_sub(., end = 50L)) %>%  
  group_by(county, adm1_pcode, implementing_partner, lead_organisation) %>% 
  summarise(reached = sum(total_reached[activity_status == "Completed"], na.rm = TRUE), 
            activities = n_distinct(indicator_short)) %>% 
  select(county, implementing_partner, lead_organisation, reached, `#activities` = activities, adm1_pcode) %>% 
  write_csv("./data/breakdown_by_county_partner.csv")
```
 

Download the dataset from the table below [here](https://github.com/kenya-eie-wg/eie_wg_5ws/blob/main/data/breakdown_by_county_partner.csv). 

<br>

```{r}
eie %>%
  mutate_at(vars(implementing_partner, lead_organisation), ~ 
              str_sub(., end = 50L)) %>%  
  group_by(county, adm1_pcode, implementing_partner, lead_organisation) %>% 
  summarise(reached = sum(total_reached[activity_status == "Completed"], na.rm = TRUE), 
            activities = n_distinct(indicator_short)) %>% 
  left_join(partner_list_counties %>% 
              distinct(partner, acronym), 
            by = c("implementing_partner" = "partner")) %>% 
  select(county, lead_organisation, implementing_partner, acronym, reached, `#activities` = activities, adm1_pcode) %>% 
  select_all(., ~ str_to_title(.)) %>% 
  datatable(options = list(pageLength = 10, scrollX = TRUE), 
            filter = list(position = "top", clear = FALSE),
            caption = htmltools::tags$caption(style = 'caption-side: top; 
                                    text-align: center; font-size:120% ;',
                                    "Breakdown by county and partner")) %>% 
  formatStyle(0, target = "row", lineHeight = "80%", fontSize = "80%") %>% 
  formatCurrency(c("Reached"), 
                 currency = "", interval = 3, mark = ",") %>% 
  formatRound(c("Reached"), digits = 0)

```


<br><br><br>

## 3.2 Summary by implementing partner


The table below breaks down persons reached by partner. 

<br>


```{r}
eie %>% 
  filter(activity_status == "Completed") %>% 
  mutate(implementing_partner = str_sub(implementing_partner, end = 50L)) %>% 
  group_by(implementing_partner) %>% 
  summarise(reached = sum(total_reached, na.rm = TRUE), 
            counties = n_distinct(adm1_pcode), 
            activities = n_distinct(indicator_short)) %>% 
  filter(reached > 0) %>% 
  mutate(`%total` = round(reached / sum(reached) * 100, digits = 2)) %>% 
  arrange(desc(reached)) %>% 
  flextable() %>% 
  theme_zebra() %>% 
  set_caption("Summary by implementing partner") %>% 
  set_table_properties(layout = "autofit", width = .9) %>% 
  footnote(i = 1, j = 2, ref_symbols = "1", part = "header",
           as_paragraph("All indicators as opposed only indicators 1, 2, 5 and 6")) %>% 
  footnote(i = 1, j = 5, ref_symbols = "2", part = "header",
           as_paragraph("Percentage of reached for all indicators"))


```


<br><br><br>


# 4. Schools and education level

## 4.1 Schools

The number of schools reached by school feeding programmes and WASH in schools interventions to-date are: 

<br>

```{r}
eie %>% 
  filter(activity_status == "Completed") %>% 
  filter(!is.na(number_schools)) %>%
  mutate(date = name_to_date(month)) %>% 
  filter(str_detect(indicator_short, "2|4")) %>%
  group_by(indicator_short, date) %>% 
  summarise(schools = sum(number_schools), 
            reached = sum(total_reached)) %>% 
  arrange(date) %>% 
  mutate(cum_schools = cumsum(schools)) %>% 
  arrange(indicator_short) %>% 
  ggplot(aes(x = date, y = cum_schools), 
         vjust = -.5) + 
  scale_x_date(date_breaks = "1 month", date_labels = "%b") + 
  geom_line(size = 1.7, 
            aes(colour = indicator_short)) + 
  geom_text(aes(label = comma(cum_schools)), vjust = -.5) +
  scale_colour_manual(values = c("#31688e", "#d8576b")) +
  theme(legend.position = "bottom") + 
  labs(x = "", 
       y = "Cumulative number of schools reached", 
       title = "Schools reached by feeding programmes and WASH in schools", 
       colour = "Indicator")


```

<br>

However, reporting the overall number of schools reached by all EiE interventions is much more challenging.

Whilst all partners working on indicators 2 and 4 submitted the number of schools they were working in, the same is not true for the other indicators. Only indicators 2 and 4 require the reporting of the number of schools. 


<br><br><br>






# 5. Reference maps and tables 

## 5.1 Reference maps 

IPC data extracted from [here](https://www.ipcinfo.org/ipc-country-analysis/details-map/en/c/1156210/?iso3=KEN). 

```{r fig.width=12, fig.height=10}
ipc %>% 
  right_join(pcode1_shape, 
             by = "adm1_pcode") %>% 
  st_as_sf() %>% 
  ggplot() + 
  geom_sf(size = .01, colour = "grey70", 
          aes(fill = number_phase_p3)) + 
  geom_sf_text(aes(label = comma(number_phase_p3)), 
               colour = "grey45", 
               size = 2) + 
  scale_fill_viridis_c(labels = comma, 
                       na.value = "grey80", 
                       option = "inferno", begin = .4, , direction = -1) + 
  theme_void() + 
  labs(fill = "At least\nphase 3", 
       title = "Number of persons IPC Phase 3 or above", 
       subtitle = "Source: https://www.ipcinfo.org/") + 

ipc %>% 
  right_join(pcode1_shape, 
             by = "adm1_pcode") %>% 
  st_as_sf() %>% 
  ggplot() + 
  geom_sf(size = .01, colour = "grey70", 
          aes(fill = percent_phase_p3)) + 
  geom_sf_text(aes(label = percent(percent_phase_p3)), 
               colour = "grey45", 
               size = 2) + 
  scale_fill_viridis_c(labels = percent, 
                       na.value = "grey80", 
                       option = "inferno", begin = .4, , direction = -1) + 
  theme_void() + 
  labs(fill = "% IPC phase 3", 
       title = "Percentage of population IPC Phase 3 or above", 
       subtitle = "Source: https://www.ipcinfo.org/") +


eie %>% 
  filter(activity_status == "Completed") %>% 
  group_by(adm1_pcode) %>% 
  summarise(sector_reached = sum(sector_reached, na.rm = TRUE)) %>% 
  filter(sector_reached > 0) %>% 
  right_join(pcode1_shape, 
             by = "adm1_pcode") %>% 
  st_as_sf() %>% 
  ggplot() + 
  geom_sf(size = .01, colour = "grey70", 
          aes(fill = sector_reached)) + 
  geom_sf_text(aes(label = comma(sector_reached)), 
               colour = "grey45", 
               size = 2) + 
  scale_fill_viridis(labels = comma, 
                       na.value = "grey80", 
                     option = "mako", 
                     direction = -1, 
                     begin = .2,
                     trans = "log", 
                     breaks = c(0, 100, 1000, 10000, 100000, 339483)) + 
  theme_void() + 
  labs(fill = "Sector\nreached", 
       title = "Persons reached by the Education Sector") + 
  
eie %>% 
  filter(activity_status == "Completed") %>% 
  group_by(adm1_pcode) %>% 
  summarise(reached = sum(sector_reached, na.rm = TRUE)) %>% 
  full_join(targets %>% 
              filter(target_unit == "people") %>%
              distinct(adm1_pcode, target = county_overall_target)) %>% 
  replace_na(list(reached = 0, target = 0)) %>% 
  mutate(pc = ifelse(target == 0, 0, reached / target)) %>% 
  right_join(pcode1_shape, 
             by = "adm1_pcode") %>% 
  st_as_sf() %>% 
  ggplot() +
  geom_sf(size = .01, colour = "grey70", 
          aes(fill = pc)) + 
  geom_sf_text(aes(label = percent(pc, accuracy = 1)), 
               colour = "grey45", 
               size = 2) + 
  scale_fill_viridis(labels = percent, 
                       na.value = "grey80",
                     option = "mako", 
                     direction = -1,
                     begin = .2) + 
  theme_void() + 
  labs(fill = "% of target", 
       title = "Percentage of EiE county target reached") +   

plot_layout(ncol = 2, 
            nrow = 2)
  
```

<br><br><br>


## 5.2 Reference table 

Download the EiE 5Ws data [here](https://github.com/kenya-eie-wg/eie_wg_5ws/blob/main/data/eie_5ws.csv)

As a refresher for the reference table below, the indicators are: 

<br>

```{r}
eie %>% 
  distinct(indicator) %>% 
  arrange(indicator) %>% 
  flextable() %>% 
  theme_zebra() %>% 
  set_table_properties(width = .85, layout = "autofit") %>% 
  fontsize(i = 1:6, j = 1, size = 9) 

```

<br>


```{r}
eie %>%
  mutate(implementing_partner = str_sub(implementing_partner, end = 50L), 
         indicator_number = parse_number(indicator_short)) %>%
  group_by(county, adm1_pcode, implementing_partner, indicator_number) %>% 
  summarise(reached = sum(total_reached, na.rm = TRUE)) %>% 
  select(county, implementing_partner, indicator = indicator_number, reached, adm1_pcode) %>% 
  datatable(options = list(pageLength = 10, scrollX = TRUE), 
            filter = list(position = "top", clear = FALSE),
            caption = htmltools::tags$caption(style = 'caption-side: top; 
                                    text-align: center; font-size:120% ;',
                                    "Breakdown by indicator, county and implementing partner")) %>% 
  formatStyle(0, target = "row", lineHeight = "80%", fontSize = "80%") %>% 
  formatCurrency(c("reached"), 
                 currency = "", interval = 3, mark = ",") %>% 
  formatRound(c("reached"), digits = 0)
```

<br><br><br>










